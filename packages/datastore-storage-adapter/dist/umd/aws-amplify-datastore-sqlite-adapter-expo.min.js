!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("@aws-amplify/core"),require("@aws-amplify/datastore"),require("expo-file-system"),require("expo-sqlite")):"function"==typeof define&&define.amd?define("aws-amplify-datastore-storage-adapter",["@aws-amplify/core","@aws-amplify/datastore","expo-file-system","expo-sqlite"],t):"object"==typeof exports?exports["aws-amplify-datastore-storage-adapter"]=t(require("@aws-amplify/core"),require("@aws-amplify/datastore"),require("expo-file-system"),require("expo-sqlite")):e["aws-amplify-datastore-storage-adapter"]=t(e["@aws-amplify/core"],e["@aws-amplify/datastore"],e["expo-file-system"],e["expo-sqlite"])}(self,((e,t,a,r)=>(()=>{"use strict";var s={374:t=>{t.exports=e},74:e=>{e.exports=t},889:e=>{e.exports=a},287:e=>{e.exports=r}},n={};function o(e){var t=n[e];if(void 0!==t)return t.exports;var a=n[e]={exports:{}};return s[e](a,a.exports,o),a.exports}o.d=(e,t)=>{for(var a in t)o.o(t,a)&&!o.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var i={};o.r(i),o.d(i,{default:()=>A});var c=o(374),d=o(74);const{USER:l,isNonModelConstructor:u,isModelConstructor:p}=d.utils;function m(e){if(null==e||["string","number","boolean"].includes(typeof e))return e;const t="object"==typeof e&&(Object.getPrototypeOf(e).constructor===Object||u(Object.getPrototypeOf(e).constructor)||p(Object.getPrototypeOf(e).constructor));return Array.isArray(e)||t?JSON.stringify(e):`${e}`}const h=e=>{if(!e.attributes||!e.attributes.length)return[];const t=e.attributes.find(d.isModelAttributeAuth);return t?t.properties.rules.filter((e=>e.ownerField||e.groupsField)).map((e=>e.ownerField||e.groupsField)).filter((t=>!Object.values(e.fields).find((e=>e.name===t)))):[]};function f(e,t){const a=(e=>Object.keys(e).map((e=>`"${e}"`)).join(", "))(e),[r,s]=(e=>{const t=Object.values(e).map(m);return[t.map((()=>"?")).join(", "),t]})(e);return[`INSERT INTO "${t}" (${a}) VALUES (${r})`,s]}function y(e,t){const[a,r]=(e=>{const t=[];return[Object.entries(e).filter((([e])=>"id"!==e)).map((([e,a])=>(t.push(m(a)),`"${e}"=?`))).join(", "),t]})(e);return[`UPDATE "${t}" SET ${a} WHERE id=?`,[...r,e.id]]}function w(e,t){return[`SELECT * FROM "${t}" WHERE "id" = ?`,[e]]}const b={eq:"=",ne:"!=",le:"<=",lt:"<",ge:">=",gt:">"},E={beginsWith:"= 1",contains:"> 0",notContains:"= 0",between:"BETWEEN"};function S(e){const t=[],a=[];return function e(t,a=[],r=[]){if((0,d.isPredicateGroup)(t)){const{type:s,predicates:n}=t;let o="",i=!1;switch(s){case"not":i=!0;break;case"and":o="AND";break;case"or":o="OR";break;default:throw new Error(`Invalid ${s}`)}const c=[];for(const t of n)e(t,c,r);a.push(`${i?"NOT":""}(${c.join(` ${o} `)})`)}else if((0,d.isPredicateObj)(t)){const[e,s]=(({field:e,operator:t,operand:a})=>{const r=function(e,t,a){if(null==a){if("eq"===t)return`"${e}" IS NULL`;if("ne"===t)return`"${e}" IS NOT NULL`}return null}(e,t,a);if(r)return[r,[]];const s=b[t];if(s)return[`"${e}" ${s} ?`,[a]];const n=E[t];let o;if(n){let r=[];switch(t){case"between":r=a,o=[`"${e}" ${n} ${r.map((e=>"?")).join(" AND ")}`,r];break;case"beginsWith":case"contains":case"notContains":o=[`instr("${e}", ?) ${n}`,[a]];break;default:throw new Error("Cannot map predicate to a valid WHERE clause")}return o}})(t);a.push(e),r.push(...s)}}(e,t,a),[`WHERE ${t.join(" ")}`,a]}const g={ASCENDING:"ASC",DESCENDING:"DESC"};function T(e,t,a,r,s){let n=`SELECT * FROM "${e}"`;const o=[];if(t&&t.predicates.length){const[e,a]=S(t);n+=` ${e}`,o.push(...a)}if(n+=` ${function(e=[]){const t=e.map((({field:e,sortDirection:t})=>`"${String(e)}" ${g[t]}`));return t.push(`_rowid_ ${g.ASCENDING}`),`ORDER BY ${t.join(", ")}`}(a)}`,r){const[e,t]=function(e,t=0){const a=[e];let r="LIMIT ?";if(t){const s=e*t;a.push(s),r+=" OFFSET ?"}return[r,a]}(r,s);n+=` ${e}`,o.push(...t)}return[n,o]}function O(e,t){return[`DELETE FROM "${t}" WHERE "id"=?`,[e]]}const{traverseModel:P,validatePredicate:$,isModelConstructor:N}=d.utils,v=new c.ConsoleLogger("DataStore");var R=o(889),C=o(287);const I="AmplifyDatastore",j=new c.ConsoleLogger("ExpoSQLiteDatabase"),A=new class{constructor(e){this.db=e}async setUp(e,t,a,r){if(this.initPromise)await this.initPromise;else{this.initPromise=new Promise(((e,t)=>{this.resolve=e,this.reject=t})),this.schema=e,this.namespaceResolver=t,this.modelInstanceCreator=a,this.getModelConstructorByModelName=r;try{Object.values(this.schema.namespaces.user.models).some((e=>Object.values(e.fields).some((e=>e.association?.hasOwnProperty("targetNames")))))&&v.error("The SQLite adapter does not support schemas using custom primary key. Set `graphQLTransformer.respectPrimaryKeyAttributesOnConnectionField in `amplify/cli.json` to false to disable custom primary key. To regenerate your API, add or remove an empty newline to your GraphQL schema (to change the computed hash) then run `amplify push`."),await this.db.init();const e=(s=this.schema,Object.keys(s.namespaces).flatMap((e=>{const t=s.namespaces[e],a=e===l;return Object.values(t.models).map((e=>function(e,t=!1){const a=h(e);let r=Object.values(e.fields).reduce(((t,a)=>{if((0,d.isGraphQLScalarType)(a.type)){if("id"===a.name)return[...t,'"id" PRIMARY KEY NOT NULL'];let e=`"${a.name}" ${function(e){switch(e){case"Boolean":case"Int":case"AWSTimestamp":return"INTEGER";case"ID":case"String":case"AWSDate":case"AWSTime":case"AWSDateTime":case"AWSEmail":case"AWSJSON":case"AWSURL":case"AWSPhone":case"AWSIPAddress":return"TEXT";case"Float":return"REAL";default:throw new Error(`unknown type ${e}`)}}(a.type)}`;return a.isRequired&&(e+=" NOT NULL"),[...t,`${e}`]}if((0,d.isModelFieldType)(a.type)){let r=`"${a.name}" TEXT`;if((0,d.isTargetNameAssociation)(a.association)&&!Object.values(e.fields).find((e=>e.name===a?.association?.targetName))){const e=a.isRequired?" NOT NULL":"";r+=`, "${a.association.targetName}" TEXT${e}`}return[...t,`${r}`]}let r=`"${a.name}" TEXT`;return a.isRequired&&(r+=" NOT NULL"),[...t,`${r}`]}),[]);return a.forEach((e=>{r.push(`${e} TEXT`)})),t&&(r=[...r,'"_version" INTEGER','"_lastChangedAt" INTEGER','"_deleted" INTEGER']),`CREATE TABLE IF NOT EXISTS "${e.name}" (${r.join(", ")});`}(e,a)))})));await this.db.createSchema(e),this.resolve()}catch(e){this.reject(e)}}var s}async clear(){await this.db.clear(),this.initPromise=void 0}async save(e,t){const a=Object.getPrototypeOf(e).constructor,{name:r}=a,s=P(a.name,e,this.schema.namespaces[this.namespaceResolver(a)],this.modelInstanceCreator,this.getModelConstructorByModelName),n=Object.values(s).map((({modelName:e,item:t,instance:a})=>({modelName:e,item:t,instance:a}))),[o,i]=w(e.id,r),c=await this.db.get(o,i);if(t&&c){const e=d.ModelPredicateCreator.getPredicates(t),{predicates:a,type:r}=e;if(!$(c,r,a)){const e="Conditional update failed";throw v.error(e,{model:c,condition:a}),new Error(e)}}const l=[],u=new Set;for await(const t of n){const{modelName:a,item:r,instance:s}=t,{id:n}=r,[o,i]=w(n,a),c=await this.db.get(o,i),p=void 0===c?d.OpType.INSERT:d.OpType.UPDATE,m=c?y(s,a):f(s,a);n!==e.id&&p!==d.OpType.INSERT||(u.add(m),l.push([s,p]))}return await this.db.batchSave(u),l}async load(e,t,a){const r=this.schema.namespaces[e].relationships[t].relationTypes,s=r.map((({modelName:e})=>e)),n=this.getModelConstructorByModelName(e,t);return 0===s.length?a.map((e=>this.modelInstanceCreator(n,e))):a.map((e=>{for(const t of r)delete e[t.fieldName];return this.modelInstanceCreator(n,e)}))}async query(e,t,a){const{name:r}=e,s=this.namespaceResolver(e),n=t&&d.ModelPredicateCreator.getPredicates(t),o=a&&a.sort&&d.ModelSortPredicateCreator.getPredicates(a.sort),i=a&&a.limit,c=i&&a.page,l=n&&this.idFromPredicate(n),u=await(async()=>{if(l){const e=await this.getById(r,l);return e?[e]:[]}const[e,t]=T(r,n,o,i,c);return this.db.getAll(e,t)})();return this.load(s,e.name,u)}async getById(e,t){const[a,r]=w(t,e);return await this.db.get(a,r)}idFromPredicate(e){const{predicates:t}=e,a=1===t.length&&t.find((e=>(0,d.isPredicateObj)(e)&&"id"===e.field&&"eq"===e.operator));return a&&a.operand}async queryOne(e,t=d.QueryOne.FIRST){const{name:a}=e,[r,s]=function(e,t){return e===d.QueryOne.FIRST?[`SELECT * FROM ${t} ORDER BY _rowid_ LIMIT 1`,[]]:[`SELECT * FROM ${t} ORDER BY _rowid_ DESC LIMIT 1`,[]]}(t,a),n=await this.db.get(r,s);return n&&this.modelInstanceCreator(e,n)}async delete(e,t){if(N(e)){const a=e,r=this.namespaceResolver(a),{name:s}=a,n=t&&d.ModelPredicateCreator.getPredicates(t),o=T(s,n),i=function(e,t){let a=`DELETE FROM "${e}"`;const r=[];if(t&&t.predicates.length){const[e,s]=S(t);a+=` ${e}`,r.push(...s)}return[a,r]}(s,n),c=await this.db.selectAndDelete(o,i),l=await this.load(r,a.name,c);return[l,l]}{const a=e,r=Object.getPrototypeOf(a).constructor,{name:s}=r;if(t){const[e,r]=w(a.id,s),n=await this.db.get(e,r);if(void 0===n){const e="Model instance not found in storage";return v.warn(e,{model:a}),[[a],[]]}const o=d.ModelPredicateCreator.getPredicates(t),{predicates:i,type:c}=o;if(!$(n,c,i)){const e="Conditional update failed";throw v.error(e,{model:n,condition:i}),new Error(e)}const[l,u]=O(a.id,s);return await this.db.save(l,u),[[a],[a]]}{const[e,t]=O(a.id,s);return await this.db.save(e,t),[[a],[a]]}}}async batchSave(e,t){const{name:a}=e,r=[],s=[],n=new Set,o=new Set,i=new Set;for(const i of t){const t=P(e.name,this.modelInstanceCreator(e,i),this.schema.namespaces[this.namespaceResolver(e)],this.modelInstanceCreator,this.getModelConstructorByModelName),{id:c,_deleted:l}=i,{instance:u}=t.find((({instance:e})=>e.id===c));if(l){const e=O(u.id,a);o.add(e),r.push([i,d.OpType.DELETE])}else{const e=w(c,a);n.add(e),s.push(u)}}return(await this.db.batchQuery(n)).forEach(((e,t)=>{if(void 0===e){const e=f(s[t],a);i.add(e),r.push([s[t],d.OpType.INSERT])}else{const e=y(s[t],a);i.add(e),r.push([s[t],d.OpType.UPDATE])}})),await this.db.batchSave(i,o),r}}(new class{async init(){this.db||(this.db=(0,C.openDatabase)(I))}createSchema(e){return this.executeStatements(e)}async clear(){try{j.debug("Clearing database"),await this.closeDB(),await(0,R.deleteAsync)(`${R.documentDirectory}SQLite/${I}`),j.debug("Database cleared")}catch(e){j.warn("Error clearing the database.",e),this.init()}}async get(e,t){return(await this.getAll(e,t))[0]}getAll(e,t){return new Promise(((a,r)=>{this.db.readTransaction((s=>{s.executeSql(e,t,((e,t)=>{a(t.rows._array||[])}),((e,t)=>(r(t),j.warn(t),!0)))}))}))}save(e,t){return new Promise(((a,r)=>{this.db.transaction((s=>{s.executeSql(e,t,(()=>{a(null)}),((e,t)=>(r(t),j.warn(t),!0)))}))}))}batchQuery(e=new Set){return new Promise(((t,a)=>{const r=t,s=a;this.db.transaction((async t=>{try{const a=await Promise.all([...e].map((([e,a])=>new Promise(((r,s)=>{t.executeSql(e,a,((e,t)=>{r(t.rows._array[0])}),((e,t)=>(s(t),j.warn(t),!0)))})))));r(a)}catch(e){s(e),j.warn(e)}}))}))}batchSave(e=new Set,t){return new Promise(((a,r)=>{const s=a,n=r;this.db.transaction((async a=>{try{await Promise.all([...e].map((([e,t])=>new Promise(((r,s)=>{a.executeSql(e,t,(()=>{r(null)}),((e,t)=>(s(t),j.warn(t),!0)))}))))),t&&await Promise.all([...t].map((([e,t])=>new Promise(((r,s)=>{a.executeSql(e,t,(()=>{r(null)}),((e,t)=>(s(t),j.warn(t),!0)))}))))),s(null)}catch(e){n(e),j.warn(e)}}))}))}selectAndDelete(e,t){const[a,r]=e,[s,n]=t;return new Promise(((e,t)=>{const o=e,i=t;this.db.transaction((async e=>{try{const t=await new Promise(((t,s)=>{e.executeSql(a,r,((e,a)=>{t(a.rows._array||[])}),((e,t)=>(s(t),j.warn(t),!0)))}));await new Promise(((t,a)=>{e.executeSql(s,n,(()=>{t(null)}),((e,t)=>(a(t),j.warn(t),!0)))})),o(t)}catch(e){i(e),j.warn(e)}}))}))}executeStatements(e){return new Promise(((t,a)=>{const r=t,s=a;this.db.transaction((async t=>{try{await Promise.all(e.map((e=>new Promise(((a,r)=>{t.executeSql(e,[],(()=>{a(null)}),((e,t)=>(r(t),!0)))}))))),r(null)}catch(e){s(e),j.warn(e)}}))}))}async closeDB(){this.db&&(j.debug("Closing Database"),await this.db._db.close(),j.debug("Database closed"),this.db=void 0)}});return i})()));
//# sourceMappingURL=aws-amplify-datastore-sqlite-adapter-expo.min.js.map