{"version":3,"file":"aws-amplify-pubsub.min.js","mappings":"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","sources":["webpack:///webpack/universalModuleDefinition","webpack:///./dist/esm/vendor/paho-mqtt.js","webpack:///external umd \"aws_amplify_core\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///./dist/esm/Providers/constants.mjs","webpack:///./dist/esm/types/PubSub.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getSignedHeaders.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/constants.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getSigningValues.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getFormattedDates.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCredentialScope.mjs","webpack:///./node_modules/tslib/tslib.es6.mjs","webpack:///./node_modules/@aws-crypto/sha256-js/build/module/constants.js","webpack:///./node_modules/@aws-crypto/sha256-js/build/module/RawSha256.js","webpack:///./node_modules/@aws-crypto/util/build/module/convertToBuffer.js","webpack:///./node_modules/@aws-crypto/util/node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js","webpack:///./node_modules/@aws-crypto/sha256-js/build/module/jsSha256.js","webpack:///./node_modules/@aws-crypto/util/build/module/isEmptyData.js","webpack:///./node_modules/@smithy/util-hex-encoding/dist-es/index.js","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/dataHashHelpers.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalHeaders.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalQueryString.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalUri.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getHashedPayload.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getSignature.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalRequest.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getStringToSign.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getSigningKey.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/utils/amplifyUrl/index.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Signer/DateUtils.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Signer/Signer.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/signRequest.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/presignUrl.mjs","webpack:///./node_modules/rxjs/dist/esm5/internal/util/isFunction.js","webpack:///./node_modules/rxjs/dist/esm5/internal/util/UnsubscriptionError.js","webpack:///./node_modules/rxjs/dist/esm5/internal/util/createErrorClass.js","webpack:///./node_modules/rxjs/dist/esm5/internal/util/arrRemove.js","webpack:///./node_modules/rxjs/dist/esm5/internal/Subscription.js","webpack:///./node_modules/rxjs/dist/esm5/internal/config.js","webpack:///./node_modules/rxjs/dist/esm5/internal/scheduler/timeoutProvider.js","webpack:///./node_modules/rxjs/dist/esm5/internal/util/reportUnhandledError.js","webpack:///./node_modules/rxjs/dist/esm5/internal/util/noop.js","webpack:///./node_modules/rxjs/dist/esm5/internal/NotificationFactories.js","webpack:///./node_modules/rxjs/dist/esm5/internal/util/errorContext.js","webpack:///./node_modules/rxjs/dist/esm5/internal/Subscriber.js","webpack:///./node_modules/rxjs/dist/esm5/internal/symbol/observable.js","webpack:///./node_modules/rxjs/dist/esm5/internal/util/identity.js","webpack:///./node_modules/rxjs/dist/esm5/internal/Observable.js","webpack:///./node_modules/@aws-amplify/core/dist/esm/Logger/types.mjs","webpack:///./node_modules/rxjs/dist/esm5/internal/util/pipe.js","webpack:///./node_modules/@aws-amplify/core/dist/esm/Logger/ConsoleLogger.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/constants.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/errors/AmplifyError.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Hub/index.mjs","webpack:///./node_modules/uuid/dist/esm-browser/native.js","webpack:///./node_modules/uuid/dist/esm-browser/rng.js","webpack:///./node_modules/uuid/dist/esm-browser/stringify.js","webpack:///./node_modules/uuid/dist/esm-browser/v4.js","webpack:///./node_modules/@aws-amplify/core/dist/esm/utils/amplifyUuid/index.mjs","webpack:///./node_modules/rxjs/dist/esm5/internal/util/lift.js","webpack:///./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","webpack:///./node_modules/rxjs/dist/esm5/internal/util/isArrayLike.js","webpack:///./node_modules/rxjs/dist/esm5/internal/util/isPromise.js","webpack:///./node_modules/rxjs/dist/esm5/internal/util/isInteropObservable.js","webpack:///./node_modules/rxjs/dist/esm5/internal/util/isAsyncIterable.js","webpack:///./node_modules/rxjs/dist/esm5/internal/util/throwUnobservableError.js","webpack:///./node_modules/rxjs/dist/esm5/internal/symbol/iterator.js","webpack:///./node_modules/rxjs/dist/esm5/internal/util/isIterable.js","webpack:///./node_modules/rxjs/dist/esm5/internal/util/isReadableStreamLike.js","webpack:///./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","webpack:///./node_modules/@aws-amplify/core/dist/esm/Reachability/Reachability.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/utils/isWebWorker.mjs","webpack:///./node_modules/rxjs/dist/esm5/internal/observable/from.js","webpack:///./dist/esm/utils/ReachabilityMonitor/index.mjs","webpack:///./dist/esm/utils/ConnectionStateMonitor.mjs","webpack:///./node_modules/rxjs/dist/esm5/internal/operators/map.js","webpack:///./node_modules/rxjs/dist/esm5/internal/operators/filter.js","webpack:///./dist/esm/utils/ReconnectionMonitor.mjs","webpack:///./dist/esm/Providers/PubSub.mjs","webpack:///./dist/esm/Providers/MqttOverWS.mjs","webpack:///./dist/esm/Providers/AWSIot.mjs"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"aws_amplify_core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"aws_amplify_pubsub\", [\"aws_amplify_core\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"aws_amplify_pubsub\"] = factory(require(\"aws_amplify_core\"));\n\telse\n\t\troot[\"aws_amplify_pubsub\"] = factory(root[\"aws_amplify_core\"]);\n})(this, (__WEBPACK_EXTERNAL_MODULE__556__) => {\nreturn ","/*******************************************************************************\n * Copyright (c) 2013 IBM Corp.\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * and Eclipse Distribution License v1.0 which accompany this distribution.\n *\n * The Eclipse Public License is available at\n *    http://www.eclipse.org/legal/epl-v10.html\n * and the Eclipse Distribution License is available at\n *   http://www.eclipse.org/org/documents/edl-v10.php.\n *\n * Contributors:\n *    Andrew Banks - initial API and implementation and initial documentation\n *******************************************************************************/\n\n// Only expose a single object name in the global namespace.\n// Everything must go through this module. Global Paho module\n// only has a single public function, client, which returns\n// a Paho client object given connection details.\n\n/**\n * Send and receive messages using web browsers.\n * <p>\n * This programming interface lets a JavaScript client application use the MQTT V3.1 or\n * V3.1.1 protocol to connect to an MQTT-supporting messaging server.\n *\n * The function supported includes:\n * <ol>\n * <li>Connecting to and disconnecting from a server. The server is identified by its host name and port number.\n * <li>Specifying options that relate to the communications link with the server,\n * for example the frequency of keep-alive heartbeats, and whether SSL/TLS is required.\n * <li>Subscribing to and receiving messages from MQTT Topics.\n * <li>Publishing messages to MQTT Topics.\n * </ol>\n * <p>\n * The API consists of two main objects:\n * <dl>\n * <dt><b>{@link Paho.Client}</b></dt>\n * <dd>This contains methods that provide the functionality of the API,\n * including provision of callbacks that notify the application when a message\n * arrives from or is delivered to the messaging server,\n * or when the status of its connection to the messaging server changes.</dd>\n * <dt><b>{@link Paho.Message}</b></dt>\n * <dd>This encapsulates the payload of the message along with various attributes\n * associated with its delivery, in particular the destination to which it has\n * been (or is about to be) sent.</dd>\n * </dl>\n * <p>\n * The programming interface validates parameters passed to it, and will throw\n * an Error containing an error message intended for developer use, if it detects\n * an error with any parameter.\n * <p>\n * Example:\n *\n * <code><pre>\nvar client = new Paho.MQTT.Client(location.hostname, Number(location.port), \"clientId\");\nclient.onConnectionLost = onConnectionLost;\nclient.onMessageArrived = onMessageArrived;\nclient.connect({onSuccess:onConnect});\n\nfunction onConnect() {\n  // Once a connection has been made, make a subscription and send a message.\n  console.log(\"onConnect\");\n  client.subscribe(\"/World\");\n  var message = new Paho.MQTT.Message(\"Hello\");\n  message.destinationName = \"/World\";\n  client.send(message);\n};\nfunction onConnectionLost(responseObject) {\n  if (responseObject.errorCode !== 0)\n\tconsole.log(\"onConnectionLost:\"+responseObject.errorMessage);\n};\nfunction onMessageArrived(message) {\n  console.log(\"onMessageArrived:\"+message.payloadString);\n  client.disconnect();\n};\n * </pre></code>\n * @namespace Paho\n */\n\n/* jshint shadow:true */\n(function ExportLibrary(root, factory) {\n\tif (typeof exports === 'object' && typeof module === 'object') {\n\t\tmodule.exports = factory();\n\t} else if (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t} else if (typeof exports === 'object') {\n\t\texports = factory();\n\t} else {\n\t\t//if (typeof root.Paho === \"undefined\"){\n\t\t//\troot.Paho = {};\n\t\t//}\n\t\troot.Paho = factory();\n\t}\n})(this, function LibraryFactory() {\n\tvar PahoMQTT = (function (global) {\n\t\t// Private variables below, these are only visible inside the function closure\n\t\t// which is used to define the module.\n\t\tvar version = '@VERSION@-@BUILDLEVEL@';\n\n\t\t// 2023-01-05: AWS Amplify change to incorporate upstream pull request:\n\t\t// https://github.com/eclipse/paho.mqtt.javascript/pull/247\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tvar localStorage = (function () {\n\t\t\ttry {\n\t\t\t\t// When third-party cookies are disabled accessing localStorage will cause an error\n\t\t\t\tif (global.localStorage) return global.localStorage;\n\t\t\t} catch (e) {\n\t\t\t\tvar data = {};\n\n\t\t\t\treturn {\n\t\t\t\t\tsetItem: function (key, item) {\n\t\t\t\t\t\tdata[key] = item;\n\t\t\t\t\t},\n\t\t\t\t\tgetItem: function (key) {\n\t\t\t\t\t\treturn data[key];\n\t\t\t\t\t},\n\t\t\t\t\tremoveItem: function (key) {\n\t\t\t\t\t\tdelete data[key];\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t})();\n\n\t\t// End of AWS Amplify change\n\n\t\t/**\n\t\t * Unique message type identifiers, with associated\n\t\t * associated integer values.\n\t\t * @private\n\t\t */\n\t\tvar MESSAGE_TYPE = {\n\t\t\tCONNECT: 1,\n\t\t\tCONNACK: 2,\n\t\t\tPUBLISH: 3,\n\t\t\tPUBACK: 4,\n\t\t\tPUBREC: 5,\n\t\t\tPUBREL: 6,\n\t\t\tPUBCOMP: 7,\n\t\t\tSUBSCRIBE: 8,\n\t\t\tSUBACK: 9,\n\t\t\tUNSUBSCRIBE: 10,\n\t\t\tUNSUBACK: 11,\n\t\t\tPINGREQ: 12,\n\t\t\tPINGRESP: 13,\n\t\t\tDISCONNECT: 14,\n\t\t};\n\n\t\t// Collection of utility methods used to simplify module code\n\t\t// and promote the DRY pattern.\n\n\t\t/**\n\t\t * Validate an object's parameter names to ensure they\n\t\t * match a list of expected variables name for this option\n\t\t * type. Used to ensure option object passed into the API don't\n\t\t * contain erroneous parameters.\n\t\t * @param {Object} obj - User options object\n\t\t * @param {Object} keys - valid keys and types that may exist in obj.\n\t\t * @throws {Error} Invalid option parameter found.\n\t\t * @private\n\t\t */\n\t\tvar validate = function (obj, keys) {\n\t\t\tfor (var key in obj) {\n\t\t\t\tif (obj.hasOwnProperty(key)) {\n\t\t\t\t\tif (keys.hasOwnProperty(key)) {\n\t\t\t\t\t\tif (typeof obj[key] !== keys[key])\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_TYPE, [typeof obj[key], key]),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar errorStr =\n\t\t\t\t\t\t\t'Unknown property, ' + key + '. Valid properties are:';\n\t\t\t\t\t\tfor (var validKey in keys)\n\t\t\t\t\t\t\tif (keys.hasOwnProperty(validKey))\n\t\t\t\t\t\t\t\terrorStr = errorStr + ' ' + validKey;\n\t\t\t\t\t\tthrow new Error(errorStr);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Return a new function which runs the user function bound\n\t\t * to a fixed scope.\n\t\t * @param {function} User function\n\t\t * @param {object} Function scope\n\t\t * @return {function} User function bound to another scope\n\t\t * @private\n\t\t */\n\t\tvar scope = function (f, scope) {\n\t\t\treturn function () {\n\t\t\t\treturn f.apply(scope, arguments);\n\t\t\t};\n\t\t};\n\n\t\t/**\n\t\t * Unique message type identifiers, with associated\n\t\t * associated integer values.\n\t\t * @private\n\t\t */\n\t\tvar ERROR = {\n\t\t\tOK: { code: 0, text: 'AMQJSC0000I OK.' },\n\t\t\tCONNECT_TIMEOUT: { code: 1, text: 'AMQJSC0001E Connect timed out.' },\n\t\t\tSUBSCRIBE_TIMEOUT: { code: 2, text: 'AMQJS0002E Subscribe timed out.' },\n\t\t\tUNSUBSCRIBE_TIMEOUT: {\n\t\t\t\tcode: 3,\n\t\t\t\ttext: 'AMQJS0003E Unsubscribe timed out.',\n\t\t\t},\n\t\t\tPING_TIMEOUT: { code: 4, text: 'AMQJS0004E Ping timed out.' },\n\t\t\tINTERNAL_ERROR: {\n\t\t\t\tcode: 5,\n\t\t\t\ttext: 'AMQJS0005E Internal error. Error Message: {0}, Stack trace: {1}',\n\t\t\t},\n\t\t\tCONNACK_RETURNCODE: {\n\t\t\t\tcode: 6,\n\t\t\t\ttext: 'AMQJS0006E Bad Connack return code:{0} {1}.',\n\t\t\t},\n\t\t\tSOCKET_ERROR: { code: 7, text: 'AMQJS0007E Socket error:{0}.' },\n\t\t\tSOCKET_CLOSE: { code: 8, text: 'AMQJS0008I Socket closed.' },\n\t\t\tMALFORMED_UTF: {\n\t\t\t\tcode: 9,\n\t\t\t\ttext: 'AMQJS0009E Malformed UTF data:{0} {1} {2}.',\n\t\t\t},\n\t\t\tUNSUPPORTED: {\n\t\t\t\tcode: 10,\n\t\t\t\ttext: 'AMQJS0010E {0} is not supported by this browser.',\n\t\t\t},\n\t\t\tINVALID_STATE: { code: 11, text: 'AMQJS0011E Invalid state {0}.' },\n\t\t\tINVALID_TYPE: { code: 12, text: 'AMQJS0012E Invalid type {0} for {1}.' },\n\t\t\tINVALID_ARGUMENT: {\n\t\t\t\tcode: 13,\n\t\t\t\ttext: 'AMQJS0013E Invalid argument {0} for {1}.',\n\t\t\t},\n\t\t\tUNSUPPORTED_OPERATION: {\n\t\t\t\tcode: 14,\n\t\t\t\ttext: 'AMQJS0014E Unsupported operation.',\n\t\t\t},\n\t\t\tINVALID_STORED_DATA: {\n\t\t\t\tcode: 15,\n\t\t\t\ttext: 'AMQJS0015E Invalid data in local storage key={0} value={1}.',\n\t\t\t},\n\t\t\tINVALID_MQTT_MESSAGE_TYPE: {\n\t\t\t\tcode: 16,\n\t\t\t\ttext: 'AMQJS0016E Invalid MQTT message type {0}.',\n\t\t\t},\n\t\t\tMALFORMED_UNICODE: {\n\t\t\t\tcode: 17,\n\t\t\t\ttext: 'AMQJS0017E Malformed Unicode string:{0} {1}.',\n\t\t\t},\n\t\t\tBUFFER_FULL: {\n\t\t\t\tcode: 18,\n\t\t\t\ttext: 'AMQJS0018E Message buffer is full, maximum buffer size: {0}.',\n\t\t\t},\n\t\t};\n\n\t\t/** CONNACK RC Meaning. */\n\t\tvar CONNACK_RC = {\n\t\t\t0: 'Connection Accepted',\n\t\t\t1: 'Connection Refused: unacceptable protocol version',\n\t\t\t2: 'Connection Refused: identifier rejected',\n\t\t\t3: 'Connection Refused: server unavailable',\n\t\t\t4: 'Connection Refused: bad user name or password',\n\t\t\t5: 'Connection Refused: not authorized',\n\t\t};\n\n\t\t/**\n\t\t * Format an error message text.\n\t\t * @private\n\t\t * @param {error} ERROR value above.\n\t\t * @param {substitutions} [array] substituted into the text.\n\t\t * @return the text with the substitutions made.\n\t\t */\n\t\tvar format = function (error, substitutions) {\n\t\t\tvar text = error.text;\n\t\t\tif (substitutions) {\n\t\t\t\tvar field, start;\n\t\t\t\tfor (var i = 0; i < substitutions.length; i++) {\n\t\t\t\t\tfield = '{' + i + '}';\n\t\t\t\t\tstart = text.indexOf(field);\n\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\tvar part1 = text.substring(0, start);\n\t\t\t\t\t\tvar part2 = text.substring(start + field.length);\n\t\t\t\t\t\ttext = part1 + substitutions[i] + part2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn text;\n\t\t};\n\n\t\t//MQTT protocol and version          6    M    Q    I    s    d    p    3\n\t\tvar MqttProtoIdentifierv3 = [\n\t\t\t0x00, 0x06, 0x4d, 0x51, 0x49, 0x73, 0x64, 0x70, 0x03,\n\t\t];\n\t\t//MQTT proto/version for 311         4    M    Q    T    T    4\n\t\tvar MqttProtoIdentifierv4 = [0x00, 0x04, 0x4d, 0x51, 0x54, 0x54, 0x04];\n\n\t\t/**\n\t\t * Construct an MQTT wire protocol message.\n\t\t * @param type MQTT packet type.\n\t\t * @param options optional wire message attributes.\n\t\t *\n\t\t * Optional properties\n\t\t *\n\t\t * messageIdentifier: message ID in the range [0..65535]\n\t\t * payloadMessage:\tApplication Message - PUBLISH only\n\t\t * connectStrings:\tarray of 0 or more Strings to be put into the CONNECT payload\n\t\t * topics:\t\t\tarray of strings (SUBSCRIBE, UNSUBSCRIBE)\n\t\t * requestQoS:\t\tarray of QoS values [0..2]\n\t\t *\n\t\t * \"Flag\" properties\n\t\t * cleanSession:\ttrue if present / false if absent (CONNECT)\n\t\t * willMessage:  \ttrue if present / false if absent (CONNECT)\n\t\t * isRetained:\t\ttrue if present / false if absent (CONNECT)\n\t\t * userName:\t\ttrue if present / false if absent (CONNECT)\n\t\t * password:\t\ttrue if present / false if absent (CONNECT)\n\t\t * keepAliveInterval:\tinteger [0..65535]  (CONNECT)\n\t\t *\n\t\t * @private\n\t\t * @ignore\n\t\t */\n\t\tvar WireMessage = function (type, options) {\n\t\t\tthis.type = type;\n\t\t\tfor (var name in options) {\n\t\t\t\tif (options.hasOwnProperty(name)) {\n\t\t\t\t\tthis[name] = options[name];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tWireMessage.prototype.encode = function () {\n\t\t\t// Compute the first byte of the fixed header\n\t\t\tvar first = (this.type & 0x0f) << 4;\n\n\t\t\t/*\n\t\t\t * Now calculate the length of the variable header + payload by adding up the lengths\n\t\t\t * of all the component parts\n\t\t\t */\n\n\t\t\tvar remLength = 0;\n\t\t\tvar topicStrLength = [];\n\t\t\tvar destinationNameLength = 0;\n\t\t\tvar willMessagePayloadBytes;\n\n\t\t\t// if the message contains a messageIdentifier then we need two bytes for that\n\t\t\tif (this.messageIdentifier !== undefined) remLength += 2;\n\n\t\t\tswitch (this.type) {\n\t\t\t\t// If this a Connect then we need to include 12 bytes for its header\n\t\t\t\tcase MESSAGE_TYPE.CONNECT:\n\t\t\t\t\tswitch (this.mqttVersion) {\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\tremLength += MqttProtoIdentifierv3.length + 3;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\tremLength += MqttProtoIdentifierv4.length + 3;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tremLength += UTF8Length(this.clientId) + 2;\n\t\t\t\t\tif (this.willMessage !== undefined) {\n\t\t\t\t\t\tremLength += UTF8Length(this.willMessage.destinationName) + 2;\n\t\t\t\t\t\t// Will message is always a string, sent as UTF-8 characters with a preceding length.\n\t\t\t\t\t\twillMessagePayloadBytes = this.willMessage.payloadBytes;\n\t\t\t\t\t\tif (!(willMessagePayloadBytes instanceof Uint8Array))\n\t\t\t\t\t\t\twillMessagePayloadBytes = new Uint8Array(payloadBytes);\n\t\t\t\t\t\tremLength += willMessagePayloadBytes.byteLength + 2;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.userName !== undefined)\n\t\t\t\t\t\tremLength += UTF8Length(this.userName) + 2;\n\t\t\t\t\tif (this.password !== undefined)\n\t\t\t\t\t\tremLength += UTF8Length(this.password) + 2;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Subscribe, Unsubscribe can both contain topic strings\n\t\t\t\tcase MESSAGE_TYPE.SUBSCRIBE:\n\t\t\t\t\tfirst |= 0x02; // Qos = 1;\n\t\t\t\t\tfor (var i = 0; i < this.topics.length; i++) {\n\t\t\t\t\t\ttopicStrLength[i] = UTF8Length(this.topics[i]);\n\t\t\t\t\t\tremLength += topicStrLength[i] + 2;\n\t\t\t\t\t}\n\t\t\t\t\tremLength += this.requestedQos.length; // 1 byte for each topic's Qos\n\t\t\t\t\t// QoS on Subscribe only\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.UNSUBSCRIBE:\n\t\t\t\t\tfirst |= 0x02; // Qos = 1;\n\t\t\t\t\tfor (var i = 0; i < this.topics.length; i++) {\n\t\t\t\t\t\ttopicStrLength[i] = UTF8Length(this.topics[i]);\n\t\t\t\t\t\tremLength += topicStrLength[i] + 2;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.PUBREL:\n\t\t\t\t\tfirst |= 0x02; // Qos = 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\t\tif (this.payloadMessage.duplicate) first |= 0x08;\n\t\t\t\t\tfirst = first |= this.payloadMessage.qos << 1;\n\t\t\t\t\tif (this.payloadMessage.retained) first |= 0x01;\n\t\t\t\t\tdestinationNameLength = UTF8Length(\n\t\t\t\t\t\tthis.payloadMessage.destinationName,\n\t\t\t\t\t);\n\t\t\t\t\tremLength += destinationNameLength + 2;\n\t\t\t\t\tvar payloadBytes = this.payloadMessage.payloadBytes;\n\t\t\t\t\tremLength += payloadBytes.byteLength;\n\t\t\t\t\tif (payloadBytes instanceof ArrayBuffer)\n\t\t\t\t\t\tpayloadBytes = new Uint8Array(payloadBytes);\n\t\t\t\t\telse if (!(payloadBytes instanceof Uint8Array))\n\t\t\t\t\t\tpayloadBytes = new Uint8Array(payloadBytes.buffer);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.DISCONNECT:\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Now we can allocate a buffer for the message\n\n\t\t\tvar mbi = encodeMBI(remLength); // Convert the length to MQTT MBI format\n\t\t\tvar pos = mbi.length + 1; // Offset of start of variable header\n\t\t\tvar buffer = new ArrayBuffer(remLength + pos);\n\t\t\tvar byteStream = new Uint8Array(buffer); // view it as a sequence of bytes\n\n\t\t\t//Write the fixed header into the buffer\n\t\t\tbyteStream[0] = first;\n\t\t\tbyteStream.set(mbi, 1);\n\n\t\t\t// If this is a PUBLISH then the variable header starts with a topic\n\t\t\tif (this.type == MESSAGE_TYPE.PUBLISH)\n\t\t\t\tpos = writeString(\n\t\t\t\t\tthis.payloadMessage.destinationName,\n\t\t\t\t\tdestinationNameLength,\n\t\t\t\t\tbyteStream,\n\t\t\t\t\tpos,\n\t\t\t\t);\n\t\t\t// If this is a CONNECT then the variable header contains the protocol name/version, flags and keepalive time\n\t\t\telse if (this.type == MESSAGE_TYPE.CONNECT) {\n\t\t\t\tswitch (this.mqttVersion) {\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tbyteStream.set(MqttProtoIdentifierv3, pos);\n\t\t\t\t\t\tpos += MqttProtoIdentifierv3.length;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tbyteStream.set(MqttProtoIdentifierv4, pos);\n\t\t\t\t\t\tpos += MqttProtoIdentifierv4.length;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tvar connectFlags = 0;\n\t\t\t\tif (this.cleanSession) connectFlags = 0x02;\n\t\t\t\tif (this.willMessage !== undefined) {\n\t\t\t\t\tconnectFlags |= 0x04;\n\t\t\t\t\tconnectFlags |= this.willMessage.qos << 3;\n\t\t\t\t\tif (this.willMessage.retained) {\n\t\t\t\t\t\tconnectFlags |= 0x20;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.userName !== undefined) connectFlags |= 0x80;\n\t\t\t\tif (this.password !== undefined) connectFlags |= 0x40;\n\t\t\t\tbyteStream[pos++] = connectFlags;\n\t\t\t\tpos = writeUint16(this.keepAliveInterval, byteStream, pos);\n\t\t\t}\n\n\t\t\t// Output the messageIdentifier - if there is one\n\t\t\tif (this.messageIdentifier !== undefined)\n\t\t\t\tpos = writeUint16(this.messageIdentifier, byteStream, pos);\n\n\t\t\tswitch (this.type) {\n\t\t\t\tcase MESSAGE_TYPE.CONNECT:\n\t\t\t\t\tpos = writeString(\n\t\t\t\t\t\tthis.clientId,\n\t\t\t\t\t\tUTF8Length(this.clientId),\n\t\t\t\t\t\tbyteStream,\n\t\t\t\t\t\tpos,\n\t\t\t\t\t);\n\t\t\t\t\tif (this.willMessage !== undefined) {\n\t\t\t\t\t\tpos = writeString(\n\t\t\t\t\t\t\tthis.willMessage.destinationName,\n\t\t\t\t\t\t\tUTF8Length(this.willMessage.destinationName),\n\t\t\t\t\t\t\tbyteStream,\n\t\t\t\t\t\t\tpos,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tpos = writeUint16(\n\t\t\t\t\t\t\twillMessagePayloadBytes.byteLength,\n\t\t\t\t\t\t\tbyteStream,\n\t\t\t\t\t\t\tpos,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbyteStream.set(willMessagePayloadBytes, pos);\n\t\t\t\t\t\tpos += willMessagePayloadBytes.byteLength;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.userName !== undefined)\n\t\t\t\t\t\tpos = writeString(\n\t\t\t\t\t\t\tthis.userName,\n\t\t\t\t\t\t\tUTF8Length(this.userName),\n\t\t\t\t\t\t\tbyteStream,\n\t\t\t\t\t\t\tpos,\n\t\t\t\t\t\t);\n\t\t\t\t\tif (this.password !== undefined)\n\t\t\t\t\t\tpos = writeString(\n\t\t\t\t\t\t\tthis.password,\n\t\t\t\t\t\t\tUTF8Length(this.password),\n\t\t\t\t\t\t\tbyteStream,\n\t\t\t\t\t\t\tpos,\n\t\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\t\t// PUBLISH has a text or binary payload, if text do not add a 2 byte length field, just the UTF characters.\n\t\t\t\t\tbyteStream.set(payloadBytes, pos);\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t//    \t    case MESSAGE_TYPE.PUBREC:\n\t\t\t\t//    \t    case MESSAGE_TYPE.PUBREL:\n\t\t\t\t//    \t    case MESSAGE_TYPE.PUBCOMP:\n\t\t\t\t//    \t    \tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.SUBSCRIBE:\n\t\t\t\t\t// SUBSCRIBE has a list of topic strings and request QoS\n\t\t\t\t\tfor (var i = 0; i < this.topics.length; i++) {\n\t\t\t\t\t\tpos = writeString(\n\t\t\t\t\t\t\tthis.topics[i],\n\t\t\t\t\t\t\ttopicStrLength[i],\n\t\t\t\t\t\t\tbyteStream,\n\t\t\t\t\t\t\tpos,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbyteStream[pos++] = this.requestedQos[i];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.UNSUBSCRIBE:\n\t\t\t\t\t// UNSUBSCRIBE has a list of topic strings\n\t\t\t\t\tfor (var i = 0; i < this.topics.length; i++)\n\t\t\t\t\t\tpos = writeString(\n\t\t\t\t\t\t\tthis.topics[i],\n\t\t\t\t\t\t\ttopicStrLength[i],\n\t\t\t\t\t\t\tbyteStream,\n\t\t\t\t\t\t\tpos,\n\t\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t// Do nothing.\n\t\t\t}\n\n\t\t\treturn buffer;\n\t\t};\n\n\t\tfunction decodeMessage(input, pos) {\n\t\t\tvar startingPos = pos;\n\t\t\tvar first = input[pos];\n\t\t\tvar type = first >> 4;\n\t\t\tvar messageInfo = (first &= 0x0f);\n\t\t\tpos += 1;\n\n\t\t\t// Decode the remaining length (MBI format)\n\n\t\t\tvar digit;\n\t\t\tvar remLength = 0;\n\t\t\tvar multiplier = 1;\n\t\t\tdo {\n\t\t\t\tif (pos == input.length) {\n\t\t\t\t\treturn [null, startingPos];\n\t\t\t\t}\n\t\t\t\tdigit = input[pos++];\n\t\t\t\tremLength += (digit & 0x7f) * multiplier;\n\t\t\t\tmultiplier *= 128;\n\t\t\t} while ((digit & 0x80) !== 0);\n\n\t\t\tvar endPos = pos + remLength;\n\t\t\tif (endPos > input.length) {\n\t\t\t\treturn [null, startingPos];\n\t\t\t}\n\n\t\t\tvar wireMessage = new WireMessage(type);\n\t\t\tswitch (type) {\n\t\t\t\tcase MESSAGE_TYPE.CONNACK:\n\t\t\t\t\tvar connectAcknowledgeFlags = input[pos++];\n\t\t\t\t\tif (connectAcknowledgeFlags & 0x01) wireMessage.sessionPresent = true;\n\t\t\t\t\twireMessage.returnCode = input[pos++];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\t\tvar qos = (messageInfo >> 1) & 0x03;\n\n\t\t\t\t\tvar len = readUint16(input, pos);\n\t\t\t\t\tpos += 2;\n\t\t\t\t\tvar topicName = parseUTF8(input, pos, len);\n\t\t\t\t\tpos += len;\n\t\t\t\t\t// If QoS 1 or 2 there will be a messageIdentifier\n\t\t\t\t\tif (qos > 0) {\n\t\t\t\t\t\twireMessage.messageIdentifier = readUint16(input, pos);\n\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar message = new Message(input.subarray(pos, endPos));\n\t\t\t\t\tif ((messageInfo & 0x01) == 0x01) message.retained = true;\n\t\t\t\t\tif ((messageInfo & 0x08) == 0x08) message.duplicate = true;\n\t\t\t\t\tmessage.qos = qos;\n\t\t\t\t\tmessage.destinationName = topicName;\n\t\t\t\t\twireMessage.payloadMessage = message;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.PUBACK:\n\t\t\t\tcase MESSAGE_TYPE.PUBREC:\n\t\t\t\tcase MESSAGE_TYPE.PUBREL:\n\t\t\t\tcase MESSAGE_TYPE.PUBCOMP:\n\t\t\t\tcase MESSAGE_TYPE.UNSUBACK:\n\t\t\t\t\twireMessage.messageIdentifier = readUint16(input, pos);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MESSAGE_TYPE.SUBACK:\n\t\t\t\t\twireMessage.messageIdentifier = readUint16(input, pos);\n\t\t\t\t\tpos += 2;\n\t\t\t\t\twireMessage.returnCode = input.subarray(pos, endPos);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn [wireMessage, endPos];\n\t\t}\n\n\t\tfunction writeUint16(input, buffer, offset) {\n\t\t\tbuffer[offset++] = input >> 8; //MSB\n\t\t\tbuffer[offset++] = input % 256; //LSB\n\t\t\treturn offset;\n\t\t}\n\n\t\tfunction writeString(input, utf8Length, buffer, offset) {\n\t\t\toffset = writeUint16(utf8Length, buffer, offset);\n\t\t\tstringToUTF8(input, buffer, offset);\n\t\t\treturn offset + utf8Length;\n\t\t}\n\n\t\tfunction readUint16(buffer, offset) {\n\t\t\treturn 256 * buffer[offset] + buffer[offset + 1];\n\t\t}\n\n\t\t/**\n\t\t * Encodes an MQTT Multi-Byte Integer\n\t\t * @private\n\t\t */\n\t\tfunction encodeMBI(number) {\n\t\t\tvar output = new Array(1);\n\t\t\tvar numBytes = 0;\n\n\t\t\tdo {\n\t\t\t\tvar digit = number % 128;\n\t\t\t\tnumber = number >> 7;\n\t\t\t\tif (number > 0) {\n\t\t\t\t\tdigit |= 0x80;\n\t\t\t\t}\n\t\t\t\toutput[numBytes++] = digit;\n\t\t\t} while (number > 0 && numBytes < 4);\n\n\t\t\treturn output;\n\t\t}\n\n\t\t/**\n\t\t * Takes a String and calculates its length in bytes when encoded in UTF8.\n\t\t * @private\n\t\t */\n\t\tfunction UTF8Length(input) {\n\t\t\tvar output = 0;\n\t\t\tfor (var i = 0; i < input.length; i++) {\n\t\t\t\tvar charCode = input.charCodeAt(i);\n\t\t\t\tif (charCode > 0x7ff) {\n\t\t\t\t\t// Surrogate pair means its a 4 byte character\n\t\t\t\t\tif (0xd800 <= charCode && charCode <= 0xdbff) {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\toutput++;\n\t\t\t\t\t}\n\t\t\t\t\toutput += 3;\n\t\t\t\t} else if (charCode > 0x7f) output += 2;\n\t\t\t\telse output++;\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\n\t\t/**\n\t\t * Takes a String and writes it into an array as UTF8 encoded bytes.\n\t\t * @private\n\t\t */\n\t\tfunction stringToUTF8(input, output, start) {\n\t\t\tvar pos = start;\n\t\t\tfor (var i = 0; i < input.length; i++) {\n\t\t\t\tvar charCode = input.charCodeAt(i);\n\n\t\t\t\t// Check for a surrogate pair.\n\t\t\t\tif (0xd800 <= charCode && charCode <= 0xdbff) {\n\t\t\t\t\tvar lowCharCode = input.charCodeAt(++i);\n\t\t\t\t\tif (isNaN(lowCharCode)) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\tformat(ERROR.MALFORMED_UNICODE, [charCode, lowCharCode]),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tcharCode =\n\t\t\t\t\t\t((charCode - 0xd800) << 10) + (lowCharCode - 0xdc00) + 0x10000;\n\t\t\t\t}\n\n\t\t\t\tif (charCode <= 0x7f) {\n\t\t\t\t\toutput[pos++] = charCode;\n\t\t\t\t} else if (charCode <= 0x7ff) {\n\t\t\t\t\toutput[pos++] = ((charCode >> 6) & 0x1f) | 0xc0;\n\t\t\t\t\toutput[pos++] = (charCode & 0x3f) | 0x80;\n\t\t\t\t} else if (charCode <= 0xffff) {\n\t\t\t\t\toutput[pos++] = ((charCode >> 12) & 0x0f) | 0xe0;\n\t\t\t\t\toutput[pos++] = ((charCode >> 6) & 0x3f) | 0x80;\n\t\t\t\t\toutput[pos++] = (charCode & 0x3f) | 0x80;\n\t\t\t\t} else {\n\t\t\t\t\toutput[pos++] = ((charCode >> 18) & 0x07) | 0xf0;\n\t\t\t\t\toutput[pos++] = ((charCode >> 12) & 0x3f) | 0x80;\n\t\t\t\t\toutput[pos++] = ((charCode >> 6) & 0x3f) | 0x80;\n\t\t\t\t\toutput[pos++] = (charCode & 0x3f) | 0x80;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\n\t\tfunction parseUTF8(input, offset, length) {\n\t\t\tvar output = '';\n\t\t\tvar utf16;\n\t\t\tvar pos = offset;\n\n\t\t\twhile (pos < offset + length) {\n\t\t\t\tvar byte1 = input[pos++];\n\t\t\t\tif (byte1 < 128) utf16 = byte1;\n\t\t\t\telse {\n\t\t\t\t\tvar byte2 = input[pos++] - 128;\n\t\t\t\t\tif (byte2 < 0)\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\tformat(ERROR.MALFORMED_UTF, [\n\t\t\t\t\t\t\t\tbyte1.toString(16),\n\t\t\t\t\t\t\t\tbyte2.toString(16),\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t);\n\t\t\t\t\tif (byte1 < 0xe0)\n\t\t\t\t\t\t// 2 byte character\n\t\t\t\t\t\tutf16 = 64 * (byte1 - 0xc0) + byte2;\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar byte3 = input[pos++] - 128;\n\t\t\t\t\t\tif (byte3 < 0)\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.MALFORMED_UTF, [\n\t\t\t\t\t\t\t\t\tbyte1.toString(16),\n\t\t\t\t\t\t\t\t\tbyte2.toString(16),\n\t\t\t\t\t\t\t\t\tbyte3.toString(16),\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (byte1 < 0xf0)\n\t\t\t\t\t\t\t// 3 byte character\n\t\t\t\t\t\t\tutf16 = 4096 * (byte1 - 0xe0) + 64 * byte2 + byte3;\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvar byte4 = input[pos++] - 128;\n\t\t\t\t\t\t\tif (byte4 < 0)\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\tformat(ERROR.MALFORMED_UTF, [\n\t\t\t\t\t\t\t\t\t\tbyte1.toString(16),\n\t\t\t\t\t\t\t\t\t\tbyte2.toString(16),\n\t\t\t\t\t\t\t\t\t\tbyte3.toString(16),\n\t\t\t\t\t\t\t\t\t\tbyte4.toString(16),\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (byte1 < 0xf8)\n\t\t\t\t\t\t\t\t// 4 byte character\n\t\t\t\t\t\t\t\tutf16 =\n\t\t\t\t\t\t\t\t\t262144 * (byte1 - 0xf0) + 4096 * byte2 + 64 * byte3 + byte4;\n\t\t\t\t\t\t\t// longer encodings are not supported\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\tformat(ERROR.MALFORMED_UTF, [\n\t\t\t\t\t\t\t\t\t\tbyte1.toString(16),\n\t\t\t\t\t\t\t\t\t\tbyte2.toString(16),\n\t\t\t\t\t\t\t\t\t\tbyte3.toString(16),\n\t\t\t\t\t\t\t\t\t\tbyte4.toString(16),\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (utf16 > 0xffff) {\n\t\t\t\t\t// 4 byte character - express as a surrogate pair\n\t\t\t\t\tutf16 -= 0x10000;\n\t\t\t\t\toutput += String.fromCharCode(0xd800 + (utf16 >> 10)); // lead character\n\t\t\t\t\tutf16 = 0xdc00 + (utf16 & 0x3ff); // trail character\n\t\t\t\t}\n\t\t\t\toutput += String.fromCharCode(utf16);\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\n\t\t/**\n\t\t * Repeat keepalive requests, monitor responses.\n\t\t * @ignore\n\t\t */\n\t\tvar Pinger = function (client, keepAliveInterval) {\n\t\t\tthis._client = client;\n\t\t\tthis._keepAliveInterval = keepAliveInterval * 1000;\n\t\t\tthis.isReset = false;\n\n\t\t\tvar pingReq = new WireMessage(MESSAGE_TYPE.PINGREQ).encode();\n\n\t\t\tvar doTimeout = function (pinger) {\n\t\t\t\treturn function () {\n\t\t\t\t\treturn doPing.apply(pinger);\n\t\t\t\t};\n\t\t\t};\n\n\t\t\t/** @ignore */\n\t\t\tvar doPing = function () {\n\t\t\t\tif (!this.isReset) {\n\t\t\t\t\tthis._client._trace('Pinger.doPing', 'Timed out');\n\t\t\t\t\tthis._client._disconnected(\n\t\t\t\t\t\tERROR.PING_TIMEOUT.code,\n\t\t\t\t\t\tformat(ERROR.PING_TIMEOUT),\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis.isReset = false;\n\t\t\t\t\tthis._client._trace('Pinger.doPing', 'send PINGREQ');\n\t\t\t\t\tthis._client.socket.send(pingReq);\n\t\t\t\t\tthis.timeout = setTimeout(doTimeout(this), this._keepAliveInterval);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.reset = function () {\n\t\t\t\tthis.isReset = true;\n\t\t\t\tclearTimeout(this.timeout);\n\t\t\t\tif (this._keepAliveInterval > 0)\n\t\t\t\t\tthis.timeout = setTimeout(doTimeout(this), this._keepAliveInterval);\n\t\t\t};\n\n\t\t\tthis.cancel = function () {\n\t\t\t\tclearTimeout(this.timeout);\n\t\t\t};\n\t\t};\n\n\t\t/**\n\t\t * Monitor request completion.\n\t\t * @ignore\n\t\t */\n\t\tvar Timeout = function (client, timeoutSeconds, action, args) {\n\t\t\tif (!timeoutSeconds) timeoutSeconds = 30;\n\n\t\t\tvar doTimeout = function (action, client, args) {\n\t\t\t\treturn function () {\n\t\t\t\t\treturn action.apply(client, args);\n\t\t\t\t};\n\t\t\t};\n\t\t\tthis.timeout = setTimeout(\n\t\t\t\tdoTimeout(action, client, args),\n\t\t\t\ttimeoutSeconds * 1000,\n\t\t\t);\n\n\t\t\tthis.cancel = function () {\n\t\t\t\tclearTimeout(this.timeout);\n\t\t\t};\n\t\t};\n\n\t\t/**\n\t\t * Internal implementation of the Websockets MQTT V3.1 client.\n\t\t *\n\t\t * @name Paho.ClientImpl @constructor\n\t\t * @param {String} host the DNS nameof the webSocket host.\n\t\t * @param {Number} port the port number for that host.\n\t\t * @param {String} clientId the MQ client identifier.\n\t\t */\n\t\tvar ClientImpl = function (uri, host, port, path, clientId) {\n\t\t\t// Check dependencies are satisfied in this browser.\n\t\t\tif (!('WebSocket' in global && global.WebSocket !== null)) {\n\t\t\t\tthrow new Error(format(ERROR.UNSUPPORTED, ['WebSocket']));\n\t\t\t}\n\t\t\tif (!('ArrayBuffer' in global && global.ArrayBuffer !== null)) {\n\t\t\t\tthrow new Error(format(ERROR.UNSUPPORTED, ['ArrayBuffer']));\n\t\t\t}\n\t\t\tthis._trace('Paho.Client', uri, host, port, path, clientId);\n\n\t\t\tthis.host = host;\n\t\t\tthis.port = port;\n\t\t\tthis.path = path;\n\t\t\tthis.uri = uri;\n\t\t\tthis.clientId = clientId;\n\t\t\tthis._wsuri = null;\n\n\t\t\t// Local storagekeys are qualified with the following string.\n\t\t\t// The conditional inclusion of path in the key is for backward\n\t\t\t// compatibility to when the path was not configurable and assumed to\n\t\t\t// be /mqtt\n\t\t\tthis._localKey =\n\t\t\t\thost +\n\t\t\t\t':' +\n\t\t\t\tport +\n\t\t\t\t(path != '/mqtt' ? ':' + path : '') +\n\t\t\t\t':' +\n\t\t\t\tclientId +\n\t\t\t\t':';\n\n\t\t\t// Create private instance-only message queue\n\t\t\t// Internal queue of messages to be sent, in sending order.\n\t\t\tthis._msg_queue = [];\n\t\t\tthis._buffered_msg_queue = [];\n\n\t\t\t// Messages we have sent and are expecting a response for, indexed by their respective message ids.\n\t\t\tthis._sentMessages = {};\n\n\t\t\t// Messages we have received and acknowleged and are expecting a confirm message for\n\t\t\t// indexed by their respective message ids.\n\t\t\tthis._receivedMessages = {};\n\n\t\t\t// Internal list of callbacks to be executed when messages\n\t\t\t// have been successfully sent over web socket, e.g. disconnect\n\t\t\t// when it doesn't have to wait for ACK, just message is dispatched.\n\t\t\tthis._notify_msg_sent = {};\n\n\t\t\t// Unique identifier for SEND messages, incrementing\n\t\t\t// counter as messages are sent.\n\t\t\tthis._message_identifier = 1;\n\n\t\t\t// Used to determine the transmission sequence of stored sent messages.\n\t\t\tthis._sequence = 0;\n\n\t\t\t// Load the local state, if any, from the saved version, only restore state relevant to this client.\n\t\t\tfor (var key in localStorage)\n\t\t\t\tif (\n\t\t\t\t\tkey.indexOf('Sent:' + this._localKey) === 0 ||\n\t\t\t\t\tkey.indexOf('Received:' + this._localKey) === 0\n\t\t\t\t)\n\t\t\t\t\tthis.restore(key);\n\t\t};\n\n\t\t// Messaging Client public instance members.\n\t\tClientImpl.prototype.host = null;\n\t\tClientImpl.prototype.port = null;\n\t\tClientImpl.prototype.path = null;\n\t\tClientImpl.prototype.uri = null;\n\t\tClientImpl.prototype.clientId = null;\n\n\t\t// Messaging Client private instance members.\n\t\tClientImpl.prototype.socket = null;\n\t\t/* true once we have received an acknowledgement to a CONNECT packet. */\n\t\tClientImpl.prototype.connected = false;\n\t\t/* The largest message identifier allowed, may not be larger than 2**16 but\n\t\t * if set smaller reduces the maximum number of outbound messages allowed.\n\t\t */\n\t\tClientImpl.prototype.maxMessageIdentifier = 65536;\n\t\tClientImpl.prototype.connectOptions = null;\n\t\tClientImpl.prototype.hostIndex = null;\n\t\tClientImpl.prototype.onConnected = null;\n\t\tClientImpl.prototype.onConnectionLost = null;\n\t\tClientImpl.prototype.onMessageDelivered = null;\n\t\tClientImpl.prototype.onMessageArrived = null;\n\t\tClientImpl.prototype.traceFunction = null;\n\t\tClientImpl.prototype._msg_queue = null;\n\t\tClientImpl.prototype._buffered_msg_queue = null;\n\t\tClientImpl.prototype._connectTimeout = null;\n\t\t/* The sendPinger monitors how long we allow before we send data to prove to the server that we are alive. */\n\t\tClientImpl.prototype.sendPinger = null;\n\t\t/* The receivePinger monitors how long we allow before we require evidence that the server is alive. */\n\t\tClientImpl.prototype.receivePinger = null;\n\t\tClientImpl.prototype._reconnectInterval = 1; // Reconnect Delay, starts at 1 second\n\t\tClientImpl.prototype._reconnecting = false;\n\t\tClientImpl.prototype._reconnectTimeout = null;\n\t\tClientImpl.prototype.disconnectedPublishing = false;\n\t\tClientImpl.prototype.disconnectedBufferSize = 5000;\n\n\t\tClientImpl.prototype.receiveBuffer = null;\n\n\t\tClientImpl.prototype._traceBuffer = null;\n\t\tClientImpl.prototype._MAX_TRACE_ENTRIES = 100;\n\n\t\tClientImpl.prototype.connect = function (connectOptions) {\n\t\t\tvar connectOptionsMasked = this._traceMask(connectOptions, 'password');\n\t\t\tthis._trace(\n\t\t\t\t'Client.connect',\n\t\t\t\tconnectOptionsMasked,\n\t\t\t\tthis.socket,\n\t\t\t\tthis.connected,\n\t\t\t);\n\n\t\t\tif (this.connected)\n\t\t\t\tthrow new Error(format(ERROR.INVALID_STATE, ['already connected']));\n\t\t\tif (this.socket)\n\t\t\t\tthrow new Error(format(ERROR.INVALID_STATE, ['already connected']));\n\n\t\t\tif (this._reconnecting) {\n\t\t\t\t// connect() function is called while reconnect is in progress.\n\t\t\t\t// Terminate the auto reconnect process to use new connect options.\n\t\t\t\tthis._reconnectTimeout.cancel();\n\t\t\t\tthis._reconnectTimeout = null;\n\t\t\t\tthis._reconnecting = false;\n\t\t\t}\n\n\t\t\tthis.connectOptions = connectOptions;\n\t\t\tthis._reconnectInterval = 1;\n\t\t\tthis._reconnecting = false;\n\t\t\tif (connectOptions.uris) {\n\t\t\t\tthis.hostIndex = 0;\n\t\t\t\tthis._doConnect(connectOptions.uris[0]);\n\t\t\t} else {\n\t\t\t\tthis._doConnect(this.uri);\n\t\t\t}\n\t\t};\n\n\t\tClientImpl.prototype.subscribe = function (filter, subscribeOptions) {\n\t\t\tthis._trace('Client.subscribe', filter, subscribeOptions);\n\n\t\t\tif (!this.connected)\n\t\t\t\tthrow new Error(format(ERROR.INVALID_STATE, ['not connected']));\n\n\t\t\tvar wireMessage = new WireMessage(MESSAGE_TYPE.SUBSCRIBE);\n\t\t\twireMessage.topics = filter.constructor === Array ? filter : [filter];\n\t\t\tif (subscribeOptions.qos === undefined) subscribeOptions.qos = 0;\n\t\t\twireMessage.requestedQos = [];\n\t\t\tfor (var i = 0; i < wireMessage.topics.length; i++)\n\t\t\t\twireMessage.requestedQos[i] = subscribeOptions.qos;\n\n\t\t\tif (subscribeOptions.onSuccess) {\n\t\t\t\twireMessage.onSuccess = function (grantedQos) {\n\t\t\t\t\tsubscribeOptions.onSuccess({\n\t\t\t\t\t\tinvocationContext: subscribeOptions.invocationContext,\n\t\t\t\t\t\tgrantedQos: grantedQos,\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (subscribeOptions.onFailure) {\n\t\t\t\twireMessage.onFailure = function (errorCode) {\n\t\t\t\t\tsubscribeOptions.onFailure({\n\t\t\t\t\t\tinvocationContext: subscribeOptions.invocationContext,\n\t\t\t\t\t\terrorCode: errorCode,\n\t\t\t\t\t\terrorMessage: format(errorCode),\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (subscribeOptions.timeout) {\n\t\t\t\twireMessage.timeOut = new Timeout(\n\t\t\t\t\tthis,\n\t\t\t\t\tsubscribeOptions.timeout,\n\t\t\t\t\tsubscribeOptions.onFailure,\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinvocationContext: subscribeOptions.invocationContext,\n\t\t\t\t\t\t\terrorCode: ERROR.SUBSCRIBE_TIMEOUT.code,\n\t\t\t\t\t\t\terrorMessage: format(ERROR.SUBSCRIBE_TIMEOUT),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// All subscriptions return a SUBACK.\n\t\t\tthis._requires_ack(wireMessage);\n\t\t\tthis._schedule_message(wireMessage);\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype.unsubscribe = function (filter, unsubscribeOptions) {\n\t\t\tthis._trace('Client.unsubscribe', filter, unsubscribeOptions);\n\n\t\t\tif (!this.connected)\n\t\t\t\tthrow new Error(format(ERROR.INVALID_STATE, ['not connected']));\n\n\t\t\tvar wireMessage = new WireMessage(MESSAGE_TYPE.UNSUBSCRIBE);\n\t\t\twireMessage.topics = filter.constructor === Array ? filter : [filter];\n\n\t\t\tif (unsubscribeOptions.onSuccess) {\n\t\t\t\twireMessage.callback = function () {\n\t\t\t\t\tunsubscribeOptions.onSuccess({\n\t\t\t\t\t\tinvocationContext: unsubscribeOptions.invocationContext,\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (unsubscribeOptions.timeout) {\n\t\t\t\twireMessage.timeOut = new Timeout(\n\t\t\t\t\tthis,\n\t\t\t\t\tunsubscribeOptions.timeout,\n\t\t\t\t\tunsubscribeOptions.onFailure,\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinvocationContext: unsubscribeOptions.invocationContext,\n\t\t\t\t\t\t\terrorCode: ERROR.UNSUBSCRIBE_TIMEOUT.code,\n\t\t\t\t\t\t\terrorMessage: format(ERROR.UNSUBSCRIBE_TIMEOUT),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// All unsubscribes return a SUBACK.\n\t\t\tthis._requires_ack(wireMessage);\n\t\t\tthis._schedule_message(wireMessage);\n\t\t};\n\n\t\tClientImpl.prototype.send = function (message) {\n\t\t\tthis._trace('Client.send', message);\n\n\t\t\tvar wireMessage = new WireMessage(MESSAGE_TYPE.PUBLISH);\n\t\t\twireMessage.payloadMessage = message;\n\n\t\t\tif (this.connected) {\n\t\t\t\t// Mark qos 1 & 2 message as \"ACK required\"\n\t\t\t\t// For qos 0 message, invoke onMessageDelivered callback if there is one.\n\t\t\t\t// Then schedule the message.\n\t\t\t\tif (message.qos > 0) {\n\t\t\t\t\tthis._requires_ack(wireMessage);\n\t\t\t\t} else if (this.onMessageDelivered) {\n\t\t\t\t\tthis._notify_msg_sent[wireMessage] = this.onMessageDelivered(\n\t\t\t\t\t\twireMessage.payloadMessage,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tthis._schedule_message(wireMessage);\n\t\t\t} else {\n\t\t\t\t// Currently disconnected, will not schedule this message\n\t\t\t\t// Check if reconnecting is in progress and disconnected publish is enabled.\n\t\t\t\tif (this._reconnecting && this.disconnectedPublishing) {\n\t\t\t\t\t// Check the limit which include the \"required ACK\" messages\n\t\t\t\t\tvar messageCount =\n\t\t\t\t\t\tObject.keys(this._sentMessages).length +\n\t\t\t\t\t\tthis._buffered_msg_queue.length;\n\t\t\t\t\tif (messageCount > this.disconnectedBufferSize) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\tformat(ERROR.BUFFER_FULL, [this.disconnectedBufferSize]),\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (message.qos > 0) {\n\t\t\t\t\t\t\t// Mark this message as \"ACK required\"\n\t\t\t\t\t\t\tthis._requires_ack(wireMessage);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twireMessage.sequence = ++this._sequence;\n\t\t\t\t\t\t\t// Add messages in fifo order to array, by adding to start\n\t\t\t\t\t\t\tthis._buffered_msg_queue.unshift(wireMessage);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_STATE, ['not connected']));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tClientImpl.prototype.disconnect = function () {\n\t\t\tthis._trace('Client.disconnect');\n\n\t\t\tif (this._reconnecting) {\n\t\t\t\t// disconnect() function is called while reconnect is in progress.\n\t\t\t\t// Terminate the auto reconnect process.\n\t\t\t\tthis._reconnectTimeout.cancel();\n\t\t\t\tthis._reconnectTimeout = null;\n\t\t\t\tthis._reconnecting = false;\n\t\t\t}\n\n\t\t\tif (!this.socket)\n\t\t\t\tthrow new Error(\n\t\t\t\t\tformat(ERROR.INVALID_STATE, ['not connecting or connected']),\n\t\t\t\t);\n\n\t\t\tvar wireMessage = new WireMessage(MESSAGE_TYPE.DISCONNECT);\n\n\t\t\t// Run the disconnected call back as soon as the message has been sent,\n\t\t\t// in case of a failure later on in the disconnect processing.\n\t\t\t// as a consequence, the _disconected call back may be run several times.\n\t\t\tthis._notify_msg_sent[wireMessage] = scope(this._disconnected, this);\n\n\t\t\tthis._schedule_message(wireMessage);\n\t\t};\n\n\t\tClientImpl.prototype.getTraceLog = function () {\n\t\t\tif (this._traceBuffer !== null) {\n\t\t\t\tthis._trace('Client.getTraceLog', new Date());\n\t\t\t\tthis._trace(\n\t\t\t\t\t'Client.getTraceLog in flight messages',\n\t\t\t\t\tthis._sentMessages.length,\n\t\t\t\t);\n\t\t\t\tfor (var key in this._sentMessages)\n\t\t\t\t\tthis._trace('_sentMessages ', key, this._sentMessages[key]);\n\t\t\t\tfor (var key in this._receivedMessages)\n\t\t\t\t\tthis._trace('_receivedMessages ', key, this._receivedMessages[key]);\n\n\t\t\t\treturn this._traceBuffer;\n\t\t\t}\n\t\t};\n\n\t\tClientImpl.prototype.startTrace = function () {\n\t\t\tif (this._traceBuffer === null) {\n\t\t\t\tthis._traceBuffer = [];\n\t\t\t}\n\t\t\tthis._trace('Client.startTrace', new Date(), version);\n\t\t};\n\n\t\tClientImpl.prototype.stopTrace = function () {\n\t\t\tdelete this._traceBuffer;\n\t\t};\n\n\t\tClientImpl.prototype._doConnect = function (wsurl) {\n\t\t\t// When the socket is open, this client will send the CONNECT WireMessage using the saved parameters.\n\t\t\tif (this.connectOptions.useSSL) {\n\t\t\t\tvar uriParts = wsurl.split(':');\n\t\t\t\turiParts[0] = 'wss';\n\t\t\t\twsurl = uriParts.join(':');\n\t\t\t}\n\t\t\tthis._wsuri = wsurl;\n\t\t\tthis.connected = false;\n\n\t\t\tif (this.connectOptions.mqttVersion < 4) {\n\t\t\t\tthis.socket = new WebSocket(wsurl, ['mqttv3.1']);\n\t\t\t} else {\n\t\t\t\tthis.socket = new WebSocket(wsurl, ['mqtt']);\n\t\t\t}\n\t\t\tthis.socket.binaryType = 'arraybuffer';\n\t\t\tthis.socket.onopen = scope(this._on_socket_open, this);\n\t\t\tthis.socket.onmessage = scope(this._on_socket_message, this);\n\t\t\tthis.socket.onerror = scope(this._on_socket_error, this);\n\t\t\tthis.socket.onclose = scope(this._on_socket_close, this);\n\n\t\t\tthis.sendPinger = new Pinger(this, this.connectOptions.keepAliveInterval);\n\t\t\tthis.receivePinger = new Pinger(\n\t\t\t\tthis,\n\t\t\t\tthis.connectOptions.keepAliveInterval,\n\t\t\t);\n\t\t\tif (this._connectTimeout) {\n\t\t\t\tthis._connectTimeout.cancel();\n\t\t\t\tthis._connectTimeout = null;\n\t\t\t}\n\t\t\tthis._connectTimeout = new Timeout(\n\t\t\t\tthis,\n\t\t\t\tthis.connectOptions.timeout,\n\t\t\t\tthis._disconnected,\n\t\t\t\t[ERROR.CONNECT_TIMEOUT.code, format(ERROR.CONNECT_TIMEOUT)],\n\t\t\t);\n\t\t};\n\n\t\t// Schedule a new message to be sent over the WebSockets\n\t\t// connection. CONNECT messages cause WebSocket connection\n\t\t// to be started. All other messages are queued internally\n\t\t// until this has happened. When WS connection starts, process\n\t\t// all outstanding messages.\n\t\tClientImpl.prototype._schedule_message = function (message) {\n\t\t\t// Add messages in fifo order to array, by adding to start\n\t\t\tthis._msg_queue.unshift(message);\n\t\t\t// Process outstanding messages in the queue if we have an  open socket, and have received CONNACK.\n\t\t\tif (this.connected) {\n\t\t\t\tthis._process_queue();\n\t\t\t}\n\t\t};\n\n\t\tClientImpl.prototype.store = function (prefix, wireMessage) {\n\t\t\tvar storedMessage = {\n\t\t\t\ttype: wireMessage.type,\n\t\t\t\tmessageIdentifier: wireMessage.messageIdentifier,\n\t\t\t\tversion: 1,\n\t\t\t};\n\n\t\t\tswitch (wireMessage.type) {\n\t\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\t\tif (wireMessage.pubRecReceived) storedMessage.pubRecReceived = true;\n\n\t\t\t\t\t// Convert the payload to a hex string.\n\t\t\t\t\tstoredMessage.payloadMessage = {};\n\t\t\t\t\tvar hex = '';\n\t\t\t\t\tvar messageBytes = wireMessage.payloadMessage.payloadBytes;\n\t\t\t\t\tfor (var i = 0; i < messageBytes.length; i++) {\n\t\t\t\t\t\tif (messageBytes[i] <= 0xf)\n\t\t\t\t\t\t\thex = hex + '0' + messageBytes[i].toString(16);\n\t\t\t\t\t\telse hex = hex + messageBytes[i].toString(16);\n\t\t\t\t\t}\n\t\t\t\t\tstoredMessage.payloadMessage.payloadHex = hex;\n\n\t\t\t\t\tstoredMessage.payloadMessage.qos = wireMessage.payloadMessage.qos;\n\t\t\t\t\tstoredMessage.payloadMessage.destinationName =\n\t\t\t\t\t\twireMessage.payloadMessage.destinationName;\n\t\t\t\t\tif (wireMessage.payloadMessage.duplicate)\n\t\t\t\t\t\tstoredMessage.payloadMessage.duplicate = true;\n\t\t\t\t\tif (wireMessage.payloadMessage.retained)\n\t\t\t\t\t\tstoredMessage.payloadMessage.retained = true;\n\n\t\t\t\t\t// Add a sequence number to sent messages.\n\t\t\t\t\tif (prefix.indexOf('Sent:') === 0) {\n\t\t\t\t\t\tif (wireMessage.sequence === undefined)\n\t\t\t\t\t\t\twireMessage.sequence = ++this._sequence;\n\t\t\t\t\t\tstoredMessage.sequence = wireMessage.sequence;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow Error(\n\t\t\t\t\t\tformat(ERROR.INVALID_STORED_DATA, [\n\t\t\t\t\t\t\tprefix + this._localKey + wireMessage.messageIdentifier,\n\t\t\t\t\t\t\tstoredMessage,\n\t\t\t\t\t\t]),\n\t\t\t\t\t);\n\t\t\t}\n\t\t\tlocalStorage.setItem(\n\t\t\t\tprefix + this._localKey + wireMessage.messageIdentifier,\n\t\t\t\tJSON.stringify(storedMessage),\n\t\t\t);\n\t\t};\n\n\t\tClientImpl.prototype.restore = function (key) {\n\t\t\tvar value = localStorage.getItem(key);\n\t\t\tvar storedMessage = JSON.parse(value);\n\n\t\t\tvar wireMessage = new WireMessage(storedMessage.type, storedMessage);\n\n\t\t\tswitch (storedMessage.type) {\n\t\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\t\t// Replace the payload message with a Message object.\n\t\t\t\t\tvar hex = storedMessage.payloadMessage.payloadHex;\n\t\t\t\t\tvar buffer = new ArrayBuffer(hex.length / 2);\n\t\t\t\t\tvar byteStream = new Uint8Array(buffer);\n\t\t\t\t\tvar i = 0;\n\t\t\t\t\twhile (hex.length >= 2) {\n\t\t\t\t\t\tvar x = parseInt(hex.substring(0, 2), 16);\n\t\t\t\t\t\thex = hex.substring(2, hex.length);\n\t\t\t\t\t\tbyteStream[i++] = x;\n\t\t\t\t\t}\n\t\t\t\t\tvar payloadMessage = new Message(byteStream);\n\n\t\t\t\t\tpayloadMessage.qos = storedMessage.payloadMessage.qos;\n\t\t\t\t\tpayloadMessage.destinationName =\n\t\t\t\t\t\tstoredMessage.payloadMessage.destinationName;\n\t\t\t\t\tif (storedMessage.payloadMessage.duplicate)\n\t\t\t\t\t\tpayloadMessage.duplicate = true;\n\t\t\t\t\tif (storedMessage.payloadMessage.retained)\n\t\t\t\t\t\tpayloadMessage.retained = true;\n\t\t\t\t\twireMessage.payloadMessage = payloadMessage;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow Error(format(ERROR.INVALID_STORED_DATA, [key, value]));\n\t\t\t}\n\n\t\t\tif (key.indexOf('Sent:' + this._localKey) === 0) {\n\t\t\t\twireMessage.payloadMessage.duplicate = true;\n\t\t\t\tthis._sentMessages[wireMessage.messageIdentifier] = wireMessage;\n\t\t\t} else if (key.indexOf('Received:' + this._localKey) === 0) {\n\t\t\t\tthis._receivedMessages[wireMessage.messageIdentifier] = wireMessage;\n\t\t\t}\n\t\t};\n\n\t\tClientImpl.prototype._process_queue = function () {\n\t\t\tvar message = null;\n\n\t\t\t// Send all queued messages down socket connection\n\t\t\twhile ((message = this._msg_queue.pop())) {\n\t\t\t\tthis._socket_send(message);\n\t\t\t\t// Notify listeners that message was successfully sent\n\t\t\t\tif (this._notify_msg_sent[message]) {\n\t\t\t\t\tthis._notify_msg_sent[message]();\n\t\t\t\t\tdelete this._notify_msg_sent[message];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Expect an ACK response for this message. Add message to the set of in progress\n\t\t * messages and set an unused identifier in this message.\n\t\t * @ignore\n\t\t */\n\t\tClientImpl.prototype._requires_ack = function (wireMessage) {\n\t\t\tvar messageCount = Object.keys(this._sentMessages).length;\n\t\t\tif (messageCount > this.maxMessageIdentifier)\n\t\t\t\tthrow Error('Too many messages:' + messageCount);\n\n\t\t\twhile (this._sentMessages[this._message_identifier] !== undefined) {\n\t\t\t\tthis._message_identifier++;\n\t\t\t}\n\t\t\twireMessage.messageIdentifier = this._message_identifier;\n\t\t\tthis._sentMessages[wireMessage.messageIdentifier] = wireMessage;\n\t\t\tif (wireMessage.type === MESSAGE_TYPE.PUBLISH) {\n\t\t\t\tthis.store('Sent:', wireMessage);\n\t\t\t}\n\t\t\tif (this._message_identifier === this.maxMessageIdentifier) {\n\t\t\t\tthis._message_identifier = 1;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Called when the underlying websocket has been opened.\n\t\t * @ignore\n\t\t */\n\t\tClientImpl.prototype._on_socket_open = function () {\n\t\t\t// Create the CONNECT message object.\n\t\t\tvar wireMessage = new WireMessage(\n\t\t\t\tMESSAGE_TYPE.CONNECT,\n\t\t\t\tthis.connectOptions,\n\t\t\t);\n\t\t\twireMessage.clientId = this.clientId;\n\t\t\tthis._socket_send(wireMessage);\n\t\t};\n\n\t\t/**\n\t\t * Called when the underlying websocket has received a complete packet.\n\t\t * @ignore\n\t\t */\n\t\tClientImpl.prototype._on_socket_message = function (event) {\n\t\t\tthis._trace('Client._on_socket_message', event.data);\n\t\t\tvar messages = this._deframeMessages(event.data);\n\t\t\tfor (var i = 0; i < messages.length; i += 1) {\n\t\t\t\tthis._handleMessage(messages[i]);\n\t\t\t}\n\t\t};\n\n\t\tClientImpl.prototype._deframeMessages = function (data) {\n\t\t\tvar byteArray = new Uint8Array(data);\n\t\t\tvar messages = [];\n\t\t\tif (this.receiveBuffer) {\n\t\t\t\tvar newData = new Uint8Array(\n\t\t\t\t\tthis.receiveBuffer.length + byteArray.length,\n\t\t\t\t);\n\t\t\t\tnewData.set(this.receiveBuffer);\n\t\t\t\tnewData.set(byteArray, this.receiveBuffer.length);\n\t\t\t\tbyteArray = newData;\n\t\t\t\tdelete this.receiveBuffer;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tvar offset = 0;\n\t\t\t\twhile (offset < byteArray.length) {\n\t\t\t\t\tvar result = decodeMessage(byteArray, offset);\n\t\t\t\t\tvar wireMessage = result[0];\n\t\t\t\t\toffset = result[1];\n\t\t\t\t\tif (wireMessage !== null) {\n\t\t\t\t\t\tmessages.push(wireMessage);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (offset < byteArray.length) {\n\t\t\t\t\tthis.receiveBuffer = byteArray.subarray(offset);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tvar errorStack =\n\t\t\t\t\terror.hasOwnProperty('stack') == 'undefined'\n\t\t\t\t\t\t? error.stack.toString()\n\t\t\t\t\t\t: 'No Error Stack Available';\n\t\t\t\tthis._disconnected(\n\t\t\t\t\tERROR.INTERNAL_ERROR.code,\n\t\t\t\t\tformat(ERROR.INTERNAL_ERROR, [error.message, errorStack]),\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn messages;\n\t\t};\n\n\t\tClientImpl.prototype._handleMessage = function (wireMessage) {\n\t\t\tthis._trace('Client._handleMessage', wireMessage);\n\n\t\t\ttry {\n\t\t\t\tswitch (wireMessage.type) {\n\t\t\t\t\tcase MESSAGE_TYPE.CONNACK:\n\t\t\t\t\t\tthis._connectTimeout.cancel();\n\t\t\t\t\t\tif (this._reconnectTimeout) this._reconnectTimeout.cancel();\n\n\t\t\t\t\t\t// If we have started using clean session then clear up the local state.\n\t\t\t\t\t\tif (this.connectOptions.cleanSession) {\n\t\t\t\t\t\t\tfor (var key in this._sentMessages) {\n\t\t\t\t\t\t\t\tvar sentMessage = this._sentMessages[key];\n\t\t\t\t\t\t\t\tlocalStorage.removeItem(\n\t\t\t\t\t\t\t\t\t'Sent:' + this._localKey + sentMessage.messageIdentifier,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis._sentMessages = {};\n\n\t\t\t\t\t\t\tfor (var key in this._receivedMessages) {\n\t\t\t\t\t\t\t\tvar receivedMessage = this._receivedMessages[key];\n\t\t\t\t\t\t\t\tlocalStorage.removeItem(\n\t\t\t\t\t\t\t\t\t'Received:' +\n\t\t\t\t\t\t\t\t\t\tthis._localKey +\n\t\t\t\t\t\t\t\t\t\treceivedMessage.messageIdentifier,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis._receivedMessages = {};\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Client connected and ready for business.\n\t\t\t\t\t\tif (wireMessage.returnCode === 0) {\n\t\t\t\t\t\t\tthis.connected = true;\n\t\t\t\t\t\t\t// Jump to the end of the list of uris and stop looking for a good host.\n\n\t\t\t\t\t\t\tif (this.connectOptions.uris)\n\t\t\t\t\t\t\t\tthis.hostIndex = this.connectOptions.uris.length;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._disconnected(\n\t\t\t\t\t\t\t\tERROR.CONNACK_RETURNCODE.code,\n\t\t\t\t\t\t\t\tformat(ERROR.CONNACK_RETURNCODE, [\n\t\t\t\t\t\t\t\t\twireMessage.returnCode,\n\t\t\t\t\t\t\t\t\tCONNACK_RC[wireMessage.returnCode],\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Resend messages.\n\t\t\t\t\t\tvar sequencedMessages = [];\n\t\t\t\t\t\tfor (var msgId in this._sentMessages) {\n\t\t\t\t\t\t\tif (this._sentMessages.hasOwnProperty(msgId))\n\t\t\t\t\t\t\t\tsequencedMessages.push(this._sentMessages[msgId]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Also schedule qos 0 buffered messages if any\n\t\t\t\t\t\tif (this._buffered_msg_queue.length > 0) {\n\t\t\t\t\t\t\tvar msg = null;\n\t\t\t\t\t\t\twhile ((msg = this._buffered_msg_queue.pop())) {\n\t\t\t\t\t\t\t\tsequencedMessages.push(msg);\n\t\t\t\t\t\t\t\tif (this.onMessageDelivered)\n\t\t\t\t\t\t\t\t\tthis._notify_msg_sent[msg] = this.onMessageDelivered(\n\t\t\t\t\t\t\t\t\t\tmsg.payloadMessage,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Sort sentMessages into the original sent order.\n\t\t\t\t\t\tvar sequencedMessages = sequencedMessages.sort(function (a, b) {\n\t\t\t\t\t\t\treturn a.sequence - b.sequence;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfor (var i = 0, len = sequencedMessages.length; i < len; i++) {\n\t\t\t\t\t\t\tvar sentMessage = sequencedMessages[i];\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tsentMessage.type == MESSAGE_TYPE.PUBLISH &&\n\t\t\t\t\t\t\t\tsentMessage.pubRecReceived\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tvar pubRelMessage = new WireMessage(MESSAGE_TYPE.PUBREL, {\n\t\t\t\t\t\t\t\t\tmessageIdentifier: sentMessage.messageIdentifier,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tthis._schedule_message(pubRelMessage);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._schedule_message(sentMessage);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Execute the connectOptions.onSuccess callback if there is one.\n\t\t\t\t\t\t// Will also now return if this connection was the result of an automatic\n\t\t\t\t\t\t// reconnect and which URI was successfully connected to.\n\t\t\t\t\t\tif (this.connectOptions.onSuccess) {\n\t\t\t\t\t\t\tthis.connectOptions.onSuccess({\n\t\t\t\t\t\t\t\tinvocationContext: this.connectOptions.invocationContext,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar reconnected = false;\n\t\t\t\t\t\tif (this._reconnecting) {\n\t\t\t\t\t\t\treconnected = true;\n\t\t\t\t\t\t\tthis._reconnectInterval = 1;\n\t\t\t\t\t\t\tthis._reconnecting = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Execute the onConnected callback if there is one.\n\t\t\t\t\t\tthis._connected(reconnected, this._wsuri);\n\n\t\t\t\t\t\t// Process all queued messages now that the connection is established.\n\t\t\t\t\t\tthis._process_queue();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MESSAGE_TYPE.PUBLISH:\n\t\t\t\t\t\tthis._receivePublish(wireMessage);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MESSAGE_TYPE.PUBACK:\n\t\t\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t\t// If this is a re flow of a PUBACK after we have restarted receivedMessage will not exist.\n\t\t\t\t\t\tif (sentMessage) {\n\t\t\t\t\t\t\tdelete this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t\t\tlocalStorage.removeItem(\n\t\t\t\t\t\t\t\t'Sent:' + this._localKey + wireMessage.messageIdentifier,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (this.onMessageDelivered)\n\t\t\t\t\t\t\t\tthis.onMessageDelivered(sentMessage.payloadMessage);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MESSAGE_TYPE.PUBREC:\n\t\t\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t\t// If this is a re flow of a PUBREC after we have restarted receivedMessage will not exist.\n\t\t\t\t\t\tif (sentMessage) {\n\t\t\t\t\t\t\tsentMessage.pubRecReceived = true;\n\t\t\t\t\t\t\tvar pubRelMessage = new WireMessage(MESSAGE_TYPE.PUBREL, {\n\t\t\t\t\t\t\t\tmessageIdentifier: wireMessage.messageIdentifier,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tthis.store('Sent:', sentMessage);\n\t\t\t\t\t\t\tthis._schedule_message(pubRelMessage);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MESSAGE_TYPE.PUBREL:\n\t\t\t\t\t\tvar receivedMessage =\n\t\t\t\t\t\t\tthis._receivedMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t\tlocalStorage.removeItem(\n\t\t\t\t\t\t\t'Received:' + this._localKey + wireMessage.messageIdentifier,\n\t\t\t\t\t\t);\n\t\t\t\t\t\t// If this is a re flow of a PUBREL after we have restarted receivedMessage will not exist.\n\t\t\t\t\t\tif (receivedMessage) {\n\t\t\t\t\t\t\tthis._receiveMessage(receivedMessage);\n\t\t\t\t\t\t\tdelete this._receivedMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Always flow PubComp, we may have previously flowed PubComp but the server lost it and restarted.\n\t\t\t\t\t\tvar pubCompMessage = new WireMessage(MESSAGE_TYPE.PUBCOMP, {\n\t\t\t\t\t\t\tmessageIdentifier: wireMessage.messageIdentifier,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis._schedule_message(pubCompMessage);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MESSAGE_TYPE.PUBCOMP:\n\t\t\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t\tdelete this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t\tlocalStorage.removeItem(\n\t\t\t\t\t\t\t'Sent:' + this._localKey + wireMessage.messageIdentifier,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (this.onMessageDelivered)\n\t\t\t\t\t\t\tthis.onMessageDelivered(sentMessage.payloadMessage);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MESSAGE_TYPE.SUBACK:\n\t\t\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t\tif (sentMessage) {\n\t\t\t\t\t\t\tif (sentMessage.timeOut) sentMessage.timeOut.cancel();\n\t\t\t\t\t\t\t// This will need to be fixed when we add multiple topic support\n\t\t\t\t\t\t\tif (wireMessage.returnCode[0] === 0x80) {\n\t\t\t\t\t\t\t\tif (sentMessage.onFailure) {\n\t\t\t\t\t\t\t\t\tsentMessage.onFailure(wireMessage.returnCode);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (sentMessage.onSuccess) {\n\t\t\t\t\t\t\t\tsentMessage.onSuccess(wireMessage.returnCode);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MESSAGE_TYPE.UNSUBACK:\n\t\t\t\t\t\tvar sentMessage = this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t\tif (sentMessage) {\n\t\t\t\t\t\t\tif (sentMessage.timeOut) sentMessage.timeOut.cancel();\n\t\t\t\t\t\t\tif (sentMessage.callback) {\n\t\t\t\t\t\t\t\tsentMessage.callback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete this._sentMessages[wireMessage.messageIdentifier];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MESSAGE_TYPE.PINGRESP:\n\t\t\t\t\t\t/* The sendPinger or receivePinger may have sent a ping, the receivePinger has already been reset. */\n\t\t\t\t\t\tthis.sendPinger.reset();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MESSAGE_TYPE.DISCONNECT:\n\t\t\t\t\t\t// Clients do not expect to receive disconnect packets.\n\t\t\t\t\t\tthis._disconnected(\n\t\t\t\t\t\t\tERROR.INVALID_MQTT_MESSAGE_TYPE.code,\n\t\t\t\t\t\t\tformat(ERROR.INVALID_MQTT_MESSAGE_TYPE, [wireMessage.type]),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis._disconnected(\n\t\t\t\t\t\t\tERROR.INVALID_MQTT_MESSAGE_TYPE.code,\n\t\t\t\t\t\t\tformat(ERROR.INVALID_MQTT_MESSAGE_TYPE, [wireMessage.type]),\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tvar errorStack =\n\t\t\t\t\terror.hasOwnProperty('stack') == 'undefined'\n\t\t\t\t\t\t? error.stack.toString()\n\t\t\t\t\t\t: 'No Error Stack Available';\n\t\t\t\tthis._disconnected(\n\t\t\t\t\tERROR.INTERNAL_ERROR.code,\n\t\t\t\t\tformat(ERROR.INTERNAL_ERROR, [error.message, errorStack]),\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._on_socket_error = function (error) {\n\t\t\tif (!this._reconnecting) {\n\t\t\t\tthis._disconnected(\n\t\t\t\t\tERROR.SOCKET_ERROR.code,\n\t\t\t\t\tformat(ERROR.SOCKET_ERROR, [error.data]),\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._on_socket_close = function () {\n\t\t\tif (!this._reconnecting) {\n\t\t\t\tthis._disconnected(ERROR.SOCKET_CLOSE.code, format(ERROR.SOCKET_CLOSE));\n\t\t\t}\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._socket_send = function (wireMessage) {\n\t\t\tif (wireMessage.type == 1) {\n\t\t\t\tvar wireMessageMasked = this._traceMask(wireMessage, 'password');\n\t\t\t\tthis._trace('Client._socket_send', wireMessageMasked);\n\t\t\t} else this._trace('Client._socket_send', wireMessage);\n\n\t\t\tthis.socket.send(wireMessage.encode());\n\t\t\t/* We have proved to the server we are alive. */\n\t\t\tthis.sendPinger.reset();\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._receivePublish = function (wireMessage) {\n\t\t\tswitch (wireMessage.payloadMessage.qos) {\n\t\t\t\tcase 'undefined':\n\t\t\t\tcase 0:\n\t\t\t\t\tthis._receiveMessage(wireMessage);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tvar pubAckMessage = new WireMessage(MESSAGE_TYPE.PUBACK, {\n\t\t\t\t\t\tmessageIdentifier: wireMessage.messageIdentifier,\n\t\t\t\t\t});\n\t\t\t\t\tthis._schedule_message(pubAckMessage);\n\t\t\t\t\tthis._receiveMessage(wireMessage);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tthis._receivedMessages[wireMessage.messageIdentifier] = wireMessage;\n\t\t\t\t\tthis.store('Received:', wireMessage);\n\t\t\t\t\tvar pubRecMessage = new WireMessage(MESSAGE_TYPE.PUBREC, {\n\t\t\t\t\t\tmessageIdentifier: wireMessage.messageIdentifier,\n\t\t\t\t\t});\n\t\t\t\t\tthis._schedule_message(pubRecMessage);\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow Error('Invaild qos=' + wireMessage.payloadMessage.qos);\n\t\t\t}\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._receiveMessage = function (wireMessage) {\n\t\t\tif (this.onMessageArrived) {\n\t\t\t\tthis.onMessageArrived(wireMessage.payloadMessage);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Client has connected.\n\t\t * @param {reconnect} [boolean] indicate if this was a result of reconnect operation.\n\t\t * @param {uri} [string] fully qualified WebSocket URI of the server.\n\t\t */\n\t\tClientImpl.prototype._connected = function (reconnect, uri) {\n\t\t\t// Execute the onConnected callback if there is one.\n\t\t\tif (this.onConnected) this.onConnected(reconnect, uri);\n\t\t};\n\n\t\t/**\n\t\t * Attempts to reconnect the client to the server.\n\t\t * For each reconnect attempt, will double the reconnect interval\n\t\t * up to 128 seconds.\n\t\t */\n\t\tClientImpl.prototype._reconnect = function () {\n\t\t\tthis._trace('Client._reconnect');\n\t\t\tif (!this.connected) {\n\t\t\t\tthis._reconnecting = true;\n\t\t\t\tthis.sendPinger.cancel();\n\t\t\t\tthis.receivePinger.cancel();\n\t\t\t\tif (this._reconnectInterval < 128)\n\t\t\t\t\tthis._reconnectInterval = this._reconnectInterval * 2;\n\t\t\t\tif (this.connectOptions.uris) {\n\t\t\t\t\tthis.hostIndex = 0;\n\t\t\t\t\tthis._doConnect(this.connectOptions.uris[0]);\n\t\t\t\t} else {\n\t\t\t\t\tthis._doConnect(this.uri);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Client has disconnected either at its own request or because the server\n\t\t * or network disconnected it. Remove all non-durable state.\n\t\t * @param {errorCode} [number] the error number.\n\t\t * @param {errorText} [string] the error text.\n\t\t * @ignore\n\t\t */\n\t\tClientImpl.prototype._disconnected = function (errorCode, errorText) {\n\t\t\tthis._trace('Client._disconnected', errorCode, errorText);\n\n\t\t\tif (errorCode !== undefined && this._reconnecting) {\n\t\t\t\t//Continue automatic reconnect process\n\t\t\t\tthis._reconnectTimeout = new Timeout(\n\t\t\t\t\tthis,\n\t\t\t\t\tthis._reconnectInterval,\n\t\t\t\t\tthis._reconnect,\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.sendPinger.cancel();\n\t\t\tthis.receivePinger.cancel();\n\t\t\tif (this._connectTimeout) {\n\t\t\t\tthis._connectTimeout.cancel();\n\t\t\t\tthis._connectTimeout = null;\n\t\t\t}\n\n\t\t\t// Clear message buffers.\n\t\t\tthis._msg_queue = [];\n\t\t\tthis._buffered_msg_queue = [];\n\t\t\tthis._notify_msg_sent = {};\n\n\t\t\tif (this.socket) {\n\t\t\t\t// Cancel all socket callbacks so that they cannot be driven again by this socket.\n\t\t\t\tthis.socket.onopen = null;\n\t\t\t\tthis.socket.onmessage = null;\n\t\t\t\tthis.socket.onerror = null;\n\t\t\t\tthis.socket.onclose = null;\n\t\t\t\tif (this.socket.readyState === 1) this.socket.close();\n\t\t\t\tdelete this.socket;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis.connectOptions.uris &&\n\t\t\t\tthis.hostIndex < this.connectOptions.uris.length - 1\n\t\t\t) {\n\t\t\t\t// Try the next host.\n\t\t\t\tthis.hostIndex++;\n\t\t\t\tthis._doConnect(this.connectOptions.uris[this.hostIndex]);\n\t\t\t} else {\n\t\t\t\tif (errorCode === undefined) {\n\t\t\t\t\terrorCode = ERROR.OK.code;\n\t\t\t\t\terrorText = format(ERROR.OK);\n\t\t\t\t}\n\n\t\t\t\t// Run any application callbacks last as they may attempt to reconnect and hence create a new socket.\n\t\t\t\tif (this.connected) {\n\t\t\t\t\tthis.connected = false;\n\t\t\t\t\t// Execute the connectionLostCallback if there is one, and we were connected.\n\t\t\t\t\tif (this.onConnectionLost) {\n\t\t\t\t\t\tthis.onConnectionLost({\n\t\t\t\t\t\t\terrorCode: errorCode,\n\t\t\t\t\t\t\terrorMessage: errorText,\n\t\t\t\t\t\t\treconnect: this.connectOptions.reconnect,\n\t\t\t\t\t\t\turi: this._wsuri,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (errorCode !== ERROR.OK.code && this.connectOptions.reconnect) {\n\t\t\t\t\t\t// Start automatic reconnect process for the very first time since last successful connect.\n\t\t\t\t\t\tthis._reconnectInterval = 1;\n\t\t\t\t\t\tthis._reconnect();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Otherwise we never had a connection, so indicate that the connect has failed.\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.connectOptions.mqttVersion === 4 &&\n\t\t\t\t\t\tthis.connectOptions.mqttVersionExplicit === false\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._trace('Failed to connect V4, dropping back to V3');\n\t\t\t\t\t\tthis.connectOptions.mqttVersion = 3;\n\t\t\t\t\t\tif (this.connectOptions.uris) {\n\t\t\t\t\t\t\tthis.hostIndex = 0;\n\t\t\t\t\t\t\tthis._doConnect(this.connectOptions.uris[0]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._doConnect(this.uri);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (this.connectOptions.onFailure) {\n\t\t\t\t\t\tthis.connectOptions.onFailure({\n\t\t\t\t\t\t\tinvocationContext: this.connectOptions.invocationContext,\n\t\t\t\t\t\t\terrorCode: errorCode,\n\t\t\t\t\t\t\terrorMessage: errorText,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._trace = function () {\n\t\t\t// Pass trace message back to client's callback function\n\t\t\tif (this.traceFunction) {\n\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\tfor (var i in args) {\n\t\t\t\t\tif (typeof args[i] !== 'undefined')\n\t\t\t\t\t\targs.splice(i, 1, JSON.stringify(args[i]));\n\t\t\t\t}\n\t\t\t\tvar record = args.join('');\n\t\t\t\tthis.traceFunction({ severity: 'Debug', message: record });\n\t\t\t}\n\n\t\t\t//buffer style trace\n\t\t\tif (this._traceBuffer !== null) {\n\t\t\t\tfor (var i = 0, max = arguments.length; i < max; i++) {\n\t\t\t\t\tif (this._traceBuffer.length == this._MAX_TRACE_ENTRIES) {\n\t\t\t\t\t\tthis._traceBuffer.shift();\n\t\t\t\t\t}\n\t\t\t\t\tif (i === 0) this._traceBuffer.push(arguments[i]);\n\t\t\t\t\telse if (typeof arguments[i] === 'undefined')\n\t\t\t\t\t\tthis._traceBuffer.push(arguments[i]);\n\t\t\t\t\telse this._traceBuffer.push('  ' + JSON.stringify(arguments[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/** @ignore */\n\t\tClientImpl.prototype._traceMask = function (traceObject, masked) {\n\t\t\tvar traceObjectMasked = {};\n\t\t\tfor (var attr in traceObject) {\n\t\t\t\tif (traceObject.hasOwnProperty(attr)) {\n\t\t\t\t\tif (attr == masked) traceObjectMasked[attr] = '******';\n\t\t\t\t\telse traceObjectMasked[attr] = traceObject[attr];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn traceObjectMasked;\n\t\t};\n\n\t\t// ------------------------------------------------------------------------\n\t\t// Public Programming interface.\n\t\t// ------------------------------------------------------------------------\n\n\t\t/**\n\t\t * The JavaScript application communicates to the server using a {@link Paho.Client} object.\n\t\t * <p>\n\t\t * Most applications will create just one Client object and then call its connect() method,\n\t\t * however applications can create more than one Client object if they wish.\n\t\t * In this case the combination of host, port and clientId attributes must be different for each Client object.\n\t\t * <p>\n\t\t * The send, subscribe and unsubscribe methods are implemented as asynchronous JavaScript methods\n\t\t * (even though the underlying protocol exchange might be synchronous in nature).\n\t\t * This means they signal their completion by calling back to the application,\n\t\t * via Success or Failure callback functions provided by the application on the method in question.\n\t\t * Such callbacks are called at most once per method invocation and do not persist beyond the lifetime\n\t\t * of the script that made the invocation.\n\t\t * <p>\n\t\t * In contrast there are some callback functions, most notably <i>onMessageArrived</i>,\n\t\t * that are defined on the {@link Paho.Client} object.\n\t\t * These may get called multiple times, and aren't directly related to specific method invocations made by the client.\n\t\t *\n\t\t * @name Paho.Client\n\t\t *\n\t\t * @constructor\n\t\t *\n\t\t * @param {string} host - the address of the messaging server, as a fully qualified WebSocket URI, as a DNS name or dotted decimal IP address.\n\t\t * @param {number} port - the port number to connect to - only required if host is not a URI\n\t\t * @param {string} path - the path on the host to connect to - only used if host is not a URI. Default: '/mqtt'.\n\t\t * @param {string} clientId - the Messaging client identifier, between 1 and 23 characters in length.\n\t\t *\n\t\t * @property {string} host - <i>read only</i> the server's DNS hostname or dotted decimal IP address.\n\t\t * @property {number} port - <i>read only</i> the server's port.\n\t\t * @property {string} path - <i>read only</i> the server's path.\n\t\t * @property {string} clientId - <i>read only</i> used when connecting to the server.\n\t\t * @property {function} onConnectionLost - called when a connection has been lost.\n\t\t *                            after a connect() method has succeeded.\n\t\t *                            Establish the call back used when a connection has been lost. The connection may be\n\t\t *                            lost because the client initiates a disconnect or because the server or network\n\t\t *                            cause the client to be disconnected. The disconnect call back may be called without\n\t\t *                            the connectionComplete call back being invoked if, for example the client fails to\n\t\t *                            connect.\n\t\t *                            A single response object parameter is passed to the onConnectionLost callback containing the following fields:\n\t\t *                            <ol>\n\t\t *                            <li>errorCode\n\t\t *                            <li>errorMessage\n\t\t *                            </ol>\n\t\t * @property {function} onMessageDelivered - called when a message has been delivered.\n\t\t *                            All processing that this Client will ever do has been completed. So, for example,\n\t\t *                            in the case of a Qos=2 message sent by this client, the PubComp flow has been received from the server\n\t\t *                            and the message has been removed from persistent storage before this callback is invoked.\n\t\t *                            Parameters passed to the onMessageDelivered callback are:\n\t\t *                            <ol>\n\t\t *                            <li>{@link Paho.Message} that was delivered.\n\t\t *                            </ol>\n\t\t * @property {function} onMessageArrived - called when a message has arrived in this Paho.client.\n\t\t *                            Parameters passed to the onMessageArrived callback are:\n\t\t *                            <ol>\n\t\t *                            <li>{@link Paho.Message} that has arrived.\n\t\t *                            </ol>\n\t\t * @property {function} onConnected - called when a connection is successfully made to the server.\n\t\t *                                  after a connect() method.\n\t\t *                                  Parameters passed to the onConnected callback are:\n\t\t *                                  <ol>\n\t\t *                                  <li>reconnect (boolean) - If true, the connection was the result of a reconnect.</li>\n\t\t *                                  <li>URI (string) - The URI used to connect to the server.</li>\n\t\t *                                  </ol>\n\t\t * @property {boolean} disconnectedPublishing - if set, will enable disconnected publishing in\n\t\t *                                            in the event that the connection to the server is lost.\n\t\t * @property {number} disconnectedBufferSize - Used to set the maximum number of messages that the disconnected\n\t\t *                                             buffer will hold before rejecting new messages. Default size: 5000 messages\n\t\t * @property {function} trace - called whenever trace is called. TODO\n\t\t */\n\t\tvar Client = function (host, port, path, clientId) {\n\t\t\tvar uri;\n\n\t\t\tif (typeof host !== 'string')\n\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof host, 'host']));\n\n\t\t\tif (arguments.length == 2) {\n\t\t\t\t// host: must be full ws:// uri\n\t\t\t\t// port: clientId\n\t\t\t\tclientId = port;\n\t\t\t\turi = host;\n\t\t\t\tvar match = uri.match(\n\t\t\t\t\t/^(wss?):\\/\\/((\\[(.+)\\])|([^\\/]+?))(:(\\d+))?(\\/.*)$/,\n\t\t\t\t);\n\t\t\t\tif (match) {\n\t\t\t\t\thost = match[4] || match[2];\n\t\t\t\t\tport = parseInt(match[7]);\n\t\t\t\t\tpath = match[8];\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [host, 'host']));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (arguments.length == 3) {\n\t\t\t\t\tclientId = path;\n\t\t\t\t\tpath = '/mqtt';\n\t\t\t\t}\n\t\t\t\tif (typeof port !== 'number' || port < 0)\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof port, 'port']));\n\t\t\t\tif (typeof path !== 'string')\n\t\t\t\t\tthrow new Error(format(ERROR.INVALID_TYPE, [typeof path, 'path']));\n\n\t\t\t\tvar ipv6AddSBracket =\n\t\t\t\t\thost.indexOf(':') !== -1 &&\n\t\t\t\t\thost.slice(0, 1) !== '[' &&\n\t\t\t\t\thost.slice(-1) !== ']';\n\t\t\t\turi =\n\t\t\t\t\t'ws://' +\n\t\t\t\t\t(ipv6AddSBracket ? '[' + host + ']' : host) +\n\t\t\t\t\t':' +\n\t\t\t\t\tport +\n\t\t\t\t\tpath;\n\t\t\t}\n\n\t\t\tvar clientIdLength = 0;\n\t\t\tfor (var i = 0; i < clientId.length; i++) {\n\t\t\t\tvar charCode = clientId.charCodeAt(i);\n\t\t\t\tif (0xd800 <= charCode && charCode <= 0xdbff) {\n\t\t\t\t\ti++; // Surrogate pair.\n\t\t\t\t}\n\t\t\t\tclientIdLength++;\n\t\t\t}\n\t\t\tif (typeof clientId !== 'string' || clientIdLength > 65535)\n\t\t\t\tthrow new Error(format(ERROR.INVALID_ARGUMENT, [clientId, 'clientId']));\n\n\t\t\tvar client = new ClientImpl(uri, host, port, path, clientId);\n\n\t\t\t//Public Properties\n\t\t\tObject.defineProperties(this, {\n\t\t\t\thost: {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn host;\n\t\t\t\t\t},\n\t\t\t\t\tset: function () {\n\t\t\t\t\t\tthrow new Error(format(ERROR.UNSUPPORTED_OPERATION));\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tport: {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn port;\n\t\t\t\t\t},\n\t\t\t\t\tset: function () {\n\t\t\t\t\t\tthrow new Error(format(ERROR.UNSUPPORTED_OPERATION));\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tpath: {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn path;\n\t\t\t\t\t},\n\t\t\t\t\tset: function () {\n\t\t\t\t\t\tthrow new Error(format(ERROR.UNSUPPORTED_OPERATION));\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\turi: {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn uri;\n\t\t\t\t\t},\n\t\t\t\t\tset: function () {\n\t\t\t\t\t\tthrow new Error(format(ERROR.UNSUPPORTED_OPERATION));\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tclientId: {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn client.clientId;\n\t\t\t\t\t},\n\t\t\t\t\tset: function () {\n\t\t\t\t\t\tthrow new Error(format(ERROR.UNSUPPORTED_OPERATION));\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tonConnected: {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn client.onConnected;\n\t\t\t\t\t},\n\t\t\t\t\tset: function (newOnConnected) {\n\t\t\t\t\t\tif (typeof newOnConnected === 'function')\n\t\t\t\t\t\t\tclient.onConnected = newOnConnected;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_TYPE, [\n\t\t\t\t\t\t\t\t\ttypeof newOnConnected,\n\t\t\t\t\t\t\t\t\t'onConnected',\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdisconnectedPublishing: {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn client.disconnectedPublishing;\n\t\t\t\t\t},\n\t\t\t\t\tset: function (newDisconnectedPublishing) {\n\t\t\t\t\t\tclient.disconnectedPublishing = newDisconnectedPublishing;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdisconnectedBufferSize: {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn client.disconnectedBufferSize;\n\t\t\t\t\t},\n\t\t\t\t\tset: function (newDisconnectedBufferSize) {\n\t\t\t\t\t\tclient.disconnectedBufferSize = newDisconnectedBufferSize;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tonConnectionLost: {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn client.onConnectionLost;\n\t\t\t\t\t},\n\t\t\t\t\tset: function (newOnConnectionLost) {\n\t\t\t\t\t\tif (typeof newOnConnectionLost === 'function')\n\t\t\t\t\t\t\tclient.onConnectionLost = newOnConnectionLost;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_TYPE, [\n\t\t\t\t\t\t\t\t\ttypeof newOnConnectionLost,\n\t\t\t\t\t\t\t\t\t'onConnectionLost',\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tonMessageDelivered: {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn client.onMessageDelivered;\n\t\t\t\t\t},\n\t\t\t\t\tset: function (newOnMessageDelivered) {\n\t\t\t\t\t\tif (typeof newOnMessageDelivered === 'function')\n\t\t\t\t\t\t\tclient.onMessageDelivered = newOnMessageDelivered;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_TYPE, [\n\t\t\t\t\t\t\t\t\ttypeof newOnMessageDelivered,\n\t\t\t\t\t\t\t\t\t'onMessageDelivered',\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tonMessageArrived: {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn client.onMessageArrived;\n\t\t\t\t\t},\n\t\t\t\t\tset: function (newOnMessageArrived) {\n\t\t\t\t\t\tif (typeof newOnMessageArrived === 'function')\n\t\t\t\t\t\t\tclient.onMessageArrived = newOnMessageArrived;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_TYPE, [\n\t\t\t\t\t\t\t\t\ttypeof newOnMessageArrived,\n\t\t\t\t\t\t\t\t\t'onMessageArrived',\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttrace: {\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn client.traceFunction;\n\t\t\t\t\t},\n\t\t\t\t\tset: function (trace) {\n\t\t\t\t\t\tif (typeof trace === 'function') {\n\t\t\t\t\t\t\tclient.traceFunction = trace;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_TYPE, [typeof trace, 'onTrace']),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t/**\n\t\t\t * Connect this Messaging client to its server.\n\t\t\t *\n\t\t\t * @name Paho.Client#connect\n\t\t\t * @function\n\t\t\t * @param {object} connectOptions - Attributes used with the connection.\n\t\t\t * @param {number} connectOptions.timeout - If the connect has not succeeded within this\n\t\t\t *                    number of seconds, it is deemed to have failed.\n\t\t\t *                    The default is 30 seconds.\n\t\t\t * @param {string} connectOptions.userName - Authentication username for this connection.\n\t\t\t * @param {string} connectOptions.password - Authentication password for this connection.\n\t\t\t * @param {Paho.Message} connectOptions.willMessage - sent by the server when the client\n\t\t\t *                    disconnects abnormally.\n\t\t\t * @param {number} connectOptions.keepAliveInterval - the server disconnects this client if\n\t\t\t *                    there is no activity for this number of seconds.\n\t\t\t *                    The default value of 60 seconds is assumed if not set.\n\t\t\t * @param {boolean} connectOptions.cleanSession - if true(default) the client and server\n\t\t\t *                    persistent state is deleted on successful connect.\n\t\t\t * @param {boolean} connectOptions.useSSL - if present and true, use an SSL Websocket connection.\n\t\t\t * @param {object} connectOptions.invocationContext - passed to the onSuccess callback or onFailure callback.\n\t\t\t * @param {function} connectOptions.onSuccess - called when the connect acknowledgement\n\t\t\t *                    has been received from the server.\n\t\t\t * A single response object parameter is passed to the onSuccess callback containing the following fields:\n\t\t\t * <ol>\n\t\t\t * <li>invocationContext as passed in to the onSuccess method in the connectOptions.\n\t\t\t * </ol>\n\t\t\t * @param {function} connectOptions.onFailure - called when the connect request has failed or timed out.\n\t\t\t * A single response object parameter is passed to the onFailure callback containing the following fields:\n\t\t\t * <ol>\n\t\t\t * <li>invocationContext as passed in to the onFailure method in the connectOptions.\n\t\t\t * <li>errorCode a number indicating the nature of the error.\n\t\t\t * <li>errorMessage text describing the error.\n\t\t\t * </ol>\n\t\t\t * @param {array} connectOptions.hosts - If present this contains either a set of hostnames or fully qualified\n\t\t\t * WebSocket URIs (ws://iot.eclipse.org:80/ws), that are tried in order in place\n\t\t\t * of the host and port paramater on the construtor. The hosts are tried one at at time in order until\n\t\t\t * one of then succeeds.\n\t\t\t * @param {array} connectOptions.ports - If present the set of ports matching the hosts. If hosts contains URIs, this property\n\t\t\t * is not used.\n\t\t\t * @param {boolean} connectOptions.reconnect - Sets whether the client will automatically attempt to reconnect\n\t\t\t * to the server if the connection is lost.\n\t\t\t *<ul>\n\t\t\t *<li>If set to false, the client will not attempt to automatically reconnect to the server in the event that the\n\t\t\t * connection is lost.</li>\n\t\t\t *<li>If set to true, in the event that the connection is lost, the client will attempt to reconnect to the server.\n\t\t\t * It will initially wait 1 second before it attempts to reconnect, for every failed reconnect attempt, the delay\n\t\t\t * will double until it is at 2 minutes at which point the delay will stay at 2 minutes.</li>\n\t\t\t *</ul>\n\t\t\t * @param {number} connectOptions.mqttVersion - The version of MQTT to use to connect to the MQTT Broker.\n\t\t\t *<ul>\n\t\t\t *<li>3 - MQTT V3.1</li>\n\t\t\t *<li>4 - MQTT V3.1.1</li>\n\t\t\t *</ul>\n\t\t\t * @param {boolean} connectOptions.mqttVersionExplicit - If set to true, will force the connection to use the\n\t\t\t * selected MQTT Version or will fail to connect.\n\t\t\t * @param {array} connectOptions.uris - If present, should contain a list of fully qualified WebSocket uris\n\t\t\t * (e.g. ws://iot.eclipse.org:80/ws), that are tried in order in place of the host and port parameter of the construtor.\n\t\t\t * The uris are tried one at a time in order until one of them succeeds. Do not use this in conjunction with hosts as\n\t\t\t * the hosts array will be converted to uris and will overwrite this property.\n\t\t\t * @throws {InvalidState} If the client is not in disconnected state. The client must have received connectionLost\n\t\t\t * or disconnected before calling connect for a second or subsequent time.\n\t\t\t */\n\t\t\tthis.connect = function (connectOptions) {\n\t\t\t\tconnectOptions = connectOptions || {};\n\t\t\t\tvalidate(connectOptions, {\n\t\t\t\t\ttimeout: 'number',\n\t\t\t\t\tuserName: 'string',\n\t\t\t\t\tpassword: 'string',\n\t\t\t\t\twillMessage: 'object',\n\t\t\t\t\tkeepAliveInterval: 'number',\n\t\t\t\t\tcleanSession: 'boolean',\n\t\t\t\t\tuseSSL: 'boolean',\n\t\t\t\t\tinvocationContext: 'object',\n\t\t\t\t\tonSuccess: 'function',\n\t\t\t\t\tonFailure: 'function',\n\t\t\t\t\thosts: 'object',\n\t\t\t\t\tports: 'object',\n\t\t\t\t\treconnect: 'boolean',\n\t\t\t\t\tmqttVersion: 'number',\n\t\t\t\t\tmqttVersionExplicit: 'boolean',\n\t\t\t\t\turis: 'object',\n\t\t\t\t});\n\n\t\t\t\t// If no keep alive interval is set, assume 60 seconds.\n\t\t\t\tif (connectOptions.keepAliveInterval === undefined)\n\t\t\t\t\tconnectOptions.keepAliveInterval = 60;\n\n\t\t\t\tif (connectOptions.mqttVersion > 4 || connectOptions.mqttVersion < 3) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\tconnectOptions.mqttVersion,\n\t\t\t\t\t\t\t'connectOptions.mqttVersion',\n\t\t\t\t\t\t]),\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (connectOptions.mqttVersion === undefined) {\n\t\t\t\t\tconnectOptions.mqttVersionExplicit = false;\n\t\t\t\t\tconnectOptions.mqttVersion = 4;\n\t\t\t\t} else {\n\t\t\t\t\tconnectOptions.mqttVersionExplicit = true;\n\t\t\t\t}\n\n\t\t\t\t//Check that if password is set, so is username\n\t\t\t\tif (\n\t\t\t\t\tconnectOptions.password !== undefined &&\n\t\t\t\t\tconnectOptions.userName === undefined\n\t\t\t\t)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\tconnectOptions.password,\n\t\t\t\t\t\t\t'connectOptions.password',\n\t\t\t\t\t\t]),\n\t\t\t\t\t);\n\n\t\t\t\tif (connectOptions.willMessage) {\n\t\t\t\t\tif (!(connectOptions.willMessage instanceof Message))\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\tformat(ERROR.INVALID_TYPE, [\n\t\t\t\t\t\t\t\tconnectOptions.willMessage,\n\t\t\t\t\t\t\t\t'connectOptions.willMessage',\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t);\n\t\t\t\t\t// The will message must have a payload that can be represented as a string.\n\t\t\t\t\t// Cause the willMessage to throw an exception if this is not the case.\n\t\t\t\t\tconnectOptions.willMessage.stringPayload = null;\n\n\t\t\t\t\tif (typeof connectOptions.willMessage.destinationName === 'undefined')\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\tformat(ERROR.INVALID_TYPE, [\n\t\t\t\t\t\t\t\ttypeof connectOptions.willMessage.destinationName,\n\t\t\t\t\t\t\t\t'connectOptions.willMessage.destinationName',\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (typeof connectOptions.cleanSession === 'undefined')\n\t\t\t\t\tconnectOptions.cleanSession = true;\n\t\t\t\tif (connectOptions.hosts) {\n\t\t\t\t\tif (!(connectOptions.hosts instanceof Array))\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\t\tconnectOptions.hosts,\n\t\t\t\t\t\t\t\t'connectOptions.hosts',\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t);\n\t\t\t\t\tif (connectOptions.hosts.length < 1)\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\t\tconnectOptions.hosts,\n\t\t\t\t\t\t\t\t'connectOptions.hosts',\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t);\n\n\t\t\t\t\tvar usingURIs = false;\n\t\t\t\t\tfor (var i = 0; i < connectOptions.hosts.length; i++) {\n\t\t\t\t\t\tif (typeof connectOptions.hosts[i] !== 'string')\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_TYPE, [\n\t\t\t\t\t\t\t\t\ttypeof connectOptions.hosts[i],\n\t\t\t\t\t\t\t\t\t'connectOptions.hosts[' + i + ']',\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t/^(wss?):\\/\\/((\\[(.+)\\])|([^\\/]+?))(:(\\d+))?(\\/.*)$/.test(\n\t\t\t\t\t\t\t\tconnectOptions.hosts[i],\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\t\tusingURIs = true;\n\t\t\t\t\t\t\t} else if (!usingURIs) {\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\t\t\t\tconnectOptions.hosts[i],\n\t\t\t\t\t\t\t\t\t\t'connectOptions.hosts[' + i + ']',\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (usingURIs) {\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\t\t\tconnectOptions.hosts[i],\n\t\t\t\t\t\t\t\t\t'connectOptions.hosts[' + i + ']',\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!usingURIs) {\n\t\t\t\t\t\tif (!connectOptions.ports)\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\t\t\tconnectOptions.ports,\n\t\t\t\t\t\t\t\t\t'connectOptions.ports',\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (!(connectOptions.ports instanceof Array))\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\t\t\tconnectOptions.ports,\n\t\t\t\t\t\t\t\t\t'connectOptions.ports',\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (connectOptions.hosts.length !== connectOptions.ports.length)\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\t\t\tconnectOptions.ports,\n\t\t\t\t\t\t\t\t\t'connectOptions.ports',\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconnectOptions.uris = [];\n\n\t\t\t\t\t\tfor (var i = 0; i < connectOptions.hosts.length; i++) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\ttypeof connectOptions.ports[i] !== 'number' ||\n\t\t\t\t\t\t\t\tconnectOptions.ports[i] < 0\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\tformat(ERROR.INVALID_TYPE, [\n\t\t\t\t\t\t\t\t\t\ttypeof connectOptions.ports[i],\n\t\t\t\t\t\t\t\t\t\t'connectOptions.ports[' + i + ']',\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tvar host = connectOptions.hosts[i];\n\t\t\t\t\t\t\tvar port = connectOptions.ports[i];\n\n\t\t\t\t\t\t\tvar ipv6 = host.indexOf(':') !== -1;\n\t\t\t\t\t\t\turi =\n\t\t\t\t\t\t\t\t'ws://' + (ipv6 ? '[' + host + ']' : host) + ':' + port + path;\n\t\t\t\t\t\t\tconnectOptions.uris.push(uri);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconnectOptions.uris = connectOptions.hosts;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tclient.connect(connectOptions);\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Subscribe for messages, request receipt of a copy of messages sent to the destinations described by the filter.\n\t\t\t *\n\t\t\t * @name Paho.Client#subscribe\n\t\t\t * @function\n\t\t\t * @param {string} filter describing the destinations to receive messages from.\n\t\t\t * <br>\n\t\t\t * @param {object} subscribeOptions - used to control the subscription\n\t\t\t *\n\t\t\t * @param {number} subscribeOptions.qos - the maximum qos of any publications sent\n\t\t\t *                                  as a result of making this subscription.\n\t\t\t * @param {object} subscribeOptions.invocationContext - passed to the onSuccess callback\n\t\t\t *                                  or onFailure callback.\n\t\t\t * @param {function} subscribeOptions.onSuccess - called when the subscribe acknowledgement\n\t\t\t *                                  has been received from the server.\n\t\t\t *                                  A single response object parameter is passed to the onSuccess callback containing the following fields:\n\t\t\t *                                  <ol>\n\t\t\t *                                  <li>invocationContext if set in the subscribeOptions.\n\t\t\t *                                  </ol>\n\t\t\t * @param {function} subscribeOptions.onFailure - called when the subscribe request has failed or timed out.\n\t\t\t *                                  A single response object parameter is passed to the onFailure callback containing the following fields:\n\t\t\t *                                  <ol>\n\t\t\t *                                  <li>invocationContext - if set in the subscribeOptions.\n\t\t\t *                                  <li>errorCode - a number indicating the nature of the error.\n\t\t\t *                                  <li>errorMessage - text describing the error.\n\t\t\t *                                  </ol>\n\t\t\t * @param {number} subscribeOptions.timeout - which, if present, determines the number of\n\t\t\t *                                  seconds after which the onFailure calback is called.\n\t\t\t *                                  The presence of a timeout does not prevent the onSuccess\n\t\t\t *                                  callback from being called when the subscribe completes.\n\t\t\t * @throws {InvalidState} if the client is not in connected state.\n\t\t\t */\n\t\t\tthis.subscribe = function (filter, subscribeOptions) {\n\t\t\t\tif (typeof filter !== 'string' && filter.constructor !== Array)\n\t\t\t\t\tthrow new Error('Invalid argument:' + filter);\n\t\t\t\tsubscribeOptions = subscribeOptions || {};\n\t\t\t\tvalidate(subscribeOptions, {\n\t\t\t\t\tqos: 'number',\n\t\t\t\t\tinvocationContext: 'object',\n\t\t\t\t\tonSuccess: 'function',\n\t\t\t\t\tonFailure: 'function',\n\t\t\t\t\ttimeout: 'number',\n\t\t\t\t});\n\t\t\t\tif (subscribeOptions.timeout && !subscribeOptions.onFailure)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'subscribeOptions.timeout specified with no onFailure callback.',\n\t\t\t\t\t);\n\t\t\t\tif (\n\t\t\t\t\ttypeof subscribeOptions.qos !== 'undefined' &&\n\t\t\t\t\t!(\n\t\t\t\t\t\tsubscribeOptions.qos === 0 ||\n\t\t\t\t\t\tsubscribeOptions.qos === 1 ||\n\t\t\t\t\t\tsubscribeOptions.qos === 2\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\tsubscribeOptions.qos,\n\t\t\t\t\t\t\t'subscribeOptions.qos',\n\t\t\t\t\t\t]),\n\t\t\t\t\t);\n\t\t\t\tclient.subscribe(filter, subscribeOptions);\n\t\t\t};\n\n\t\t\t/**\n\t\t * Unsubscribe for messages, stop receiving messages sent to destinations described by the filter.\n\t\t *\n\t\t * @name Paho.Client#unsubscribe\n\t\t * @function\n\t\t * @param {string} filter - describing the destinations to receive messages from.\n\t\t * @param {object} unsubscribeOptions - used to control the subscription\n\t\t * @param {object} unsubscribeOptions.invocationContext - passed to the onSuccess callback\n\t\t\t\t\t\t\t\t\t\t\t  or onFailure callback.\n\t\t * @param {function} unsubscribeOptions.onSuccess - called when the unsubscribe acknowledgement has been received from the server.\n\t\t *                                    A single response object parameter is passed to the\n\t\t *                                    onSuccess callback containing the following fields:\n\t\t *                                    <ol>\n\t\t *                                    <li>invocationContext - if set in the unsubscribeOptions.\n\t\t *                                    </ol>\n\t\t * @param {function} unsubscribeOptions.onFailure called when the unsubscribe request has failed or timed out.\n\t\t *                                    A single response object parameter is passed to the onFailure callback containing the following fields:\n\t\t *                                    <ol>\n\t\t *                                    <li>invocationContext - if set in the unsubscribeOptions.\n\t\t *                                    <li>errorCode - a number indicating the nature of the error.\n\t\t *                                    <li>errorMessage - text describing the error.\n\t\t *                                    </ol>\n\t\t * @param {number} unsubscribeOptions.timeout - which, if present, determines the number of seconds\n\t\t *                                    after which the onFailure callback is called. The presence of\n\t\t *                                    a timeout does not prevent the onSuccess callback from being\n\t\t *                                    called when the unsubscribe completes\n\t\t * @throws {InvalidState} if the client is not in connected state.\n\t\t */\n\t\t\tthis.unsubscribe = function (filter, unsubscribeOptions) {\n\t\t\t\tif (typeof filter !== 'string' && filter.constructor !== Array)\n\t\t\t\t\tthrow new Error('Invalid argument:' + filter);\n\t\t\t\tunsubscribeOptions = unsubscribeOptions || {};\n\t\t\t\tvalidate(unsubscribeOptions, {\n\t\t\t\t\tinvocationContext: 'object',\n\t\t\t\t\tonSuccess: 'function',\n\t\t\t\t\tonFailure: 'function',\n\t\t\t\t\ttimeout: 'number',\n\t\t\t\t});\n\t\t\t\tif (unsubscribeOptions.timeout && !unsubscribeOptions.onFailure)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'unsubscribeOptions.timeout specified with no onFailure callback.',\n\t\t\t\t\t);\n\t\t\t\tclient.unsubscribe(filter, unsubscribeOptions);\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Send a message to the consumers of the destination in the Message.\n\t\t\t *\n\t\t\t * @name Paho.Client#send\n\t\t\t * @function\n\t\t\t * @param {string|Paho.Message} topic - <b>mandatory</b> The name of the destination to which the message is to be sent.\n\t\t\t * \t\t\t\t\t   - If it is the only parameter, used as Paho.Message object.\n\t\t\t * @param {String|ArrayBuffer} payload - The message data to be sent.\n\t\t\t * @param {number} qos The Quality of Service used to deliver the message.\n\t\t\t * \t\t<dl>\n\t\t\t * \t\t\t<dt>0 Best effort (default).\n\t\t\t *     \t\t\t<dt>1 At least once.\n\t\t\t *     \t\t\t<dt>2 Exactly once.\n\t\t\t * \t\t</dl>\n\t\t\t * @param {Boolean} retained If true, the message is to be retained by the server and delivered\n\t\t\t *                     to both current and future subscriptions.\n\t\t\t *                     If false the server only delivers the message to current subscribers, this is the default for new Messages.\n\t\t\t *                     A received message has the retained boolean set to true if the message was published\n\t\t\t *                     with the retained boolean set to true\n\t\t\t *                     and the subscrption was made after the message has been published.\n\t\t\t * @throws {InvalidState} if the client is not connected.\n\t\t\t */\n\t\t\tthis.send = function (topic, payload, qos, retained) {\n\t\t\t\tvar message;\n\n\t\t\t\tif (arguments.length === 0) {\n\t\t\t\t\tthrow new Error('Invalid argument.' + 'length');\n\t\t\t\t} else if (arguments.length == 1) {\n\t\t\t\t\tif (!(topic instanceof Message) && typeof topic !== 'string')\n\t\t\t\t\t\tthrow new Error('Invalid argument:' + typeof topic);\n\n\t\t\t\t\tmessage = topic;\n\t\t\t\t\tif (typeof message.destinationName === 'undefined')\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\t\tmessage.destinationName,\n\t\t\t\t\t\t\t\t'Message.destinationName',\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t);\n\t\t\t\t\tclient.send(message);\n\t\t\t\t} else {\n\t\t\t\t\t//parameter checking in Message object\n\t\t\t\t\tmessage = new Message(payload);\n\t\t\t\t\tmessage.destinationName = topic;\n\t\t\t\t\tif (arguments.length >= 3) message.qos = qos;\n\t\t\t\t\tif (arguments.length >= 4) message.retained = retained;\n\t\t\t\t\tclient.send(message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Publish a message to the consumers of the destination in the Message.\n\t\t\t * Synonym for Paho.Mqtt.Client#send\n\t\t\t *\n\t\t\t * @name Paho.Client#publish\n\t\t\t * @function\n\t\t\t * @param {string|Paho.Message} topic - <b>mandatory</b> The name of the topic to which the message is to be published.\n\t\t\t * \t\t\t\t\t   - If it is the only parameter, used as Paho.Message object.\n\t\t\t * @param {String|ArrayBuffer} payload - The message data to be published.\n\t\t\t * @param {number} qos The Quality of Service used to deliver the message.\n\t\t\t * \t\t<dl>\n\t\t\t * \t\t\t<dt>0 Best effort (default).\n\t\t\t *     \t\t\t<dt>1 At least once.\n\t\t\t *     \t\t\t<dt>2 Exactly once.\n\t\t\t * \t\t</dl>\n\t\t\t * @param {Boolean} retained If true, the message is to be retained by the server and delivered\n\t\t\t *                     to both current and future subscriptions.\n\t\t\t *                     If false the server only delivers the message to current subscribers, this is the default for new Messages.\n\t\t\t *                     A received message has the retained boolean set to true if the message was published\n\t\t\t *                     with the retained boolean set to true\n\t\t\t *                     and the subscrption was made after the message has been published.\n\t\t\t * @throws {InvalidState} if the client is not connected.\n\t\t\t */\n\t\t\tthis.publish = function (topic, payload, qos, retained) {\n\t\t\t\tvar message;\n\n\t\t\t\tif (arguments.length === 0) {\n\t\t\t\t\tthrow new Error('Invalid argument.' + 'length');\n\t\t\t\t} else if (arguments.length == 1) {\n\t\t\t\t\tif (!(topic instanceof Message) && typeof topic !== 'string')\n\t\t\t\t\t\tthrow new Error('Invalid argument:' + typeof topic);\n\n\t\t\t\t\tmessage = topic;\n\t\t\t\t\tif (typeof message.destinationName === 'undefined')\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\t\tmessage.destinationName,\n\t\t\t\t\t\t\t\t'Message.destinationName',\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t);\n\t\t\t\t\tclient.send(message);\n\t\t\t\t} else {\n\t\t\t\t\t//parameter checking in Message object\n\t\t\t\t\tmessage = new Message(payload);\n\t\t\t\t\tmessage.destinationName = topic;\n\t\t\t\t\tif (arguments.length >= 3) message.qos = qos;\n\t\t\t\t\tif (arguments.length >= 4) message.retained = retained;\n\t\t\t\t\tclient.send(message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Normal disconnect of this Messaging client from its server.\n\t\t\t *\n\t\t\t * @name Paho.Client#disconnect\n\t\t\t * @function\n\t\t\t * @throws {InvalidState} if the client is already disconnected.\n\t\t\t */\n\t\t\tthis.disconnect = function () {\n\t\t\t\tclient.disconnect();\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Get the contents of the trace log.\n\t\t\t *\n\t\t\t * @name Paho.Client#getTraceLog\n\t\t\t * @function\n\t\t\t * @return {Object[]} tracebuffer containing the time ordered trace records.\n\t\t\t */\n\t\t\tthis.getTraceLog = function () {\n\t\t\t\treturn client.getTraceLog();\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Start tracing.\n\t\t\t *\n\t\t\t * @name Paho.Client#startTrace\n\t\t\t * @function\n\t\t\t */\n\t\t\tthis.startTrace = function () {\n\t\t\t\tclient.startTrace();\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Stop tracing.\n\t\t\t *\n\t\t\t * @name Paho.Client#stopTrace\n\t\t\t * @function\n\t\t\t */\n\t\t\tthis.stopTrace = function () {\n\t\t\t\tclient.stopTrace();\n\t\t\t};\n\n\t\t\tthis.isConnected = function () {\n\t\t\t\treturn client.connected;\n\t\t\t};\n\t\t};\n\n\t\t/**\n\t\t * An application message, sent or received.\n\t\t * <p>\n\t\t * All attributes may be null, which implies the default values.\n\t\t *\n\t\t * @name Paho.Message\n\t\t * @constructor\n\t\t * @param {String|ArrayBuffer} payload The message data to be sent.\n\t\t * <p>\n\t\t * @property {string} payloadString <i>read only</i> The payload as a string if the payload consists of valid UTF-8 characters.\n\t\t * @property {ArrayBuffer} payloadBytes <i>read only</i> The payload as an ArrayBuffer.\n\t\t * <p>\n\t\t * @property {string} destinationName <b>mandatory</b> The name of the destination to which the message is to be sent\n\t\t *                    (for messages about to be sent) or the name of the destination from which the message has been received.\n\t\t *                    (for messages received by the onMessage function).\n\t\t * <p>\n\t\t * @property {number} qos The Quality of Service used to deliver the message.\n\t\t * <dl>\n\t\t *     <dt>0 Best effort (default).\n\t\t *     <dt>1 At least once.\n\t\t *     <dt>2 Exactly once.\n\t\t * </dl>\n\t\t * <p>\n\t\t * @property {Boolean} retained If true, the message is to be retained by the server and delivered\n\t\t *                     to both current and future subscriptions.\n\t\t *                     If false the server only delivers the message to current subscribers, this is the default for new Messages.\n\t\t *                     A received message has the retained boolean set to true if the message was published\n\t\t *                     with the retained boolean set to true\n\t\t *                     and the subscrption was made after the message has been published.\n\t\t * <p>\n\t\t * @property {Boolean} duplicate <i>read only</i> If true, this message might be a duplicate of one which has already been received.\n\t\t *                     This is only set on messages received from the server.\n\t\t *\n\t\t */\n\t\tvar Message = function (newPayload) {\n\t\t\tvar payload;\n\t\t\tif (\n\t\t\t\ttypeof newPayload === 'string' ||\n\t\t\t\tnewPayload instanceof ArrayBuffer ||\n\t\t\t\t(ArrayBuffer.isView(newPayload) && !(newPayload instanceof DataView))\n\t\t\t) {\n\t\t\t\tpayload = newPayload;\n\t\t\t} else {\n\t\t\t\tthrow format(ERROR.INVALID_ARGUMENT, [newPayload, 'newPayload']);\n\t\t\t}\n\n\t\t\tvar destinationName;\n\t\t\tvar qos = 0;\n\t\t\tvar retained = false;\n\t\t\tvar duplicate = false;\n\n\t\t\tObject.defineProperties(this, {\n\t\t\t\tpayloadString: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\tif (typeof payload === 'string') return payload;\n\t\t\t\t\t\telse return parseUTF8(payload, 0, payload.length);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tpayloadBytes: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\tif (typeof payload === 'string') {\n\t\t\t\t\t\t\tvar buffer = new ArrayBuffer(UTF8Length(payload));\n\t\t\t\t\t\t\tvar byteStream = new Uint8Array(buffer);\n\t\t\t\t\t\t\tstringToUTF8(payload, byteStream, 0);\n\n\t\t\t\t\t\t\treturn byteStream;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn payload;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tdestinationName: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn destinationName;\n\t\t\t\t\t},\n\t\t\t\t\tset: function (newDestinationName) {\n\t\t\t\t\t\tif (typeof newDestinationName === 'string')\n\t\t\t\t\t\t\tdestinationName = newDestinationName;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [\n\t\t\t\t\t\t\t\t\tnewDestinationName,\n\t\t\t\t\t\t\t\t\t'newDestinationName',\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tqos: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn qos;\n\t\t\t\t\t},\n\t\t\t\t\tset: function (newQos) {\n\t\t\t\t\t\tif (newQos === 0 || newQos === 1 || newQos === 2) qos = newQos;\n\t\t\t\t\t\telse throw new Error('Invalid argument:' + newQos);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tretained: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn retained;\n\t\t\t\t\t},\n\t\t\t\t\tset: function (newRetained) {\n\t\t\t\t\t\tif (typeof newRetained === 'boolean') retained = newRetained;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\tformat(ERROR.INVALID_ARGUMENT, [newRetained, 'newRetained']),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttopic: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn destinationName;\n\t\t\t\t\t},\n\t\t\t\t\tset: function (newTopic) {\n\t\t\t\t\t\tdestinationName = newTopic;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tduplicate: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tget: function () {\n\t\t\t\t\t\treturn duplicate;\n\t\t\t\t\t},\n\t\t\t\t\tset: function (newDuplicate) {\n\t\t\t\t\t\tduplicate = newDuplicate;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t};\n\n\t\t// Module contents.\n\t\treturn {\n\t\t\tClient: Client,\n\t\t\tMessage: Message,\n\t\t};\n\t\t// eslint-disable-next-line no-nested-ternary\n\t})(\n\t\ttypeof global !== 'undefined'\n\t\t\t? global\n\t\t\t: typeof self !== 'undefined'\n\t\t\t\t? self\n\t\t\t\t: typeof window !== 'undefined'\n\t\t\t\t\t? window\n\t\t\t\t\t: {},\n\t);\n\treturn PahoMQTT;\n});\n","module.exports = __WEBPACK_EXTERNAL_MODULE__556__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","export { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst MAX_DELAY_MS = 5000;\nconst NON_RETRYABLE_CODES = [400, 401, 403];\nconst CONNECTION_STATE_CHANGE = 'ConnectionStateChange';\nvar MESSAGE_TYPES;\n(function (MESSAGE_TYPES) {\n    /**\n     * Client -> Server message.\n     * This message type is the first message after handshake and this will initialize AWS AppSync RealTime communication\n     */\n    MESSAGE_TYPES[\"GQL_CONNECTION_INIT\"] = \"connection_init\";\n    /**\n     * Server -> Client message\n     * This message type is in case there is an issue with AWS AppSync RealTime when establishing connection\n     */\n    MESSAGE_TYPES[\"GQL_CONNECTION_ERROR\"] = \"connection_error\";\n    /**\n     * Server -> Client message.\n     * This message type is for the ack response from AWS AppSync RealTime for GQL_CONNECTION_INIT message\n     */\n    MESSAGE_TYPES[\"GQL_CONNECTION_ACK\"] = \"connection_ack\";\n    /**\n     * Client -> Server message.\n     * This message type is for register subscriptions with AWS AppSync RealTime\n     */\n    MESSAGE_TYPES[\"GQL_START\"] = \"start\";\n    /**\n     * Server -> Client message.\n     * This message type is for the ack response from AWS AppSync RealTime for GQL_START message\n     */\n    MESSAGE_TYPES[\"GQL_START_ACK\"] = \"start_ack\";\n    /**\n     * Server -> Client message.\n     * This message type is for subscription message from AWS AppSync RealTime\n     */\n    MESSAGE_TYPES[\"GQL_DATA\"] = \"data\";\n    /**\n     * Server -> Client message.\n     * This message type helps the client to know is still receiving messages from AWS AppSync RealTime\n     */\n    MESSAGE_TYPES[\"GQL_CONNECTION_KEEP_ALIVE\"] = \"ka\";\n    /**\n     * Client -> Server message.\n     * This message type is for unregister subscriptions with AWS AppSync RealTime\n     */\n    MESSAGE_TYPES[\"GQL_STOP\"] = \"stop\";\n    /**\n     * Server -> Client message.\n     * This message type is for the ack response from AWS AppSync RealTime for GQL_STOP message\n     */\n    MESSAGE_TYPES[\"GQL_COMPLETE\"] = \"complete\";\n    /**\n     * Server -> Client message.\n     * This message type is for sending error messages from AWS AppSync RealTime to the client\n     */\n    MESSAGE_TYPES[\"GQL_ERROR\"] = \"error\";\n})(MESSAGE_TYPES || (MESSAGE_TYPES = {}));\nvar SUBSCRIPTION_STATUS;\n(function (SUBSCRIPTION_STATUS) {\n    SUBSCRIPTION_STATUS[SUBSCRIPTION_STATUS[\"PENDING\"] = 0] = \"PENDING\";\n    SUBSCRIPTION_STATUS[SUBSCRIPTION_STATUS[\"CONNECTED\"] = 1] = \"CONNECTED\";\n    SUBSCRIPTION_STATUS[SUBSCRIPTION_STATUS[\"FAILED\"] = 2] = \"FAILED\";\n})(SUBSCRIPTION_STATUS || (SUBSCRIPTION_STATUS = {}));\nvar SOCKET_STATUS;\n(function (SOCKET_STATUS) {\n    SOCKET_STATUS[SOCKET_STATUS[\"CLOSED\"] = 0] = \"CLOSED\";\n    SOCKET_STATUS[SOCKET_STATUS[\"READY\"] = 1] = \"READY\";\n    SOCKET_STATUS[SOCKET_STATUS[\"CONNECTING\"] = 2] = \"CONNECTING\";\n})(SOCKET_STATUS || (SOCKET_STATUS = {}));\nconst AWS_APPSYNC_REALTIME_HEADERS = {\n    accept: 'application/json, text/javascript',\n    'content-encoding': 'amz-1.0',\n    'content-type': 'application/json; charset=UTF-8',\n};\n/**\n * Time in milleseconds to wait for GQL_CONNECTION_INIT message\n */\nconst CONNECTION_INIT_TIMEOUT = 15000;\n/**\n * Time in milleseconds to wait for GQL_START_ACK message\n */\nconst START_ACK_TIMEOUT = 15000;\n/**\n * Default Time in milleseconds to wait for GQL_CONNECTION_KEEP_ALIVE message\n */\nconst DEFAULT_KEEP_ALIVE_TIMEOUT = 5 * 60 * 1000;\n/**\n * Default Time in milleseconds to alert for missed GQL_CONNECTION_KEEP_ALIVE message\n */\nconst DEFAULT_KEEP_ALIVE_ALERT_TIMEOUT = 65 * 1000;\n/**\n * Default delay time in milleseconds between when reconnect is triggered vs when it is attempted\n */\nconst RECONNECT_DELAY = 5 * 1000;\n/**\n * Default interval time in milleseconds between when reconnect is re-attempted\n */\nconst RECONNECT_INTERVAL = 60 * 1000;\n\nexport { AWS_APPSYNC_REALTIME_HEADERS, CONNECTION_INIT_TIMEOUT, CONNECTION_STATE_CHANGE, DEFAULT_KEEP_ALIVE_ALERT_TIMEOUT, DEFAULT_KEEP_ALIVE_TIMEOUT, MAX_DELAY_MS, MESSAGE_TYPES, NON_RETRYABLE_CODES, RECONNECT_DELAY, RECONNECT_INTERVAL, SOCKET_STATUS, START_ACK_TIMEOUT, SUBSCRIPTION_STATUS };\n//# sourceMappingURL=constants.mjs.map\n","var CONTROL_MSG;\n(function (CONTROL_MSG) {\n    CONTROL_MSG[\"CONNECTION_CLOSED\"] = \"Connection closed\";\n    CONTROL_MSG[\"CONNECTION_FAILED\"] = \"Connection failed\";\n    CONTROL_MSG[\"REALTIME_SUBSCRIPTION_INIT_ERROR\"] = \"AppSync Realtime subscription init error\";\n    CONTROL_MSG[\"SUBSCRIPTION_ACK\"] = \"Subscription ack\";\n    CONTROL_MSG[\"TIMEOUT_DISCONNECT\"] = \"Timeout disconnect\";\n})(CONTROL_MSG || (CONTROL_MSG = {}));\n/** @enum {string} */\nvar ConnectionState;\n(function (ConnectionState) {\n    /*\n     * The connection is alive and healthy\n     */\n    ConnectionState[\"Connected\"] = \"Connected\";\n    /*\n     * The connection is alive, but the connection is offline\n     */\n    ConnectionState[\"ConnectedPendingNetwork\"] = \"ConnectedPendingNetwork\";\n    /*\n     * The connection has been disconnected while in use\n     */\n    ConnectionState[\"ConnectionDisrupted\"] = \"ConnectionDisrupted\";\n    /*\n     * The connection has been disconnected and the network is offline\n     */\n    ConnectionState[\"ConnectionDisruptedPendingNetwork\"] = \"ConnectionDisruptedPendingNetwork\";\n    /*\n     * The connection is in the process of connecting\n     */\n    ConnectionState[\"Connecting\"] = \"Connecting\";\n    /*\n     * The connection is not in use and is being disconnected\n     */\n    ConnectionState[\"ConnectedPendingDisconnect\"] = \"ConnectedPendingDisconnect\";\n    /*\n     * The connection is not in use and has been disconnected\n     */\n    ConnectionState[\"Disconnected\"] = \"Disconnected\";\n    /*\n     * The connection is alive, but a keep alive message has been missed\n     */\n    ConnectionState[\"ConnectedPendingKeepAlive\"] = \"ConnectedPendingKeepAlive\";\n})(ConnectionState || (ConnectionState = {}));\n\nexport { CONTROL_MSG, ConnectionState };\n//# sourceMappingURL=PubSub.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns signed headers.\n *\n * @param headers `headers` from the request.\n * @returns List of headers included in canonical headers, separated by semicolons (;). This indicates which headers\n * are part of the signing process. Header names must use lowercase characters and must appear in alphabetical order.\n *\n * @internal\n */\nconst getSignedHeaders = (headers) => Object.keys(headers)\n    .map(key => key.toLowerCase())\n    .sort()\n    .join(';');\n\nexport { getSignedHeaders };\n//# sourceMappingURL=getSignedHeaders.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// query params\nconst ALGORITHM_QUERY_PARAM = 'X-Amz-Algorithm';\nconst AMZ_DATE_QUERY_PARAM = 'X-Amz-Date';\nconst CREDENTIAL_QUERY_PARAM = 'X-Amz-Credential';\nconst EXPIRES_QUERY_PARAM = 'X-Amz-Expires';\nconst REGION_SET_PARAM = 'X-Amz-Region-Set';\nconst SIGNATURE_QUERY_PARAM = 'X-Amz-Signature';\nconst SIGNED_HEADERS_QUERY_PARAM = 'X-Amz-SignedHeaders';\nconst TOKEN_QUERY_PARAM = 'X-Amz-Security-Token';\n// headers\nconst AUTH_HEADER = 'authorization';\nconst HOST_HEADER = 'host';\nconst AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\nconst TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\n// identifiers\nconst KEY_TYPE_IDENTIFIER = 'aws4_request';\nconst SHA256_ALGORITHM_IDENTIFIER = 'AWS4-HMAC-SHA256';\nconst SIGNATURE_IDENTIFIER = 'AWS4';\n// preset values\nconst EMPTY_HASH = 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855';\nconst UNSIGNED_PAYLOAD = 'UNSIGNED-PAYLOAD';\n\nexport { ALGORITHM_QUERY_PARAM, AMZ_DATE_HEADER, AMZ_DATE_QUERY_PARAM, AUTH_HEADER, CREDENTIAL_QUERY_PARAM, EMPTY_HASH, EXPIRES_QUERY_PARAM, HOST_HEADER, KEY_TYPE_IDENTIFIER, REGION_SET_PARAM, SHA256_ALGORITHM_IDENTIFIER, SIGNATURE_IDENTIFIER, SIGNATURE_QUERY_PARAM, SIGNED_HEADERS_QUERY_PARAM, TOKEN_HEADER, TOKEN_QUERY_PARAM, UNSIGNED_PAYLOAD };\n//# sourceMappingURL=constants.mjs.map\n","import { getCredentialScope } from './getCredentialScope.mjs';\nimport { getFormattedDates } from './getFormattedDates.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Extracts common values used for signing both requests and urls.\n *\n * @param options `SignRequestOptions` object containing values used to construct the signature.\n * @returns Common `SigningValues` used for signing.\n *\n * @internal\n */\nconst getSigningValues = ({ credentials, signingDate = new Date(), signingRegion, signingService, uriEscapePath = true, }) => {\n    // get properties from credentials\n    const { accessKeyId, secretAccessKey, sessionToken } = credentials;\n    // get formatted dates for signing\n    const { longDate, shortDate } = getFormattedDates(signingDate);\n    // copy header and set signing properties\n    const credentialScope = getCredentialScope(shortDate, signingRegion, signingService);\n    return {\n        accessKeyId,\n        credentialScope,\n        longDate,\n        secretAccessKey,\n        sessionToken,\n        shortDate,\n        signingRegion,\n        signingService,\n        uriEscapePath,\n    };\n};\n\nexport { getSigningValues };\n//# sourceMappingURL=getSigningValues.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns expected date strings to be used in signing.\n *\n * @param date JavaScript `Date` object.\n * @returns `FormattedDates` object containing the following:\n * - longDate: A date string in 'YYYYMMDDThhmmssZ' format\n * - shortDate: A date string in 'YYYYMMDD' format\n *\n * @internal\n */\nconst getFormattedDates = (date) => {\n    const longDate = date.toISOString().replace(/[:-]|\\.\\d{3}/g, '');\n    return {\n        longDate,\n        shortDate: longDate.slice(0, 8),\n    };\n};\n\nexport { getFormattedDates };\n//# sourceMappingURL=getFormattedDates.mjs.map\n","import { KEY_TYPE_IDENTIFIER } from '../constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns the credential scope which restricts the resulting signature to the specified region and service.\n *\n * @param date Current date in the format 'YYYYMMDD'.\n * @param region AWS region in which the service resides.\n * @param service Service to which the signed request is being sent.\n *\n * @returns  A string representing the credential scope with format 'YYYYMMDD/region/service/aws4_request'.\n *\n * @internal\n */\nconst getCredentialScope = (date, region, service) => `${date}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;\n\nexport { getCredentialScope };\n//# sourceMappingURL=getCredentialScope.mjs.map\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","/**\n * @internal\n */\nexport var BLOCK_SIZE = 64;\n/**\n * @internal\n */\nexport var DIGEST_LENGTH = 32;\n/**\n * @internal\n */\nexport var KEY = new Uint32Array([\n    0x428a2f98,\n    0x71374491,\n    0xb5c0fbcf,\n    0xe9b5dba5,\n    0x3956c25b,\n    0x59f111f1,\n    0x923f82a4,\n    0xab1c5ed5,\n    0xd807aa98,\n    0x12835b01,\n    0x243185be,\n    0x550c7dc3,\n    0x72be5d74,\n    0x80deb1fe,\n    0x9bdc06a7,\n    0xc19bf174,\n    0xe49b69c1,\n    0xefbe4786,\n    0x0fc19dc6,\n    0x240ca1cc,\n    0x2de92c6f,\n    0x4a7484aa,\n    0x5cb0a9dc,\n    0x76f988da,\n    0x983e5152,\n    0xa831c66d,\n    0xb00327c8,\n    0xbf597fc7,\n    0xc6e00bf3,\n    0xd5a79147,\n    0x06ca6351,\n    0x14292967,\n    0x27b70a85,\n    0x2e1b2138,\n    0x4d2c6dfc,\n    0x53380d13,\n    0x650a7354,\n    0x766a0abb,\n    0x81c2c92e,\n    0x92722c85,\n    0xa2bfe8a1,\n    0xa81a664b,\n    0xc24b8b70,\n    0xc76c51a3,\n    0xd192e819,\n    0xd6990624,\n    0xf40e3585,\n    0x106aa070,\n    0x19a4c116,\n    0x1e376c08,\n    0x2748774c,\n    0x34b0bcb5,\n    0x391c0cb3,\n    0x4ed8aa4a,\n    0x5b9cca4f,\n    0x682e6ff3,\n    0x748f82ee,\n    0x78a5636f,\n    0x84c87814,\n    0x8cc70208,\n    0x90befffa,\n    0xa4506ceb,\n    0xbef9a3f7,\n    0xc67178f2\n]);\n/**\n * @internal\n */\nexport var INIT = [\n    0x6a09e667,\n    0xbb67ae85,\n    0x3c6ef372,\n    0xa54ff53a,\n    0x510e527f,\n    0x9b05688c,\n    0x1f83d9ab,\n    0x5be0cd19\n];\n/**\n * @internal\n */\nexport var MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1;\n//# sourceMappingURL=constants.js.map","import { BLOCK_SIZE, DIGEST_LENGTH, INIT, KEY, MAX_HASHABLE_LENGTH } from \"./constants\";\n/**\n * @internal\n */\nvar RawSha256 = /** @class */ (function () {\n    function RawSha256() {\n        this.state = Int32Array.from(INIT);\n        this.temp = new Int32Array(64);\n        this.buffer = new Uint8Array(64);\n        this.bufferLength = 0;\n        this.bytesHashed = 0;\n        /**\n         * @internal\n         */\n        this.finished = false;\n    }\n    RawSha256.prototype.update = function (data) {\n        if (this.finished) {\n            throw new Error(\"Attempted to update an already finished hash.\");\n        }\n        var position = 0;\n        var byteLength = data.byteLength;\n        this.bytesHashed += byteLength;\n        if (this.bytesHashed * 8 > MAX_HASHABLE_LENGTH) {\n            throw new Error(\"Cannot hash more than 2^53 - 1 bits\");\n        }\n        while (byteLength > 0) {\n            this.buffer[this.bufferLength++] = data[position++];\n            byteLength--;\n            if (this.bufferLength === BLOCK_SIZE) {\n                this.hashBuffer();\n                this.bufferLength = 0;\n            }\n        }\n    };\n    RawSha256.prototype.digest = function () {\n        if (!this.finished) {\n            var bitsHashed = this.bytesHashed * 8;\n            var bufferView = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);\n            var undecoratedLength = this.bufferLength;\n            bufferView.setUint8(this.bufferLength++, 0x80);\n            // Ensure the final block has enough room for the hashed length\n            if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n                for (var i = this.bufferLength; i < BLOCK_SIZE; i++) {\n                    bufferView.setUint8(i, 0);\n                }\n                this.hashBuffer();\n                this.bufferLength = 0;\n            }\n            for (var i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n                bufferView.setUint8(i, 0);\n            }\n            bufferView.setUint32(BLOCK_SIZE - 8, Math.floor(bitsHashed / 0x100000000), true);\n            bufferView.setUint32(BLOCK_SIZE - 4, bitsHashed);\n            this.hashBuffer();\n            this.finished = true;\n        }\n        // The value in state is little-endian rather than big-endian, so flip\n        // each word into a new Uint8Array\n        var out = new Uint8Array(DIGEST_LENGTH);\n        for (var i = 0; i < 8; i++) {\n            out[i * 4] = (this.state[i] >>> 24) & 0xff;\n            out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n            out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n            out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n        }\n        return out;\n    };\n    RawSha256.prototype.hashBuffer = function () {\n        var _a = this, buffer = _a.buffer, state = _a.state;\n        var state0 = state[0], state1 = state[1], state2 = state[2], state3 = state[3], state4 = state[4], state5 = state[5], state6 = state[6], state7 = state[7];\n        for (var i = 0; i < BLOCK_SIZE; i++) {\n            if (i < 16) {\n                this.temp[i] =\n                    ((buffer[i * 4] & 0xff) << 24) |\n                        ((buffer[i * 4 + 1] & 0xff) << 16) |\n                        ((buffer[i * 4 + 2] & 0xff) << 8) |\n                        (buffer[i * 4 + 3] & 0xff);\n            }\n            else {\n                var u = this.temp[i - 2];\n                var t1_1 = ((u >>> 17) | (u << 15)) ^ ((u >>> 19) | (u << 13)) ^ (u >>> 10);\n                u = this.temp[i - 15];\n                var t2_1 = ((u >>> 7) | (u << 25)) ^ ((u >>> 18) | (u << 14)) ^ (u >>> 3);\n                this.temp[i] =\n                    ((t1_1 + this.temp[i - 7]) | 0) + ((t2_1 + this.temp[i - 16]) | 0);\n            }\n            var t1 = ((((((state4 >>> 6) | (state4 << 26)) ^\n                ((state4 >>> 11) | (state4 << 21)) ^\n                ((state4 >>> 25) | (state4 << 7))) +\n                ((state4 & state5) ^ (~state4 & state6))) |\n                0) +\n                ((state7 + ((KEY[i] + this.temp[i]) | 0)) | 0)) |\n                0;\n            var t2 = ((((state0 >>> 2) | (state0 << 30)) ^\n                ((state0 >>> 13) | (state0 << 19)) ^\n                ((state0 >>> 22) | (state0 << 10))) +\n                ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) |\n                0;\n            state7 = state6;\n            state6 = state5;\n            state5 = state4;\n            state4 = (state3 + t1) | 0;\n            state3 = state2;\n            state2 = state1;\n            state1 = state0;\n            state0 = (t1 + t2) | 0;\n        }\n        state[0] += state0;\n        state[1] += state1;\n        state[2] += state2;\n        state[3] += state3;\n        state[4] += state4;\n        state[5] += state5;\n        state[6] += state6;\n        state[7] += state7;\n    };\n    return RawSha256;\n}());\nexport { RawSha256 };\n//# sourceMappingURL=RawSha256.js.map","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { fromUtf8 as fromUtf8Browser } from \"@smithy/util-utf8\";\n// Quick polyfill\nvar fromUtf8 = typeof Buffer !== \"undefined\" && Buffer.from\n    ? function (input) { return Buffer.from(input, \"utf8\"); }\n    : fromUtf8Browser;\nexport function convertToBuffer(data) {\n    // Already a Uint8, do nothing\n    if (data instanceof Uint8Array)\n        return data;\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n}\n//# sourceMappingURL=convertToBuffer.js.map","export const fromUtf8 = (input) => new TextEncoder().encode(input);\n","import { __awaiter, __generator } from \"tslib\";\nimport { BLOCK_SIZE } from \"./constants\";\nimport { RawSha256 } from \"./RawSha256\";\nimport { isEmptyData, convertToBuffer } from \"@aws-crypto/util\";\nvar Sha256 = /** @class */ (function () {\n    function Sha256(secret) {\n        this.secret = secret;\n        this.hash = new RawSha256();\n        this.reset();\n    }\n    Sha256.prototype.update = function (toHash) {\n        if (isEmptyData(toHash) || this.error) {\n            return;\n        }\n        try {\n            this.hash.update(convertToBuffer(toHash));\n        }\n        catch (e) {\n            this.error = e;\n        }\n    };\n    /* This synchronous method keeps compatibility\n     * with the v2 aws-sdk.\n     */\n    Sha256.prototype.digestSync = function () {\n        if (this.error) {\n            throw this.error;\n        }\n        if (this.outer) {\n            if (!this.outer.finished) {\n                this.outer.update(this.hash.digest());\n            }\n            return this.outer.digest();\n        }\n        return this.hash.digest();\n    };\n    /* The underlying digest method here is synchronous.\n     * To keep the same interface with the other hash functions\n     * the default is to expose this as an async method.\n     * However, it can sometimes be useful to have a sync method.\n     */\n    Sha256.prototype.digest = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.digestSync()];\n            });\n        });\n    };\n    Sha256.prototype.reset = function () {\n        this.hash = new RawSha256();\n        if (this.secret) {\n            this.outer = new RawSha256();\n            var inner = bufferFromSecret(this.secret);\n            var outer = new Uint8Array(BLOCK_SIZE);\n            outer.set(inner);\n            for (var i = 0; i < BLOCK_SIZE; i++) {\n                inner[i] ^= 0x36;\n                outer[i] ^= 0x5c;\n            }\n            this.hash.update(inner);\n            this.outer.update(outer);\n            // overwrite the copied key in memory\n            for (var i = 0; i < inner.byteLength; i++) {\n                inner[i] = 0;\n            }\n        }\n    };\n    return Sha256;\n}());\nexport { Sha256 };\nfunction bufferFromSecret(secret) {\n    var input = convertToBuffer(secret);\n    if (input.byteLength > BLOCK_SIZE) {\n        var bufferHash = new RawSha256();\n        bufferHash.update(input);\n        input = bufferHash.digest();\n    }\n    var buffer = new Uint8Array(BLOCK_SIZE);\n    buffer.set(input);\n    return buffer;\n}\n//# sourceMappingURL=jsSha256.js.map","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function isEmptyData(data) {\n    if (typeof data === \"string\") {\n        return data.length === 0;\n    }\n    return data.byteLength === 0;\n}\n//# sourceMappingURL=isEmptyData.js.map","const SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nexport function fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexport function toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\n","import { Sha256 } from '@aws-crypto/sha256-js';\nimport { toHex } from '@smithy/util-hex-encoding';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO: V6 update to different crypto dependency?\n/**\n * Returns the hashed data a `Uint8Array`.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns `Uint8Array` created from the data as input to a hash function.\n */\nconst getHashedData = (key, data) => {\n    const sha256 = new Sha256(key ?? undefined);\n    sha256.update(data);\n    // TODO: V6 flip to async digest\n    const hashedData = sha256.digestSync();\n    return hashedData;\n};\n/**\n * Returns the hashed data as a hex string.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns String using lowercase hexadecimal characters created from the data as input to a hash function.\n *\n * @internal\n */\nconst getHashedDataAsHex = (key, data) => {\n    const hashedData = getHashedData(key, data);\n    return toHex(hashedData);\n};\n\nexport { getHashedData, getHashedDataAsHex };\n//# sourceMappingURL=dataHashHelpers.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns canonical headers.\n *\n * @param headers Headers from the request.\n * @returns Request headers that will be signed, and their values, separated by newline characters. Header names must\n * use lowercase characters, must appear in alphabetical order, and must be followed by a colon (:). For the values,\n * trim any leading or trailing spaces, convert sequential spaces to a single space, and separate the values\n * for a multi-value header using commas.\n *\n * @internal\n */\nconst getCanonicalHeaders = (headers) => Object.entries(headers)\n    .map(([key, value]) => ({\n    key: key.toLowerCase(),\n    value: value?.trim().replace(/\\s+/g, ' ') ?? '',\n}))\n    .sort((a, b) => (a.key < b.key ? -1 : 1))\n    .map(entry => `${entry.key}:${entry.value}\\n`)\n    .join('');\n\nexport { getCanonicalHeaders };\n//# sourceMappingURL=getCanonicalHeaders.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a canonical query string.\n *\n * @param searchParams `searchParams` from the request url.\n * @returns URL-encoded query string parameters, separated by ampersands (&). Percent-encode reserved characters,\n * including the space character. Encode names and values separately. If there are empty parameters, append the equals\n * sign to the parameter name before encoding. After encoding, sort the parameters alphabetically by key name. If there\n * is no query string, use an empty string (\"\").\n *\n * @internal\n */\nconst getCanonicalQueryString = (searchParams) => Array.from(searchParams)\n    .sort(([keyA, valA], [keyB, valB]) => {\n    if (keyA === keyB) {\n        return valA < valB ? -1 : 1;\n    }\n    return keyA < keyB ? -1 : 1;\n})\n    .map(([key, val]) => `${escapeUri(key)}=${escapeUri(val)}`)\n    .join('&');\nconst escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n\nexport { getCanonicalQueryString };\n//# sourceMappingURL=getCanonicalQueryString.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a canonical uri.\n *\n * @param pathname `pathname` from request url.\n * @param uriEscapePath Whether to uri encode the path as part of canonical uri. It's used for S3 only where the\n *   pathname is already uri encoded, and the signing process is not expected to uri encode it again. Defaults to true.\n * @returns URI-encoded version of the absolute path component URL (everything between the host and the question mark\n * character (?) that starts the query string parameters). If the absolute path is empty, a forward slash character (/).\n *\n * @internal\n */\nconst getCanonicalUri = (pathname, uriEscapePath = true) => pathname\n    ? uriEscapePath\n        ? encodeURIComponent(pathname).replace(/%2F/g, '/')\n        : pathname\n    : '/';\n\nexport { getCanonicalUri };\n//# sourceMappingURL=getCanonicalUri.mjs.map\n","import { EMPTY_HASH, UNSIGNED_PAYLOAD } from '../constants.mjs';\nimport { getHashedDataAsHex } from './dataHashHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns the hashed payload.\n *\n * @param body `body` (payload) from the request.\n * @returns String created using the payload in the body of the HTTP request as input to a hash function. This string\n * uses lowercase hexadecimal characters. If the payload is empty, return precalculated result of an empty hash.\n *\n * @internal\n */\nconst getHashedPayload = (body) => {\n    // return precalculated empty hash if body is undefined or null\n    if (body == null) {\n        return EMPTY_HASH;\n    }\n    if (isSourceData(body)) {\n        const hashedData = getHashedDataAsHex(null, body);\n        return hashedData;\n    }\n    // Defined body is not signable. Return unsigned payload which may or may not be accepted by the service.\n    return UNSIGNED_PAYLOAD;\n};\nconst isSourceData = (body) => typeof body === 'string' || ArrayBuffer.isView(body) || isArrayBuffer(body);\nconst isArrayBuffer = (arg) => (typeof ArrayBuffer === 'function' && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === '[object ArrayBuffer]';\n\nexport { getHashedPayload };\n//# sourceMappingURL=getHashedPayload.mjs.map\n","import { getHashedDataAsHex } from './dataHashHelpers.mjs';\nimport { getCanonicalRequest } from './getCanonicalRequest.mjs';\nimport { getSigningKey } from './getSigningKey.mjs';\nimport { getStringToSign } from './getStringToSign.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Calculates and returns an AWS API Signature.\n * https://docs.aws.amazon.com/IAM/latest/UserGuide/create-signed-request.html\n *\n * @param request `HttpRequest` to be signed.\n * @param signRequestOptions `SignRequestOptions` object containing values used to construct the signature.\n * @returns AWS API Signature to sign a request or url with.\n *\n * @internal\n */\nconst getSignature = (request, { credentialScope, longDate, secretAccessKey, shortDate, signingRegion, signingService, uriEscapePath, }) => {\n    // step 1: create a canonical request\n    const canonicalRequest = getCanonicalRequest(request, uriEscapePath);\n    // step 2: create a hash of the canonical request\n    const hashedRequest = getHashedDataAsHex(null, canonicalRequest);\n    // step 3: create a string to sign\n    const stringToSign = getStringToSign(longDate, credentialScope, hashedRequest);\n    // step 4: calculate the signature\n    const signature = getHashedDataAsHex(getSigningKey(secretAccessKey, shortDate, signingRegion, signingService), stringToSign);\n    return signature;\n};\n\nexport { getSignature };\n//# sourceMappingURL=getSignature.mjs.map\n","import { getCanonicalHeaders } from './getCanonicalHeaders.mjs';\nimport { getCanonicalQueryString } from './getCanonicalQueryString.mjs';\nimport { getCanonicalUri } from './getCanonicalUri.mjs';\nimport { getHashedPayload } from './getHashedPayload.mjs';\nimport { getSignedHeaders } from './getSignedHeaders.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a canonical request.\n *\n * @param request `HttpRequest` from which to create the canonical request from.\n * @param uriEscapePath Whether to uri encode the path as part of canonical uri. It's used for S3 only where the\n *   pathname is already uri encoded, and the signing process is not expected to uri encode it again. Defaults to true.\n * @returns String created by by concatenating the following strings, separated by newline characters:\n * - HTTPMethod\n * - CanonicalUri\n * - CanonicalQueryString\n * - CanonicalHeaders\n * - SignedHeaders\n * - HashedPayload\n *\n * @internal\n */\nconst getCanonicalRequest = ({ body, headers, method, url }, uriEscapePath = true) => [\n    method,\n    getCanonicalUri(url.pathname, uriEscapePath),\n    getCanonicalQueryString(url.searchParams),\n    getCanonicalHeaders(headers),\n    getSignedHeaders(headers),\n    getHashedPayload(body),\n].join('\\n');\n\nexport { getCanonicalRequest };\n//# sourceMappingURL=getCanonicalRequest.mjs.map\n","import { SHA256_ALGORITHM_IDENTIFIER } from '../constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a string to be signed.\n *\n * @param date Current date in the format 'YYYYMMDDThhmmssZ'.\n * @param credentialScope String representing the credential scope with format 'YYYYMMDD/region/service/aws4_request'.\n * @param hashedRequest Hashed canonical request.\n *\n * @returns A string created by by concatenating the following strings, separated by newline characters:\n * - Algorithm\n * - RequestDateTime\n * - CredentialScope\n * - HashedCanonicalRequest\n *\n * @internal\n */\nconst getStringToSign = (date, credentialScope, hashedRequest) => [SHA256_ALGORITHM_IDENTIFIER, date, credentialScope, hashedRequest].join('\\n');\n\nexport { getStringToSign };\n//# sourceMappingURL=getStringToSign.mjs.map\n","import { KEY_TYPE_IDENTIFIER, SIGNATURE_IDENTIFIER } from '../constants.mjs';\nimport { getHashedData } from './dataHashHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a signing key to be used for signing requests.\n *\n * @param secretAccessKey AWS secret access key from credentials.\n * @param date Current date in the format 'YYYYMMDD'.\n * @param region AWS region in which the service resides.\n * @param service Service to which the signed request is being sent.\n *\n * @returns `Uint8Array` calculated from its composite parts.\n *\n * @internal\n */\nconst getSigningKey = (secretAccessKey, date, region, service) => {\n    const key = `${SIGNATURE_IDENTIFIER}${secretAccessKey}`;\n    const dateKey = getHashedData(key, date);\n    const regionKey = getHashedData(dateKey, region);\n    const serviceKey = getHashedData(regionKey, service);\n    const signingKey = getHashedData(serviceKey, KEY_TYPE_IDENTIFIER);\n    return signingKey;\n};\n\nexport { getSigningKey };\n//# sourceMappingURL=getSigningKey.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst AmplifyUrl = URL;\nconst AmplifyUrlSearchParams = URLSearchParams;\n\nexport { AmplifyUrl, AmplifyUrlSearchParams };\n//# sourceMappingURL=index.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Date & time utility functions to abstract the `aws-sdk` away from users.\n * (v2 => v3 modularization is a breaking change)\n *\n * @see https://github.com/aws/aws-sdk-js/blob/6edf586dcc1de7fe8fbfbbd9a0d2b1847921e6e1/lib/util.js#L262\n */\nconst FIVE_MINUTES_IN_MS = 1000 * 60 * 5;\n/**\n * This utility is intended to be deprecated and replaced by `signRequest` and `presignUrl` functions from\n * `clients/middleware/signing/signer/signatureV4`.\n *\n * TODO: refactor the logics here into `signRequest` and `presignUrl` functions and remove this class.\n *\n * @internal\n * @deprecated\n */\nconst DateUtils = {\n    /**\n     * Milliseconds to offset the date to compensate for clock skew between device & services\n     */\n    clockOffset: 0,\n    getDateWithClockOffset() {\n        if (DateUtils.clockOffset) {\n            return new Date(new Date().getTime() + DateUtils.clockOffset);\n        }\n        else {\n            return new Date();\n        }\n    },\n    /**\n     * @returns {number} Clock offset in milliseconds\n     */\n    getClockOffset() {\n        return DateUtils.clockOffset;\n    },\n    getHeaderStringFromDate(date = DateUtils.getDateWithClockOffset()) {\n        return date.toISOString().replace(/[:-]|\\.\\d{3}/g, '');\n    },\n    getDateFromHeaderString(header) {\n        const [, year, month, day, hour, minute, second] = header.match(/^(\\d{4})(\\d{2})(\\d{2})T(\\d{2})(\\d{2})(\\d{2}).+/);\n        return new Date(Date.UTC(Number(year), Number(month) - 1, Number(day), Number(hour), Number(minute), Number(second)));\n    },\n    isClockSkewed(serverDate) {\n        // API gateway permits client calls that are off by no more than ±5 minutes\n        return (Math.abs(serverDate.getTime() - DateUtils.getDateWithClockOffset().getTime()) >= FIVE_MINUTES_IN_MS);\n    },\n    isClockSkewError(error) {\n        if (!error.response || !error.response.headers) {\n            return false;\n        }\n        const { headers } = error.response;\n        return Boolean(['BadRequestException', 'InvalidSignatureException'].includes(headers['x-amzn-errortype']) &&\n            (headers.date || headers.Date));\n    },\n    /**\n     * @param {number} offset Clock offset in milliseconds\n     */\n    setClockOffset(offset) {\n        DateUtils.clockOffset = offset;\n    },\n};\n\nexport { DateUtils };\n//# sourceMappingURL=DateUtils.mjs.map\n","import { signRequest } from '../clients/middleware/signing/signer/signatureV4/signRequest.mjs';\nimport { presignUrl } from '../clients/middleware/signing/signer/signatureV4/presignUrl.mjs';\nimport { TOKEN_QUERY_PARAM } from '../clients/middleware/signing/signer/signatureV4/constants.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport { AmplifyUrl } from '../utils/amplifyUrl/index.mjs';\nimport { DateUtils } from './DateUtils.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst IOT_SERVICE_NAME = 'iotdevicegateway';\n// Best practice regex to parse the service and region from an AWS endpoint\nconst AWS_ENDPOINT_REGEX = /([^.]+)\\.(?:([^.]*)\\.)?amazonaws\\.com(.cn)?$/;\n/**\n * This class is intended to be deprecated and replaced by `signRequest` and `presignUrl` functions from\n * `clients/middleware/signing/signer/signatureV4`.\n *\n * TODO: refactor the logics here into `signRequest` and `presignUrl` functions and remove this class.\n *\n * @internal\n * @deprecated\n */\nclass Signer {\n    /**\n    * Sign a HTTP request, add 'Authorization' header to request param\n    * @method sign\n    * @memberof Signer\n    * @static\n    *\n    * @param {object} request - HTTP request object\n    <pre>\n    request: {\n        method: GET | POST | PUT ...\n        url: ...,\n        headers: {\n            header1: ...\n        },\n        data: data\n    }\n    </pre>\n    * @param {object} access_info - AWS access credential info\n    <pre>\n    access_info: {\n        access_key: ...,\n        secret_key: ...,\n        session_token: ...\n    }\n    </pre>\n    * @param {object} [service_info] - AWS service type and region, optional,\n    *                                  if not provided then parse out from url\n    <pre>\n    service_info: {\n        service: ...,\n        region: ...\n    }\n    </pre>\n    *\n    * @returns {object} Signed HTTP request\n    */\n    static sign(request, accessInfo, serviceInfo) {\n        request.headers = request.headers || {};\n        if (request.body && !request.data) {\n            throw new Error('The attribute \"body\" was found on the request object. Please use the attribute \"data\" instead.');\n        }\n        const requestToSign = {\n            ...request,\n            body: request.data,\n            url: new AmplifyUrl(request.url),\n        };\n        const options = getOptions(requestToSign, accessInfo, serviceInfo);\n        const signedRequest = signRequest(requestToSign, options);\n        // Prior to using `signRequest`, Signer accepted urls as strings and outputted urls as string. Coerce the property\n        // back to a string so as not to disrupt consumers of Signer.\n        signedRequest.url = signedRequest.url.toString();\n        // HTTP headers should be case insensitive but, to maintain parity with the previous Signer implementation and\n        // limit the impact of this implementation swap, replace lowercased headers with title cased ones.\n        signedRequest.headers.Authorization = signedRequest.headers.authorization;\n        signedRequest.headers['X-Amz-Security-Token'] =\n            signedRequest.headers['x-amz-security-token'];\n        delete signedRequest.headers.authorization;\n        delete signedRequest.headers['x-amz-security-token'];\n        return signedRequest;\n    }\n    static signUrl(urlOrRequest, accessInfo, serviceInfo, expiration) {\n        const urlToSign = typeof urlOrRequest === 'object' ? urlOrRequest.url : urlOrRequest;\n        const method = typeof urlOrRequest === 'object' ? urlOrRequest.method : 'GET';\n        const body = typeof urlOrRequest === 'object' ? urlOrRequest.body : undefined;\n        const presignable = {\n            body,\n            method,\n            url: new AmplifyUrl(urlToSign),\n        };\n        const options = getOptions(presignable, accessInfo, serviceInfo, expiration);\n        const signedUrl = presignUrl(presignable, options);\n        if (accessInfo.session_token &&\n            !sessionTokenRequiredInSigning(options.signingService)) {\n            signedUrl.searchParams.append(TOKEN_QUERY_PARAM, accessInfo.session_token);\n        }\n        return signedUrl.toString();\n    }\n}\nconst getOptions = (request, accessInfo, serviceInfo, expiration) => {\n    const { access_key, secret_key, session_token } = accessInfo ?? {};\n    const { region: urlRegion, service: urlService } = parseServiceInfo(request.url);\n    const { region = urlRegion, service = urlService } = serviceInfo ?? {};\n    const credentials = {\n        accessKeyId: access_key,\n        secretAccessKey: secret_key,\n        ...(sessionTokenRequiredInSigning(service)\n            ? { sessionToken: session_token }\n            : {}),\n    };\n    return {\n        credentials,\n        signingDate: DateUtils.getDateWithClockOffset(),\n        signingRegion: region,\n        signingService: service,\n        ...(expiration && { expiration }),\n    };\n};\nconst parseServiceInfo = (url) => {\n    const { host } = url;\n    const matched = host.match(AWS_ENDPOINT_REGEX) ?? [];\n    let parsed = matched.slice(1, 3);\n    if (parsed[1] === 'es') {\n        // Elastic Search\n        parsed = parsed.reverse();\n    }\n    return {\n        service: parsed[0],\n        region: parsed[1],\n    };\n};\n// IoT service does not allow the session token in the canonical request\n// https://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html\nconst sessionTokenRequiredInSigning = (service) => service !== IOT_SERVICE_NAME;\n\nexport { Signer };\n//# sourceMappingURL=Signer.mjs.map\n","import { getSignedHeaders } from './utils/getSignedHeaders.mjs';\nimport { getSigningValues } from './utils/getSigningValues.mjs';\nimport { HOST_HEADER, AMZ_DATE_HEADER, TOKEN_HEADER, AUTH_HEADER, SHA256_ALGORITHM_IDENTIFIER } from './constants.mjs';\nimport { getSignature } from './utils/getSignature.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Given a `HttpRequest`, returns a Signature Version 4 signed `HttpRequest`.\n *\n * @param request `HttpRequest` to be signed.\n * @param signRequestOptions `SignRequestOptions` object containing values used to construct the signature.\n * @returns A `HttpRequest` with authentication headers which can grant temporary access to AWS resources.\n */\nconst signRequest = (request, options) => {\n    const signingValues = getSigningValues(options);\n    const { accessKeyId, credentialScope, longDate, sessionToken } = signingValues;\n    // create the request to sign\n    const headers = { ...request.headers };\n    headers[HOST_HEADER] = request.url.host;\n    headers[AMZ_DATE_HEADER] = longDate;\n    if (sessionToken) {\n        headers[TOKEN_HEADER] = sessionToken;\n    }\n    const requestToSign = { ...request, headers };\n    // calculate and add the signature to the request\n    const signature = getSignature(requestToSign, signingValues);\n    const credentialEntry = `Credential=${accessKeyId}/${credentialScope}`;\n    const signedHeadersEntry = `SignedHeaders=${getSignedHeaders(headers)}`;\n    const signatureEntry = `Signature=${signature}`;\n    headers[AUTH_HEADER] =\n        `${SHA256_ALGORITHM_IDENTIFIER} ${credentialEntry}, ${signedHeadersEntry}, ${signatureEntry}`;\n    return requestToSign;\n};\n\nexport { signRequest };\n//# sourceMappingURL=signRequest.mjs.map\n","import { AmplifyUrl } from '../../../../../utils/amplifyUrl/index.mjs';\nimport { ALGORITHM_QUERY_PARAM, SHA256_ALGORITHM_IDENTIFIER, CREDENTIAL_QUERY_PARAM, AMZ_DATE_QUERY_PARAM, SIGNED_HEADERS_QUERY_PARAM, HOST_HEADER, EXPIRES_QUERY_PARAM, TOKEN_QUERY_PARAM, SIGNATURE_QUERY_PARAM } from './constants.mjs';\nimport { getSigningValues } from './utils/getSigningValues.mjs';\nimport { getSignature } from './utils/getSignature.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Given a `Presignable` object, returns a Signature Version 4 presigned `URL` object.\n *\n * @param presignable `Presignable` object containing at least a url to be presigned with authentication query params.\n * @param presignUrlOptions `PresignUrlOptions` object containing values used to construct the signature.\n * @returns A `URL` with authentication query params which can grant temporary access to AWS resources.\n */\nconst presignUrl = ({ body, method = 'GET', url }, { expiration, ...options }) => {\n    const signingValues = getSigningValues(options);\n    const { accessKeyId, credentialScope, longDate, sessionToken } = signingValues;\n    // create the request to sign\n    const presignedUrl = new AmplifyUrl(url);\n    Object.entries({\n        [ALGORITHM_QUERY_PARAM]: SHA256_ALGORITHM_IDENTIFIER,\n        [CREDENTIAL_QUERY_PARAM]: `${accessKeyId}/${credentialScope}`,\n        [AMZ_DATE_QUERY_PARAM]: longDate,\n        [SIGNED_HEADERS_QUERY_PARAM]: HOST_HEADER,\n        ...(expiration && { [EXPIRES_QUERY_PARAM]: expiration.toString() }),\n        ...(sessionToken && { [TOKEN_QUERY_PARAM]: sessionToken }),\n    }).forEach(([key, value]) => {\n        presignedUrl.searchParams.append(key, value);\n    });\n    const requestToSign = {\n        body,\n        headers: { [HOST_HEADER]: url.host },\n        method,\n        url: presignedUrl,\n    };\n    // calculate and add the signature to the url\n    const signature = getSignature(requestToSign, signingValues);\n    presignedUrl.searchParams.append(SIGNATURE_QUERY_PARAM, signature);\n    return presignedUrl;\n};\n\nexport { presignUrl };\n//# sourceMappingURL=presignUrl.mjs.map\n","export function isFunction(value) {\n    return typeof value === 'function';\n}\n//# sourceMappingURL=isFunction.js.map","import { createErrorClass } from './createErrorClass';\nexport var UnsubscriptionError = createErrorClass(function (_super) {\n    return function UnsubscriptionErrorImpl(errors) {\n        _super(this);\n        this.message = errors\n            ? errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ')\n            : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n    };\n});\n//# sourceMappingURL=UnsubscriptionError.js.map","export function createErrorClass(createImpl) {\n    var _super = function (instance) {\n        Error.call(instance);\n        instance.stack = new Error().stack;\n    };\n    var ctorFunc = createImpl(_super);\n    ctorFunc.prototype = Object.create(Error.prototype);\n    ctorFunc.prototype.constructor = ctorFunc;\n    return ctorFunc;\n}\n//# sourceMappingURL=createErrorClass.js.map","export function arrRemove(arr, item) {\n    if (arr) {\n        var index = arr.indexOf(item);\n        0 <= index && arr.splice(index, 1);\n    }\n}\n//# sourceMappingURL=arrRemove.js.map","import { __read, __spreadArray, __values } from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nvar Subscription = (function () {\n    function Subscription(initialTeardown) {\n        this.initialTeardown = initialTeardown;\n        this.closed = false;\n        this._parentage = null;\n        this._finalizers = null;\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var e_1, _a, e_2, _b;\n        var errors;\n        if (!this.closed) {\n            this.closed = true;\n            var _parentage = this._parentage;\n            if (_parentage) {\n                this._parentage = null;\n                if (Array.isArray(_parentage)) {\n                    try {\n                        for (var _parentage_1 = __values(_parentage), _parentage_1_1 = _parentage_1.next(); !_parentage_1_1.done; _parentage_1_1 = _parentage_1.next()) {\n                            var parent_1 = _parentage_1_1.value;\n                            parent_1.remove(this);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (_parentage_1_1 && !_parentage_1_1.done && (_a = _parentage_1.return)) _a.call(_parentage_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    _parentage.remove(this);\n                }\n            }\n            var initialFinalizer = this.initialTeardown;\n            if (isFunction(initialFinalizer)) {\n                try {\n                    initialFinalizer();\n                }\n                catch (e) {\n                    errors = e instanceof UnsubscriptionError ? e.errors : [e];\n                }\n            }\n            var _finalizers = this._finalizers;\n            if (_finalizers) {\n                this._finalizers = null;\n                try {\n                    for (var _finalizers_1 = __values(_finalizers), _finalizers_1_1 = _finalizers_1.next(); !_finalizers_1_1.done; _finalizers_1_1 = _finalizers_1.next()) {\n                        var finalizer = _finalizers_1_1.value;\n                        try {\n                            execFinalizer(finalizer);\n                        }\n                        catch (err) {\n                            errors = errors !== null && errors !== void 0 ? errors : [];\n                            if (err instanceof UnsubscriptionError) {\n                                errors = __spreadArray(__spreadArray([], __read(errors)), __read(err.errors));\n                            }\n                            else {\n                                errors.push(err);\n                            }\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_finalizers_1_1 && !_finalizers_1_1.done && (_b = _finalizers_1.return)) _b.call(_finalizers_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            if (errors) {\n                throw new UnsubscriptionError(errors);\n            }\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var _a;\n        if (teardown && teardown !== this) {\n            if (this.closed) {\n                execFinalizer(teardown);\n            }\n            else {\n                if (teardown instanceof Subscription) {\n                    if (teardown.closed || teardown._hasParent(this)) {\n                        return;\n                    }\n                    teardown._addParent(this);\n                }\n                (this._finalizers = (_a = this._finalizers) !== null && _a !== void 0 ? _a : []).push(teardown);\n            }\n        }\n    };\n    Subscription.prototype._hasParent = function (parent) {\n        var _parentage = this._parentage;\n        return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _parentage = this._parentage;\n        this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n    };\n    Subscription.prototype._removeParent = function (parent) {\n        var _parentage = this._parentage;\n        if (_parentage === parent) {\n            this._parentage = null;\n        }\n        else if (Array.isArray(_parentage)) {\n            arrRemove(_parentage, parent);\n        }\n    };\n    Subscription.prototype.remove = function (teardown) {\n        var _finalizers = this._finalizers;\n        _finalizers && arrRemove(_finalizers, teardown);\n        if (teardown instanceof Subscription) {\n            teardown._removeParent(this);\n        }\n    };\n    Subscription.EMPTY = (function () {\n        var empty = new Subscription();\n        empty.closed = true;\n        return empty;\n    })();\n    return Subscription;\n}());\nexport { Subscription };\nexport var EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n    return (value instanceof Subscription ||\n        (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe)));\n}\nfunction execFinalizer(finalizer) {\n    if (isFunction(finalizer)) {\n        finalizer();\n    }\n    else {\n        finalizer.unsubscribe();\n    }\n}\n//# sourceMappingURL=Subscription.js.map","export var config = {\n    onUnhandledError: null,\n    onStoppedNotification: null,\n    Promise: undefined,\n    useDeprecatedSynchronousErrorHandling: false,\n    useDeprecatedNextContext: false,\n};\n//# sourceMappingURL=config.js.map","import { __read, __spreadArray } from \"tslib\";\nexport var timeoutProvider = {\n    setTimeout: function (handler, timeout) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var delegate = timeoutProvider.delegate;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setTimeout) {\n            return delegate.setTimeout.apply(delegate, __spreadArray([handler, timeout], __read(args)));\n        }\n        return setTimeout.apply(void 0, __spreadArray([handler, timeout], __read(args)));\n    },\n    clearTimeout: function (handle) {\n        var delegate = timeoutProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearTimeout) || clearTimeout)(handle);\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=timeoutProvider.js.map","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\nexport function reportUnhandledError(err) {\n    timeoutProvider.setTimeout(function () {\n        var onUnhandledError = config.onUnhandledError;\n        if (onUnhandledError) {\n            onUnhandledError(err);\n        }\n        else {\n            throw err;\n        }\n    });\n}\n//# sourceMappingURL=reportUnhandledError.js.map","export function noop() { }\n//# sourceMappingURL=noop.js.map","export var COMPLETE_NOTIFICATION = (function () { return createNotification('C', undefined, undefined); })();\nexport function errorNotification(error) {\n    return createNotification('E', undefined, error);\n}\nexport function nextNotification(value) {\n    return createNotification('N', value, undefined);\n}\nexport function createNotification(kind, value, error) {\n    return {\n        kind: kind,\n        value: value,\n        error: error,\n    };\n}\n//# sourceMappingURL=NotificationFactories.js.map","import { config } from '../config';\nvar context = null;\nexport function errorContext(cb) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n        var isRoot = !context;\n        if (isRoot) {\n            context = { errorThrown: false, error: null };\n        }\n        cb();\n        if (isRoot) {\n            var _a = context, errorThrown = _a.errorThrown, error = _a.error;\n            context = null;\n            if (errorThrown) {\n                throw error;\n            }\n        }\n    }\n    else {\n        cb();\n    }\n}\nexport function captureError(err) {\n    if (config.useDeprecatedSynchronousErrorHandling && context) {\n        context.errorThrown = true;\n        context.error = err;\n    }\n}\n//# sourceMappingURL=errorContext.js.map","import { __extends } from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    function Subscriber(destination) {\n        var _this = _super.call(this) || this;\n        _this.isStopped = false;\n        if (destination) {\n            _this.destination = destination;\n            if (isSubscription(destination)) {\n                destination.add(_this);\n            }\n        }\n        else {\n            _this.destination = EMPTY_OBSERVER;\n        }\n        return _this;\n    }\n    Subscriber.create = function (next, error, complete) {\n        return new SafeSubscriber(next, error, complete);\n    };\n    Subscriber.prototype.next = function (value) {\n        if (this.isStopped) {\n            handleStoppedNotification(nextNotification(value), this);\n        }\n        else {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (this.isStopped) {\n            handleStoppedNotification(errorNotification(err), this);\n        }\n        else {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (this.isStopped) {\n            handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n        }\n        else {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.isStopped = true;\n            _super.prototype.unsubscribe.call(this);\n            this.destination = null;\n        }\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        try {\n            this.destination.error(err);\n        }\n        finally {\n            this.unsubscribe();\n        }\n    };\n    Subscriber.prototype._complete = function () {\n        try {\n            this.destination.complete();\n        }\n        finally {\n            this.unsubscribe();\n        }\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\nvar _bind = Function.prototype.bind;\nfunction bind(fn, thisArg) {\n    return _bind.call(fn, thisArg);\n}\nvar ConsumerObserver = (function () {\n    function ConsumerObserver(partialObserver) {\n        this.partialObserver = partialObserver;\n    }\n    ConsumerObserver.prototype.next = function (value) {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.next) {\n            try {\n                partialObserver.next(value);\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n    };\n    ConsumerObserver.prototype.error = function (err) {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.error) {\n            try {\n                partialObserver.error(err);\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n        else {\n            handleUnhandledError(err);\n        }\n    };\n    ConsumerObserver.prototype.complete = function () {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.complete) {\n            try {\n                partialObserver.complete();\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n    };\n    return ConsumerObserver;\n}());\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        var partialObserver;\n        if (isFunction(observerOrNext) || !observerOrNext) {\n            partialObserver = {\n                next: (observerOrNext !== null && observerOrNext !== void 0 ? observerOrNext : undefined),\n                error: error !== null && error !== void 0 ? error : undefined,\n                complete: complete !== null && complete !== void 0 ? complete : undefined,\n            };\n        }\n        else {\n            var context_1;\n            if (_this && config.useDeprecatedNextContext) {\n                context_1 = Object.create(observerOrNext);\n                context_1.unsubscribe = function () { return _this.unsubscribe(); };\n                partialObserver = {\n                    next: observerOrNext.next && bind(observerOrNext.next, context_1),\n                    error: observerOrNext.error && bind(observerOrNext.error, context_1),\n                    complete: observerOrNext.complete && bind(observerOrNext.complete, context_1),\n                };\n            }\n            else {\n                partialObserver = observerOrNext;\n            }\n        }\n        _this.destination = new ConsumerObserver(partialObserver);\n        return _this;\n    }\n    return SafeSubscriber;\n}(Subscriber));\nexport { SafeSubscriber };\nfunction handleUnhandledError(error) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n        captureError(error);\n    }\n    else {\n        reportUnhandledError(error);\n    }\n}\nfunction defaultErrorHandler(err) {\n    throw err;\n}\nfunction handleStoppedNotification(notification, subscriber) {\n    var onStoppedNotification = config.onStoppedNotification;\n    onStoppedNotification && timeoutProvider.setTimeout(function () { return onStoppedNotification(notification, subscriber); });\n}\nexport var EMPTY_OBSERVER = {\n    closed: true,\n    next: noop,\n    error: defaultErrorHandler,\n    complete: noop,\n};\n//# sourceMappingURL=Subscriber.js.map","export var observable = (function () { return (typeof Symbol === 'function' && Symbol.observable) || '@@observable'; })();\n//# sourceMappingURL=observable.js.map","export function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map","import { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription } from './Subscription';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\nvar Observable = (function () {\n    function Observable(subscribe) {\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var _this = this;\n        var subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n        errorContext(function () {\n            var _a = _this, operator = _a.operator, source = _a.source;\n            subscriber.add(operator\n                ?\n                    operator.call(subscriber, source)\n                : source\n                    ?\n                        _this._subscribe(subscriber)\n                    :\n                        _this._trySubscribe(subscriber));\n        });\n        return subscriber;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.error(err);\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscriber = new SafeSubscriber({\n                next: function (value) {\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscriber.unsubscribe();\n                    }\n                },\n                error: reject,\n                complete: resolve,\n            });\n            _this.subscribe(subscriber);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var _a;\n        return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n    };\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        return pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return (value = x); }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\nfunction getPromiseCtor(promiseCtor) {\n    var _a;\n    return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\n}\nfunction isObserver(value) {\n    return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\nfunction isSubscriber(value) {\n    return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n//# sourceMappingURL=Observable.js.map","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar LogType;\n(function (LogType) {\n    LogType[\"DEBUG\"] = \"DEBUG\";\n    LogType[\"ERROR\"] = \"ERROR\";\n    LogType[\"INFO\"] = \"INFO\";\n    LogType[\"WARN\"] = \"WARN\";\n    LogType[\"VERBOSE\"] = \"VERBOSE\";\n    LogType[\"NONE\"] = \"NONE\";\n})(LogType || (LogType = {}));\n\nexport { LogType };\n//# sourceMappingURL=types.mjs.map\n","import { identity } from './identity';\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (fns.length === 0) {\n        return identity;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map","import { AWS_CLOUDWATCH_CATEGORY } from '../constants.mjs';\nimport { LogType } from './types.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst LOG_LEVELS = {\n    VERBOSE: 1,\n    DEBUG: 2,\n    INFO: 3,\n    WARN: 4,\n    ERROR: 5,\n    NONE: 6,\n};\n/**\n * Write logs\n * @class Logger\n */\nclass ConsoleLogger {\n    /**\n     * @constructor\n     * @param {string} name - Name of the logger\n     */\n    constructor(name, level = LogType.WARN) {\n        this.name = name;\n        this.level = level;\n        this._pluggables = [];\n    }\n    _padding(n) {\n        return n < 10 ? '0' + n : '' + n;\n    }\n    _ts() {\n        const dt = new Date();\n        return ([this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(':') +\n            '.' +\n            dt.getMilliseconds());\n    }\n    configure(config) {\n        if (!config)\n            return this._config;\n        this._config = config;\n        return this._config;\n    }\n    /**\n     * Write log\n     * @method\n     * @memeberof Logger\n     * @param {LogType|string} type - log type, default INFO\n     * @param {string|object} msg - Logging message or object\n     */\n    _log(type, ...msg) {\n        let loggerLevelName = this.level;\n        if (ConsoleLogger.LOG_LEVEL) {\n            loggerLevelName = ConsoleLogger.LOG_LEVEL;\n        }\n        if (typeof window !== 'undefined' && window.LOG_LEVEL) {\n            loggerLevelName = window.LOG_LEVEL;\n        }\n        const loggerLevel = LOG_LEVELS[loggerLevelName];\n        const typeLevel = LOG_LEVELS[type];\n        if (!(typeLevel >= loggerLevel)) {\n            // Do nothing if type is not greater than or equal to logger level (handle undefined)\n            return;\n        }\n        let log = console.log.bind(console);\n        if (type === LogType.ERROR && console.error) {\n            log = console.error.bind(console);\n        }\n        if (type === LogType.WARN && console.warn) {\n            log = console.warn.bind(console);\n        }\n        if (ConsoleLogger.BIND_ALL_LOG_LEVELS) {\n            if (type === LogType.INFO && console.info) {\n                log = console.info.bind(console);\n            }\n            if (type === LogType.DEBUG && console.debug) {\n                log = console.debug.bind(console);\n            }\n        }\n        const prefix = `[${type}] ${this._ts()} ${this.name}`;\n        let message = '';\n        if (msg.length === 1 && typeof msg[0] === 'string') {\n            message = `${prefix} - ${msg[0]}`;\n            log(message);\n        }\n        else if (msg.length === 1) {\n            message = `${prefix} ${msg[0]}`;\n            log(prefix, msg[0]);\n        }\n        else if (typeof msg[0] === 'string') {\n            let obj = msg.slice(1);\n            if (obj.length === 1) {\n                obj = obj[0];\n            }\n            message = `${prefix} - ${msg[0]} ${obj}`;\n            log(`${prefix} - ${msg[0]}`, obj);\n        }\n        else {\n            message = `${prefix} ${msg}`;\n            log(prefix, msg);\n        }\n        for (const plugin of this._pluggables) {\n            const logEvent = { message, timestamp: Date.now() };\n            plugin.pushLogs([logEvent]);\n        }\n    }\n    /**\n     * Write General log. Default to INFO\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    log(...msg) {\n        this._log(LogType.INFO, ...msg);\n    }\n    /**\n     * Write INFO log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    info(...msg) {\n        this._log(LogType.INFO, ...msg);\n    }\n    /**\n     * Write WARN log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    warn(...msg) {\n        this._log(LogType.WARN, ...msg);\n    }\n    /**\n     * Write ERROR log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    error(...msg) {\n        this._log(LogType.ERROR, ...msg);\n    }\n    /**\n     * Write DEBUG log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    debug(...msg) {\n        this._log(LogType.DEBUG, ...msg);\n    }\n    /**\n     * Write VERBOSE log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    verbose(...msg) {\n        this._log(LogType.VERBOSE, ...msg);\n    }\n    addPluggable(pluggable) {\n        if (pluggable && pluggable.getCategoryName() === AWS_CLOUDWATCH_CATEGORY) {\n            this._pluggables.push(pluggable);\n            pluggable.configure(this._config);\n        }\n    }\n    listPluggables() {\n        return this._pluggables;\n    }\n}\nConsoleLogger.LOG_LEVEL = null;\nConsoleLogger.BIND_ALL_LOG_LEVELS = false;\n\nexport { ConsoleLogger };\n//# sourceMappingURL=ConsoleLogger.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Logging constants\nconst AWS_CLOUDWATCH_CATEGORY = 'Logging';\nconst USER_AGENT_HEADER = 'x-amz-user-agent';\n// Error exception code constants\nconst NO_HUBCALLBACK_PROVIDED_EXCEPTION = 'NoHubcallbackProvidedException';\n\nexport { AWS_CLOUDWATCH_CATEGORY, NO_HUBCALLBACK_PROVIDED_EXCEPTION, USER_AGENT_HEADER };\n//# sourceMappingURL=constants.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass AmplifyError extends Error {\n    /**\n     *  Constructs an AmplifyError.\n     *\n     * @param message text that describes the main problem.\n     * @param underlyingError the underlying cause of the error.\n     * @param recoverySuggestion suggestion to recover from the error.\n     *\n     */\n    constructor({ message, name, recoverySuggestion, underlyingError, }) {\n        super(message);\n        this.name = name;\n        this.underlyingError = underlyingError;\n        this.recoverySuggestion = recoverySuggestion;\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AmplifyError;\n        Object.setPrototypeOf(this, AmplifyError.prototype);\n    }\n}\n\nexport { AmplifyError };\n//# sourceMappingURL=AmplifyError.mjs.map\n","import { ConsoleLogger } from '../Logger/ConsoleLogger.mjs';\nimport { NO_HUBCALLBACK_PROVIDED_EXCEPTION } from '../constants.mjs';\nimport { AmplifyError } from '../errors/AmplifyError.mjs';\nimport '../types/errors.mjs';\nimport '../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined'\n    ? Symbol('amplify_default')\n    : '@@amplify_default');\nconst logger = new ConsoleLogger('Hub');\nclass HubClass {\n    constructor(name) {\n        this.listeners = new Map();\n        this.protectedChannels = [\n            'core',\n            'auth',\n            'api',\n            'analytics',\n            'interactions',\n            'pubsub',\n            'storage',\n            'ui',\n            'xr',\n        ];\n        this.name = name;\n    }\n    /**\n     * Used internally to remove a Hub listener.\n     *\n     * @remarks\n     * This private method is for internal use only. Instead of calling Hub.remove, call the result of Hub.listen.\n     */\n    _remove(channel, listener) {\n        const holder = this.listeners.get(channel);\n        if (!holder) {\n            logger.warn(`No listeners for ${channel}`);\n            return;\n        }\n        this.listeners.set(channel, [\n            ...holder.filter(({ callback }) => callback !== listener),\n        ]);\n    }\n    dispatch(channel, payload, source, ampSymbol) {\n        if (typeof channel === 'string' &&\n            this.protectedChannels.indexOf(channel) > -1) {\n            const hasAccess = ampSymbol === AMPLIFY_SYMBOL;\n            if (!hasAccess) {\n                logger.warn(`WARNING: ${channel} is protected and dispatching on it can have unintended consequences`);\n            }\n        }\n        const capsule = {\n            channel,\n            payload: { ...payload },\n            source,\n            patternInfo: [],\n        };\n        try {\n            this._toListeners(capsule);\n        }\n        catch (e) {\n            logger.error(e);\n        }\n    }\n    listen(channel, callback, listenerName = 'noname') {\n        let cb;\n        if (typeof callback !== 'function') {\n            throw new AmplifyError({\n                name: NO_HUBCALLBACK_PROVIDED_EXCEPTION,\n                message: 'No callback supplied to Hub',\n            });\n        }\n        else {\n            // Needs to be casted as a more generic type\n            cb = callback;\n        }\n        let holder = this.listeners.get(channel);\n        if (!holder) {\n            holder = [];\n            this.listeners.set(channel, holder);\n        }\n        holder.push({\n            name: listenerName,\n            callback: cb,\n        });\n        return () => {\n            this._remove(channel, cb);\n        };\n    }\n    _toListeners(capsule) {\n        const { channel, payload } = capsule;\n        const holder = this.listeners.get(channel);\n        if (holder) {\n            holder.forEach(listener => {\n                logger.debug(`Dispatching to ${channel} with `, payload);\n                try {\n                    listener.callback(capsule);\n                }\n                catch (e) {\n                    logger.error(e);\n                }\n            });\n        }\n    }\n}\n/* We export a __default__ instance of HubClass to use it as a\npseudo Singleton for the main messaging bus, however you can still create\nyour own instance of HubClass() for a separate \"private bus\" of events. */\nconst Hub = new HubClass('__default__');\n/**\n * @internal\n *\n * Internal hub used for core Amplify functionality. Not intended for use outside of Amplify.\n *\n */\nconst HubInternal = new HubClass('internal-hub');\n\nexport { AMPLIFY_SYMBOL, Hub, HubClass, HubInternal };\n//# sourceMappingURL=index.mjs.map\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { v4 } from 'uuid';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst amplifyUuid = v4;\n\nexport { amplifyUuid };\n//# sourceMappingURL=index.mjs.map\n","import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return function (source) {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n//# sourceMappingURL=lift.js.map","import { __extends } from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\nvar OperatorSubscriber = (function (_super) {\n    __extends(OperatorSubscriber, _super);\n    function OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {\n        var _this = _super.call(this, destination) || this;\n        _this.onFinalize = onFinalize;\n        _this.shouldUnsubscribe = shouldUnsubscribe;\n        _this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : _super.prototype._next;\n        _this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : _super.prototype._error;\n        _this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : _super.prototype._complete;\n        return _this;\n    }\n    OperatorSubscriber.prototype.unsubscribe = function () {\n        var _a;\n        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n            var closed_1 = this.closed;\n            _super.prototype.unsubscribe.call(this);\n            !closed_1 && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n        }\n    };\n    return OperatorSubscriber;\n}(Subscriber));\nexport { OperatorSubscriber };\n//# sourceMappingURL=OperatorSubscriber.js.map","export var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\n//# sourceMappingURL=isArrayLike.js.map","import { isFunction } from \"./isFunction\";\nexport function isPromise(value) {\n    return isFunction(value === null || value === void 0 ? void 0 : value.then);\n}\n//# sourceMappingURL=isPromise.js.map","import { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\nexport function isInteropObservable(input) {\n    return isFunction(input[Symbol_observable]);\n}\n//# sourceMappingURL=isInteropObservable.js.map","import { isFunction } from './isFunction';\nexport function isAsyncIterable(obj) {\n    return Symbol.asyncIterator && isFunction(obj === null || obj === void 0 ? void 0 : obj[Symbol.asyncIterator]);\n}\n//# sourceMappingURL=isAsyncIterable.js.map","export function createInvalidObservableTypeError(input) {\n    return new TypeError(\"You provided \" + (input !== null && typeof input === 'object' ? 'an invalid object' : \"'\" + input + \"'\") + \" where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.\");\n}\n//# sourceMappingURL=throwUnobservableError.js.map","export function getSymbolIterator() {\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n        return '@@iterator';\n    }\n    return Symbol.iterator;\n}\nexport var iterator = getSymbolIterator();\n//# sourceMappingURL=iterator.js.map","import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\nexport function isIterable(input) {\n    return isFunction(input === null || input === void 0 ? void 0 : input[Symbol_iterator]);\n}\n//# sourceMappingURL=isIterable.js.map","import { __asyncGenerator, __await, __generator } from \"tslib\";\nimport { isFunction } from './isFunction';\nexport function readableStreamLikeToAsyncGenerator(readableStream) {\n    return __asyncGenerator(this, arguments, function readableStreamLikeToAsyncGenerator_1() {\n        var reader, _a, value, done;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    reader = readableStream.getReader();\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, , 9, 10]);\n                    _b.label = 2;\n                case 2:\n                    if (!true) return [3, 8];\n                    return [4, __await(reader.read())];\n                case 3:\n                    _a = _b.sent(), value = _a.value, done = _a.done;\n                    if (!done) return [3, 5];\n                    return [4, __await(void 0)];\n                case 4: return [2, _b.sent()];\n                case 5: return [4, __await(value)];\n                case 6: return [4, _b.sent()];\n                case 7:\n                    _b.sent();\n                    return [3, 2];\n                case 8: return [3, 10];\n                case 9:\n                    reader.releaseLock();\n                    return [7];\n                case 10: return [2];\n            }\n        });\n    });\n}\nexport function isReadableStreamLike(obj) {\n    return isFunction(obj === null || obj === void 0 ? void 0 : obj.getReader);\n}\n//# sourceMappingURL=isReadableStreamLike.js.map","import { __asyncValues, __awaiter, __generator, __values } from \"tslib\";\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function innerFrom(input) {\n    if (input instanceof Observable) {\n        return input;\n    }\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return fromInteropObservable(input);\n        }\n        if (isArrayLike(input)) {\n            return fromArrayLike(input);\n        }\n        if (isPromise(input)) {\n            return fromPromise(input);\n        }\n        if (isAsyncIterable(input)) {\n            return fromAsyncIterable(input);\n        }\n        if (isIterable(input)) {\n            return fromIterable(input);\n        }\n        if (isReadableStreamLike(input)) {\n            return fromReadableStreamLike(input);\n        }\n    }\n    throw createInvalidObservableTypeError(input);\n}\nexport function fromInteropObservable(obj) {\n    return new Observable(function (subscriber) {\n        var obs = obj[Symbol_observable]();\n        if (isFunction(obs.subscribe)) {\n            return obs.subscribe(subscriber);\n        }\n        throw new TypeError('Provided object does not correctly implement Symbol.observable');\n    });\n}\nexport function fromArrayLike(array) {\n    return new Observable(function (subscriber) {\n        for (var i = 0; i < array.length && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        subscriber.complete();\n    });\n}\nexport function fromPromise(promise) {\n    return new Observable(function (subscriber) {\n        promise\n            .then(function (value) {\n            if (!subscriber.closed) {\n                subscriber.next(value);\n                subscriber.complete();\n            }\n        }, function (err) { return subscriber.error(err); })\n            .then(null, reportUnhandledError);\n    });\n}\nexport function fromIterable(iterable) {\n    return new Observable(function (subscriber) {\n        var e_1, _a;\n        try {\n            for (var iterable_1 = __values(iterable), iterable_1_1 = iterable_1.next(); !iterable_1_1.done; iterable_1_1 = iterable_1.next()) {\n                var value = iterable_1_1.value;\n                subscriber.next(value);\n                if (subscriber.closed) {\n                    return;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (iterable_1_1 && !iterable_1_1.done && (_a = iterable_1.return)) _a.call(iterable_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        subscriber.complete();\n    });\n}\nexport function fromAsyncIterable(asyncIterable) {\n    return new Observable(function (subscriber) {\n        process(asyncIterable, subscriber).catch(function (err) { return subscriber.error(err); });\n    });\n}\nexport function fromReadableStreamLike(readableStream) {\n    return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\nfunction process(asyncIterable, subscriber) {\n    var asyncIterable_1, asyncIterable_1_1;\n    var e_2, _a;\n    return __awaiter(this, void 0, void 0, function () {\n        var value, e_2_1;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _b.trys.push([0, 5, 6, 11]);\n                    asyncIterable_1 = __asyncValues(asyncIterable);\n                    _b.label = 1;\n                case 1: return [4, asyncIterable_1.next()];\n                case 2:\n                    if (!(asyncIterable_1_1 = _b.sent(), !asyncIterable_1_1.done)) return [3, 4];\n                    value = asyncIterable_1_1.value;\n                    subscriber.next(value);\n                    if (subscriber.closed) {\n                        return [2];\n                    }\n                    _b.label = 3;\n                case 3: return [3, 1];\n                case 4: return [3, 11];\n                case 5:\n                    e_2_1 = _b.sent();\n                    e_2 = { error: e_2_1 };\n                    return [3, 11];\n                case 6:\n                    _b.trys.push([6, , 9, 10]);\n                    if (!(asyncIterable_1_1 && !asyncIterable_1_1.done && (_a = asyncIterable_1.return))) return [3, 8];\n                    return [4, _a.call(asyncIterable_1)];\n                case 7:\n                    _b.sent();\n                    _b.label = 8;\n                case 8: return [3, 10];\n                case 9:\n                    if (e_2) throw e_2.error;\n                    return [7];\n                case 10: return [7];\n                case 11:\n                    subscriber.complete();\n                    return [2];\n            }\n        });\n    });\n}\n//# sourceMappingURL=innerFrom.js.map","import { from, Observable } from 'rxjs';\nimport '../utils/getClientInfo/getClientInfo.mjs';\nimport { isWebWorker } from '../utils/isWebWorker.mjs';\nimport '../utils/retry/retry.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass Reachability {\n    networkMonitor(_) {\n        const globalObj = isWebWorker()\n            ? self\n            : typeof window !== 'undefined' && window;\n        if (!globalObj) {\n            return from([{ online: true }]);\n        }\n        return new Observable(observer => {\n            observer.next({ online: globalObj.navigator.onLine });\n            const notifyOnline = () => {\n                observer.next({ online: true });\n            };\n            const notifyOffline = () => {\n                observer.next({ online: false });\n            };\n            globalObj.addEventListener('online', notifyOnline);\n            globalObj.addEventListener('offline', notifyOffline);\n            Reachability._observers.push(observer);\n            return () => {\n                globalObj.removeEventListener('online', notifyOnline);\n                globalObj.removeEventListener('offline', notifyOffline);\n                Reachability._observers = Reachability._observers.filter(_observer => _observer !== observer);\n            };\n        });\n    }\n    // expose observers to simulate offline mode for integration testing\n    static _observerOverride(status) {\n        for (const observer of this._observers) {\n            if (observer.closed) {\n                this._observers = this._observers.filter(_observer => _observer !== observer);\n                continue;\n            }\n            observer?.next && observer.next(status);\n        }\n    }\n}\nReachability._observers = [];\n\nexport { Reachability };\n//# sourceMappingURL=Reachability.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst isWebWorker = () => {\n    if (typeof self === 'undefined') {\n        return false;\n    }\n    const selfContext = self;\n    return (typeof selfContext.WorkerGlobalScope !== 'undefined' &&\n        self instanceof selfContext.WorkerGlobalScope);\n};\n\nexport { isWebWorker };\n//# sourceMappingURL=isWebWorker.mjs.map\n","import { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\nexport function from(input, scheduler) {\n    return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n//# sourceMappingURL=from.js.map","import { Reachability } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst ReachabilityMonitor = () => new Reachability().networkMonitor();\n\nexport { ReachabilityMonitor };\n//# sourceMappingURL=index.mjs.map\n","import { Observable, map, filter } from 'rxjs';\nimport { ConnectionState } from '../types/PubSub.mjs';\nimport { ReachabilityMonitor } from './ReachabilityMonitor/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst CONNECTION_CHANGE = {\n    KEEP_ALIVE_MISSED: { keepAliveState: 'unhealthy' },\n    KEEP_ALIVE: { keepAliveState: 'healthy' },\n    CONNECTION_ESTABLISHED: { connectionState: 'connected' },\n    CONNECTION_FAILED: {\n        intendedConnectionState: 'disconnected',\n        connectionState: 'disconnected',\n    },\n    CLOSING_CONNECTION: { intendedConnectionState: 'disconnected' },\n    OPENING_CONNECTION: {\n        intendedConnectionState: 'connected',\n        connectionState: 'connecting',\n    },\n    CLOSED: { connectionState: 'disconnected' },\n    ONLINE: { networkState: 'connected' },\n    OFFLINE: { networkState: 'disconnected' },\n};\nclass ConnectionStateMonitor {\n    constructor() {\n        this._networkMonitoringSubscription = undefined;\n        this._linkedConnectionState = {\n            networkState: 'connected',\n            connectionState: 'disconnected',\n            intendedConnectionState: 'disconnected',\n            keepAliveState: 'healthy',\n        };\n        // Attempt to update the state with the current actual network state\n        this._initialNetworkStateSubscription = ReachabilityMonitor().subscribe(({ online }) => {\n            this.record(online ? CONNECTION_CHANGE.ONLINE : CONNECTION_CHANGE.OFFLINE);\n            this._initialNetworkStateSubscription?.unsubscribe();\n        });\n        this._linkedConnectionStateObservable =\n            new Observable(connectionStateObserver => {\n                connectionStateObserver.next(this._linkedConnectionState);\n                this._linkedConnectionStateObserver = connectionStateObserver;\n            });\n    }\n    /**\n     * Turn network state monitoring on if it isn't on already\n     */\n    enableNetworkMonitoring() {\n        // If no initial network state was discovered, stop trying\n        this._initialNetworkStateSubscription?.unsubscribe();\n        // Maintain the network state based on the reachability monitor\n        if (this._networkMonitoringSubscription === undefined) {\n            this._networkMonitoringSubscription = ReachabilityMonitor().subscribe(({ online }) => {\n                this.record(online ? CONNECTION_CHANGE.ONLINE : CONNECTION_CHANGE.OFFLINE);\n            });\n        }\n    }\n    /**\n     * Turn network state monitoring off if it isn't off already\n     */\n    disableNetworkMonitoring() {\n        this._networkMonitoringSubscription?.unsubscribe();\n        this._networkMonitoringSubscription = undefined;\n    }\n    /**\n     * Get the observable that allows us to monitor the connection state\n     *\n     * @returns {Observable<ConnectionState>} - The observable that emits ConnectionState updates\n     */\n    get connectionStateObservable() {\n        let previous;\n        // The linked state aggregates state changes to any of the network, connection,\n        // intendedConnection and keepAliveHealth. Some states will change these independent\n        // states without changing the overall connection state.\n        // After translating from linked states to ConnectionState, then remove any duplicates\n        return this._linkedConnectionStateObservable\n            .pipe(map(value => {\n            return this.connectionStatesTranslator(value);\n        }))\n            .pipe(filter(current => {\n            const toInclude = current !== previous;\n            previous = current;\n            return toInclude;\n        }));\n    }\n    /*\n     * Updates local connection state and emits the full state to the observer.\n     */\n    record(statusUpdates) {\n        // Maintain the network monitor\n        if (statusUpdates.intendedConnectionState === 'connected') {\n            this.enableNetworkMonitoring();\n        }\n        else if (statusUpdates.intendedConnectionState === 'disconnected') {\n            this.disableNetworkMonitoring();\n        }\n        // Maintain the socket state\n        const newSocketStatus = {\n            ...this._linkedConnectionState,\n            ...statusUpdates,\n        };\n        this._linkedConnectionState = { ...newSocketStatus };\n        this._linkedConnectionStateObserver?.next(this._linkedConnectionState);\n    }\n    /*\n     * Translate the ConnectionState structure into a specific ConnectionState string literal union\n     */\n    connectionStatesTranslator({ connectionState, networkState, intendedConnectionState, keepAliveState, }) {\n        if (connectionState === 'connected' && networkState === 'disconnected')\n            return ConnectionState.ConnectedPendingNetwork;\n        if (connectionState === 'connected' &&\n            intendedConnectionState === 'disconnected')\n            return ConnectionState.ConnectedPendingDisconnect;\n        if (connectionState === 'disconnected' &&\n            intendedConnectionState === 'connected' &&\n            networkState === 'disconnected')\n            return ConnectionState.ConnectionDisruptedPendingNetwork;\n        if (connectionState === 'disconnected' &&\n            intendedConnectionState === 'connected')\n            return ConnectionState.ConnectionDisrupted;\n        if (connectionState === 'connected' && keepAliveState === 'unhealthy')\n            return ConnectionState.ConnectedPendingKeepAlive;\n        // All remaining states directly correspond to the connection state\n        if (connectionState === 'connecting')\n            return ConnectionState.Connecting;\n        if (connectionState === 'disconnected')\n            return ConnectionState.Disconnected;\n        return ConnectionState.Connected;\n    }\n}\n\nexport { CONNECTION_CHANGE, ConnectionStateMonitor };\n//# sourceMappingURL=ConnectionStateMonitor.mjs.map\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function map(project, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            subscriber.next(project.call(thisArg, value, index++));\n        }));\n    });\n}\n//# sourceMappingURL=map.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function filter(predicate, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return predicate.call(thisArg, value, index++) && subscriber.next(value); }));\n    });\n}\n//# sourceMappingURL=filter.js.map","import { RECONNECT_INTERVAL, RECONNECT_DELAY } from '../Providers/constants.mjs';\n\nvar ReconnectEvent;\n(function (ReconnectEvent) {\n    ReconnectEvent[\"START_RECONNECT\"] = \"START_RECONNECT\";\n    ReconnectEvent[\"HALT_RECONNECT\"] = \"HALT_RECONNECT\";\n})(ReconnectEvent || (ReconnectEvent = {}));\n/**\n * Captures the reconnect event logic used to determine when to reconnect to PubSub providers.\n *   Reconnnect attempts are delayed by 5 seconds to let the interface settle.\n *   Attempting to reconnect only once creates unrecoverable states when the network state isn't\n *   supported by the browser, so this keeps retrying every minute until halted.\n */\nclass ReconnectionMonitor {\n    constructor() {\n        this.reconnectObservers = [];\n    }\n    /**\n     * Add reconnect observer to the list of observers to alert on reconnect\n     */\n    addObserver(reconnectObserver) {\n        this.reconnectObservers.push(reconnectObserver);\n    }\n    /**\n     * Given a reconnect event, start the appropriate behavior\n     */\n    record(event) {\n        if (event === ReconnectEvent.START_RECONNECT) {\n            // If the reconnection hasn't been started\n            if (this.reconnectSetTimeoutId === undefined &&\n                this.reconnectIntervalId === undefined) {\n                this.reconnectSetTimeoutId = setTimeout(() => {\n                    // Reconnect now\n                    this._triggerReconnect();\n                    // Retry reconnect every periodically until it works\n                    this.reconnectIntervalId = setInterval(() => {\n                        this._triggerReconnect();\n                    }, RECONNECT_INTERVAL);\n                }, RECONNECT_DELAY);\n            }\n        }\n        if (event === ReconnectEvent.HALT_RECONNECT) {\n            if (this.reconnectIntervalId) {\n                clearInterval(this.reconnectIntervalId);\n                this.reconnectIntervalId = undefined;\n            }\n            if (this.reconnectSetTimeoutId) {\n                clearTimeout(this.reconnectSetTimeoutId);\n                this.reconnectSetTimeoutId = undefined;\n            }\n        }\n    }\n    /**\n     * Complete all reconnect observers\n     */\n    close() {\n        this.reconnectObservers.forEach(reconnectObserver => {\n            reconnectObserver.complete?.();\n        });\n    }\n    _triggerReconnect() {\n        this.reconnectObservers.forEach(reconnectObserver => {\n            reconnectObserver.next?.();\n        });\n    }\n}\n\nexport { ReconnectEvent, ReconnectionMonitor };\n//# sourceMappingURL=ReconnectionMonitor.mjs.map\n","import { ConsoleLogger } from '@aws-amplify/core';\n\nconst logger = new ConsoleLogger('AbstractPubSubProvider');\nclass AbstractPubSub {\n    constructor(options) {\n        this._config = options;\n    }\n    configure(config) {\n        this._config = { ...config, ...this._config };\n        logger.debug(`configure`, this._config);\n        return this.options;\n    }\n    get options() {\n        return { ...this._config };\n    }\n}\n\nexport { AbstractPubSub };\n//# sourceMappingURL=PubSub.mjs.map\n","import { Observable } from 'rxjs';\nimport { ConsoleLogger, Hub } from '@aws-amplify/core';\nimport { amplifyUuid, AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport { ConnectionState } from '../types/PubSub.mjs';\nimport * as Paho from '../vendor/paho-mqtt.js';\nimport { ConnectionStateMonitor, CONNECTION_CHANGE } from '../utils/ConnectionStateMonitor.mjs';\nimport { ReconnectionMonitor, ReconnectEvent } from '../utils/ReconnectionMonitor.mjs';\nimport { AbstractPubSub } from './PubSub.mjs';\nimport { CONNECTION_STATE_CHANGE } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('MqttOverWS');\nfunction mqttTopicMatch(filter, topic) {\n    const filterArray = filter.split('/');\n    const { length } = filterArray;\n    const topicArray = topic.split('/');\n    for (let i = 0; i < length; ++i) {\n        const left = filterArray[i];\n        const right = topicArray[i];\n        if (left === '#')\n            return topicArray.length >= length;\n        if (left !== '+' && left !== right)\n            return false;\n    }\n    return length === topicArray.length;\n}\nclass ClientsQueue {\n    constructor() {\n        this.promises = new Map();\n    }\n    async get(clientId, clientFactory) {\n        const cachedPromise = this.promises.get(clientId);\n        if (cachedPromise)\n            return cachedPromise;\n        if (clientFactory) {\n            const newPromise = clientFactory(clientId);\n            this.promises.set(clientId, newPromise);\n            newPromise.catch(() => this.promises.delete(clientId));\n            return newPromise;\n        }\n        return undefined;\n    }\n    get allClients() {\n        return Array.from(this.promises.keys());\n    }\n    remove(clientId) {\n        this.promises.delete(clientId);\n    }\n}\nconst dispatchPubSubEvent = (payload) => {\n    Hub.dispatch('pubsub', payload, 'PubSub', AMPLIFY_SYMBOL);\n};\nconst topicSymbol = typeof Symbol !== 'undefined' ? Symbol('topic') : '@@topic';\nclass MqttOverWS extends AbstractPubSub {\n    constructor(options = {}) {\n        super({ ...options, clientId: options.clientId || amplifyUuid() });\n        this._clientsQueue = new ClientsQueue();\n        this.connectionStateMonitor = new ConnectionStateMonitor();\n        this.reconnectionMonitor = new ReconnectionMonitor();\n        this._topicObservers = new Map();\n        this._clientIdObservers = new Map();\n        // Monitor the connection health state and pass changes along to Hub\n        this.connectionStateMonitor.connectionStateObservable.subscribe(connectionStateChange => {\n            dispatchPubSubEvent({\n                event: CONNECTION_STATE_CHANGE,\n                data: {\n                    provider: this,\n                    connectionState: connectionStateChange,\n                },\n                message: `Connection state is ${connectionStateChange}`,\n            });\n            this.connectionState = connectionStateChange;\n            // Trigger reconnection when the connection is disrupted\n            if (connectionStateChange === ConnectionState.ConnectionDisrupted) {\n                this.reconnectionMonitor.record(ReconnectEvent.START_RECONNECT);\n            }\n            else if (connectionStateChange !== ConnectionState.Connecting) {\n                // Trigger connected to halt reconnection attempts\n                this.reconnectionMonitor.record(ReconnectEvent.HALT_RECONNECT);\n            }\n        });\n    }\n    get clientId() {\n        return this.options.clientId;\n    }\n    get endpoint() {\n        return Promise.resolve(this.options.endpoint);\n    }\n    get clientsQueue() {\n        return this._clientsQueue;\n    }\n    get isSSLEnabled() {\n        return !this.options\n            .aws_appsync_dangerously_connect_to_http_endpoint_for_testing;\n    }\n    onDisconnect({ clientId, errorCode, ...args }) {\n        if (errorCode !== 0) {\n            logger.warn(clientId, JSON.stringify({ errorCode, ...args }, null, 2));\n            if (!clientId) {\n                return;\n            }\n            const clientIdObservers = this._clientIdObservers.get(clientId);\n            if (!clientIdObservers) {\n                return;\n            }\n            this.disconnect(clientId);\n        }\n    }\n    async newClient({ url, clientId }) {\n        logger.debug('Creating new MQTT client', clientId);\n        this.connectionStateMonitor.record(CONNECTION_CHANGE.OPENING_CONNECTION);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore this module is expected to not have declaration file\n        const client = new Paho.Client(url, clientId);\n        client.onMessageArrived = ({ destinationName: topic, payloadString: msg, }) => {\n            this._onMessage(topic, msg);\n        };\n        client.onConnectionLost = ({ errorCode, ...args }) => {\n            this.onDisconnect({ clientId, errorCode, ...args });\n            this.connectionStateMonitor.record(CONNECTION_CHANGE.CLOSED);\n        };\n        const connected = await new Promise((resolve, _reject) => {\n            client.connect({\n                useSSL: this.isSSLEnabled,\n                mqttVersion: 3,\n                onSuccess: () => {\n                    resolve(true);\n                },\n                onFailure: () => {\n                    if (clientId)\n                        this._clientsQueue.remove(clientId);\n                    this.connectionStateMonitor.record(CONNECTION_CHANGE.CLOSED);\n                    resolve(false);\n                },\n            });\n        });\n        if (connected) {\n            this.connectionStateMonitor.record(CONNECTION_CHANGE.CONNECTION_ESTABLISHED);\n        }\n        return client;\n    }\n    async connect(clientId, options = {}) {\n        return this.clientsQueue.get(clientId, async (inputClientId) => {\n            const client = await this.newClient({\n                ...options,\n                clientId: inputClientId,\n            });\n            if (client) {\n                // Once connected, subscribe to all topics registered observers\n                this._topicObservers.forEach((_value, key) => {\n                    client.subscribe(key);\n                });\n            }\n            return client;\n        });\n    }\n    async disconnect(clientId) {\n        const client = await this.clientsQueue.get(clientId);\n        if (client && client.isConnected()) {\n            client.disconnect();\n        }\n        this.clientsQueue.remove(clientId);\n        this.connectionStateMonitor.record(CONNECTION_CHANGE.CLOSED);\n    }\n    async publish({ topics, message }) {\n        const targetTopics = [].concat(topics);\n        const msg = JSON.stringify(message);\n        const client = await this.clientsQueue.get(this.clientId);\n        if (client) {\n            logger.debug('Publishing to topic(s)', targetTopics.join(','), message);\n            targetTopics.forEach(topic => {\n                client.send(topic, msg);\n            });\n        }\n        else {\n            logger.debug('Publishing to topic(s) failed', targetTopics.join(','), message);\n        }\n    }\n    _onMessage(topic, msg) {\n        try {\n            const matchedTopicObservers = [];\n            this._topicObservers.forEach((observerForTopic, observerTopic) => {\n                if (mqttTopicMatch(observerTopic, topic)) {\n                    matchedTopicObservers.push(observerForTopic);\n                }\n            });\n            const parsedMessage = JSON.parse(msg);\n            if (typeof parsedMessage === 'object') {\n                parsedMessage[topicSymbol] = topic;\n            }\n            matchedTopicObservers.forEach(observersForTopic => {\n                observersForTopic.forEach(observer => {\n                    observer.next(parsedMessage);\n                });\n            });\n        }\n        catch (error) {\n            logger.warn('Error handling message', error, msg);\n        }\n    }\n    subscribe({ topics, options = {}, }) {\n        const targetTopics = [].concat(topics);\n        logger.debug('Subscribing to topic(s)', targetTopics.join(','));\n        let reconnectSubscription;\n        return new Observable(observer => {\n            targetTopics.forEach(topic => {\n                // this._topicObservers is used to notify the observers according to the topic received on the message\n                let observersForTopic = this._topicObservers.get(topic);\n                if (!observersForTopic) {\n                    observersForTopic = new Set();\n                    this._topicObservers.set(topic, observersForTopic);\n                }\n                observersForTopic.add(observer);\n            });\n            const { clientId = this.clientId } = options;\n            // this._clientIdObservers is used to close observers when client gets disconnected\n            let observersForClientId = this._clientIdObservers.get(clientId);\n            if (!observersForClientId) {\n                observersForClientId = new Set();\n            }\n            if (observersForClientId) {\n                observersForClientId.add(observer);\n                this._clientIdObservers.set(clientId, observersForClientId);\n            }\n            (async () => {\n                const getClient = async () => {\n                    try {\n                        const { url = await this.endpoint } = options;\n                        const client = await this.connect(clientId, { url });\n                        if (client !== undefined) {\n                            targetTopics.forEach(topic => {\n                                client.subscribe(topic);\n                            });\n                        }\n                    }\n                    catch (e) {\n                        logger.debug('Error forming connection', e);\n                    }\n                };\n                // Establish the initial connection\n                await getClient();\n                // Add an observable to the reconnection list to manage reconnection for this subscription\n                reconnectSubscription = new Observable(reconnectSubscriptionObserver => {\n                    this.reconnectionMonitor.addObserver(reconnectSubscriptionObserver);\n                }).subscribe(() => {\n                    getClient();\n                });\n            })();\n            return async () => {\n                const client = await this.clientsQueue.get(clientId);\n                reconnectSubscription?.unsubscribe();\n                if (client) {\n                    this._clientIdObservers.get(clientId)?.delete(observer);\n                    // No more observers per client => client not needed anymore\n                    if (this._clientIdObservers.get(clientId)?.size === 0) {\n                        this.disconnect(clientId);\n                        this.connectionStateMonitor.record(CONNECTION_CHANGE.CLOSING_CONNECTION);\n                        this._clientIdObservers.delete(clientId);\n                    }\n                    targetTopics.forEach(topic => {\n                        const observersForTopic = this._topicObservers.get(topic) ||\n                            new Set();\n                        observersForTopic.delete(observer);\n                        // if no observers exists for the topic, topic should be removed\n                        if (observersForTopic.size === 0) {\n                            this._topicObservers.delete(topic);\n                            if (client.isConnected()) {\n                                client.unsubscribe(topic);\n                            }\n                        }\n                    });\n                }\n                return null;\n            };\n        });\n    }\n}\n\nexport { MqttOverWS, mqttTopicMatch };\n//# sourceMappingURL=MqttOverWS.mjs.map\n","import { Signer } from '@aws-amplify/core/internals/utils';\nimport { fetchAuthSession } from '@aws-amplify/core';\nimport { MqttOverWS } from './MqttOverWS.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst SERVICE_NAME = 'iotdevicegateway';\nclass AWSIoT extends MqttOverWS {\n    constructor(options = {}) {\n        super(options);\n    }\n    get region() {\n        return this.options?.region;\n    }\n    get endpoint() {\n        return (async () => {\n            const { endpoint } = this.options;\n            const serviceInfo = {\n                service: SERVICE_NAME,\n                region: this.region,\n            };\n            const session = await fetchAuthSession();\n            if (!session.credentials) {\n                throw new Error('No auth session credentials');\n            }\n            const { accessKeyId: access_key, secretAccessKey: secret_key, sessionToken: session_token, } = session.credentials;\n            const result = Signer.signUrl(endpoint, { access_key, secret_key, session_token }, serviceInfo);\n            return result;\n        })();\n    }\n}\n\nexport { AWSIoT };\n//# sourceMappingURL=AWSIot.mjs.map\n"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__556__","PahoMQTT","global","localStorage","e","data","setItem","key","item","getItem","removeItem","validate","obj","keys","hasOwnProperty","errorStr","validKey","Error","_typeof","format","ERROR","INVALID_TYPE","scope","f","apply","arguments","OK","code","text","CONNECT_TIMEOUT","SUBSCRIBE_TIMEOUT","UNSUBSCRIBE_TIMEOUT","PING_TIMEOUT","INTERNAL_ERROR","CONNACK_RETURNCODE","SOCKET_ERROR","SOCKET_CLOSE","MALFORMED_UTF","UNSUPPORTED","INVALID_STATE","INVALID_ARGUMENT","UNSUPPORTED_OPERATION","INVALID_STORED_DATA","INVALID_MQTT_MESSAGE_TYPE","MALFORMED_UNICODE","BUFFER_FULL","CONNACK_RC","error","substitutions","field","start","i","length","indexOf","part1","substring","part2","MqttProtoIdentifierv3","MqttProtoIdentifierv4","WireMessage","type","options","name","decodeMessage","input","pos","digit","startingPos","first","messageInfo","remLength","multiplier","endPos","wireMessage","sessionPresent","returnCode","qos","len","readUint16","topicName","parseUTF8","messageIdentifier","message","Message","subarray","retained","duplicate","destinationName","payloadMessage","writeUint16","buffer","offset","writeString","utf8Length","stringToUTF8","UTF8Length","output","charCode","charCodeAt","lowCharCode","isNaN","utf16","byte1","byte2","toString","byte3","byte4","String","fromCharCode","prototype","encode","willMessagePayloadBytes","topicStrLength","destinationNameLength","undefined","mqttVersion","clientId","willMessage","payloadBytes","Uint8Array","byteLength","userName","password","topics","requestedQos","ArrayBuffer","mbi","number","Array","numBytes","encodeMBI","byteStream","set","connectFlags","cleanSession","keepAliveInterval","Pinger","client","_client","_keepAliveInterval","isReset","pingReq","doTimeout","pinger","doPing","_trace","socket","send","timeout","setTimeout","_disconnected","reset","clearTimeout","cancel","Timeout","timeoutSeconds","action","args","ClientImpl","uri","host","port","path","WebSocket","_wsuri","_localKey","_msg_queue","_buffered_msg_queue","_sentMessages","_receivedMessages","_notify_msg_sent","_message_identifier","_sequence","restore","connected","maxMessageIdentifier","connectOptions","hostIndex","onConnected","onConnectionLost","onMessageDelivered","onMessageArrived","traceFunction","_connectTimeout","sendPinger","receivePinger","_reconnectInterval","_reconnecting","_reconnectTimeout","disconnectedPublishing","disconnectedBufferSize","receiveBuffer","_traceBuffer","_MAX_TRACE_ENTRIES","connect","connectOptionsMasked","_traceMask","uris","_doConnect","subscribe","filter","subscribeOptions","constructor","onSuccess","grantedQos","invocationContext","onFailure","errorCode","errorMessage","timeOut","_requires_ack","_schedule_message","unsubscribe","unsubscribeOptions","callback","Object","sequence","unshift","disconnect","getTraceLog","Date","startTrace","stopTrace","wsurl","useSSL","uriParts","split","join","binaryType","onopen","_on_socket_open","onmessage","_on_socket_message","onerror","_on_socket_error","onclose","_on_socket_close","_process_queue","store","prefix","storedMessage","version","pubRecReceived","hex","messageBytes","payloadHex","JSON","stringify","value","parse","x","parseInt","pop","_socket_send","messageCount","event","messages","_deframeMessages","_handleMessage","byteArray","newData","result","push","errorStack","stack","sentMessage","receivedMessage","sequencedMessages","msgId","msg","sort","a","b","pubRelMessage","reconnected","_connected","_receivePublish","_receiveMessage","pubCompMessage","wireMessageMasked","pubAckMessage","pubRecMessage","reconnect","_reconnect","errorText","readyState","close","mqttVersionExplicit","slice","call","splice","record","severity","max","shift","traceObject","masked","traceObjectMasked","attr","newPayload","payload","isView","DataView","defineProperties","payloadString","enumerable","get","newDestinationName","newQos","newRetained","topic","newTopic","newDuplicate","Client","match","ipv6AddSBracket","clientIdLength","newOnConnected","newDisconnectedPublishing","newDisconnectedBufferSize","newOnConnectionLost","newOnMessageDelivered","newOnMessageArrived","trace","hosts","ports","stringPayload","usingURIs","test","ipv6","publish","isConnected","self","window","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","d","definition","o","defineProperty","g","globalThis","Function","prop","r","Symbol","toStringTag","nmd","paths","children","CONNECTION_STATE_CHANGE","MESSAGE_TYPES","SUBSCRIPTION_STATUS","SOCKET_STATUS","CONTROL_MSG","ConnectionState","getSignedHeaders","headers","map","toLowerCase","ALGORITHM_QUERY_PARAM","AMZ_DATE_QUERY_PARAM","CREDENTIAL_QUERY_PARAM","EXPIRES_QUERY_PARAM","SIGNED_HEADERS_QUERY_PARAM","TOKEN_QUERY_PARAM","HOST_HEADER","AMZ_DATE_HEADER","TOKEN_HEADER","KEY_TYPE_IDENTIFIER","SHA256_ALGORITHM_IDENTIFIER","getSigningValues","credentials","signingDate","signingRegion","signingService","uriEscapePath","accessKeyId","secretAccessKey","sessionToken","longDate","shortDate","date","toISOString","replace","getFormattedDates","credentialScope","extendStatics","setPrototypeOf","__proto__","p","__extends","TypeError","__","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","__generator","body","y","t","_","label","sent","trys","ops","Iterator","verb","iterator","n","v","op","__values","s","m","__read","ar","__spreadArray","to","from","pack","l","concat","__await","SuppressedError","BLOCK_SIZE","KEY","Uint32Array","INIT","MAX_HASHABLE_LENGTH","Math","pow","RawSha256","state","Int32Array","temp","bufferLength","bytesHashed","finished","update","position","hashBuffer","digest","bitsHashed","bufferView","byteOffset","undecoratedLength","setUint8","setUint32","floor","out","state0","state1","state2","state3","state4","state5","state6","state7","u","t1_1","t2_1","t1","t2","Buffer","TextEncoder","convertToBuffer","BYTES_PER_ELEMENT","Sha256","secret","hash","toHash","digestSync","outer","_a","inner","bufferHash","bufferFromSecret","SHORT_TO_HEX","HEX_TO_SHORT","encodedByte","getHashedData","sha256","getHashedDataAsHex","bytes","toHex","getCanonicalHeaders","entries","trim","entry","escapeUri","encodeURIComponent","hexEncode","c","toUpperCase","getCanonicalUri","pathname","getHashedPayload","isSourceData","isArrayBuffer","arg","getSignature","request","canonicalRequest","method","url","searchParams","keyA","valA","keyB","valB","val","getCanonicalRequest","stringToSign","hashedRequest","getStringToSign","signature","region","service","dateKey","regionKey","serviceKey","getSigningKey","AmplifyUrl","URL","DateUtils","clockOffset","getDateWithClockOffset","getTime","getClockOffset","getHeaderStringFromDate","getDateFromHeaderString","header","year","month","day","hour","minute","second","UTC","Number","isClockSkewed","serverDate","abs","isClockSkewError","response","Boolean","includes","setClockOffset","AWS_ENDPOINT_REGEX","Signer","sign","accessInfo","serviceInfo","requestToSign","signedRequest","signingValues","credentialEntry","signedHeadersEntry","signatureEntry","signRequest","getOptions","Authorization","authorization","signUrl","urlOrRequest","expiration","urlToSign","presignable","signedUrl","presignedUrl","forEach","append","presignUrl","session_token","sessionTokenRequiredInSigning","access_key","secret_key","urlRegion","urlService","parseServiceInfo","parsed","reverse","isFunction","ctorFunc","UnsubscriptionError","errors","instance","err","arrRemove","arr","index","Subscription","initialTeardown","closed","_parentage","_finalizers","empty","e_1","e_2","_b","isArray","_parentage_1","_parentage_1_1","remove","e_1_1","return","initialFinalizer","_finalizers_1","_finalizers_1_1","finalizer","execFinalizer","e_2_1","add","teardown","_hasParent","_addParent","parent","_removeParent","EMPTY","isSubscription","config","timeoutProvider","handler","_i","delegate","handle","reportUnhandledError","noop","COMPLETE_NOTIFICATION","createNotification","kind","context","Subscriber","_super","destination","_this","isStopped","EMPTY_OBSERVER","complete","SafeSubscriber","handleStoppedNotification","nextNotification","_next","_error","_complete","_bind","bind","fn","ConsumerObserver","partialObserver","handleUnhandledError","observerOrNext","context_1","errorThrown","notification","subscriber","onStoppedNotification","observable","identity","LogType","Observable","_subscribe","lift","operator","source","isObserver","cb","isRoot","errorContext","_trySubscribe","sink","promiseCtor","getPromiseCtor","pipe","operations","fns","reduce","prev","toPromise","LOG_LEVELS","VERBOSE","DEBUG","INFO","WARN","NONE","ConsoleLogger","level","_pluggables","_padding","_ts","dt","getMinutes","getSeconds","getMilliseconds","configure","_config","_log","loggerLevelName","LOG_LEVEL","log","console","warn","BIND_ALL_LOG_LEVELS","info","debug","plugin","logEvent","timestamp","now","pushLogs","verbose","addPluggable","pluggable","getCategoryName","listPluggables","AmplifyError","recoverySuggestion","underlyingError","super","AMPLIFY_SYMBOL","logger","HubClass","listeners","Map","protectedChannels","_remove","channel","listener","holder","dispatch","ampSymbol","capsule","patternInfo","_toListeners","listen","listenerName","randomUUID","crypto","getRandomValues","rnds8","rng","byteToHex","amplifyUuid","buf","rnds","random","unsafeStringify","operate","init","hasLift","liftedSource","createOperatorSubscriber","onNext","onComplete","onError","onFinalize","OperatorSubscriber","shouldUnsubscribe","closed_1","isArrayLike","isPromise","isInteropObservable","isAsyncIterable","asyncIterator","createInvalidObservableTypeError","isIterable","readableStreamLikeToAsyncGenerator","readableStream","q","AsyncIterator","resume","fulfill","settle","__asyncGenerator","reader","getReader","read","releaseLock","isReadableStreamLike","innerFrom","obs","array","promise","fromAsyncIterable","iterable","iterable_1","iterable_1_1","asyncIterable","asyncIterable_1","asyncIterable_1_1","__asyncValues","process","catch","Reachability","networkMonitor","globalObj","selfContext","WorkerGlobalScope","isWebWorker","observer","online","navigator","onLine","notifyOnline","notifyOffline","addEventListener","_observers","removeEventListener","_observer","_observerOverride","status","ReachabilityMonitor","CONNECTION_CHANGE","KEEP_ALIVE_MISSED","keepAliveState","KEEP_ALIVE","CONNECTION_ESTABLISHED","connectionState","CONNECTION_FAILED","intendedConnectionState","CLOSING_CONNECTION","OPENING_CONNECTION","CLOSED","ONLINE","networkState","OFFLINE","ConnectionStateMonitor","_networkMonitoringSubscription","_linkedConnectionState","_initialNetworkStateSubscription","_linkedConnectionStateObservable","connectionStateObserver","_linkedConnectionStateObserver","enableNetworkMonitoring","disableNetworkMonitoring","connectionStateObservable","previous","project","connectionStatesTranslator","predicate","current","toInclude","statusUpdates","newSocketStatus","ConnectedPendingNetwork","ConnectedPendingDisconnect","ConnectionDisruptedPendingNetwork","ConnectionDisrupted","ConnectedPendingKeepAlive","Connecting","Disconnected","Connected","ReconnectEvent","ReconnectionMonitor","reconnectObservers","addObserver","reconnectObserver","START_RECONNECT","reconnectSetTimeoutId","reconnectIntervalId","_triggerReconnect","setInterval","HALT_RECONNECT","clearInterval","AbstractPubSub","mqttTopicMatch","filterArray","topicArray","left","right","ClientsQueue","promises","clientFactory","cachedPromise","newPromise","delete","allClients","topicSymbol","MqttOverWS","_clientsQueue","connectionStateMonitor","reconnectionMonitor","_topicObservers","_clientIdObservers","connectionStateChange","provider","Hub","endpoint","clientsQueue","isSSLEnabled","aws_appsync_dangerously_connect_to_http_endpoint_for_testing","onDisconnect","newClient","_onMessage","_reject","async","inputClientId","_value","targetTopics","matchedTopicObservers","observerForTopic","observerTopic","parsedMessage","observersForTopic","reconnectSubscription","Set","observersForClientId","getClient","reconnectSubscriptionObserver","size","AWSIoT","session","fetchAuthSession"],"sourceRoot":""}