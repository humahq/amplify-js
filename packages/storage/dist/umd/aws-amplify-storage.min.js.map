{"version":3,"file":"aws-amplify-storage.min.js","mappings":";CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,EAAQG,QAAQ,qBACR,mBAAXC,QAAyBA,OAAOC,IAC9CD,OAAO,sBAAuB,CAAC,oBAAqBJ,GAC1B,iBAAZC,QACdA,QAA6B,oBAAID,EAAQG,QAAQ,qBAEjDJ,EAA0B,oBAAIC,EAAQD,EAAuB,iBAC9D,CATD,CASGO,MAAOC,4BCNV,IACWP,IAoBT,SAASQ,GACXA,EAAMC,QAAU,QAqBhB,IAAIC,EAnBJ,WAGC,IAFA,IAAIC,EAAI,EAAGC,EAAQ,IAAIC,MAAM,KAErBC,EAAG,EAAQ,KAALA,IAAYA,EASzBH,EAAQ,GADRA,EAAQ,GADRA,EAAQ,GADRA,EAAQ,GADRA,EAAQ,GADRA,EAAQ,GADRA,EAAQ,GADRA,EAAQ,GADRA,EAAIG,IACW,UAAaH,IAAM,EAAOA,IAAM,IAChC,UAAaA,IAAM,EAAOA,IAAM,IAChC,UAAaA,IAAM,EAAOA,IAAM,IAChC,UAAaA,IAAM,EAAOA,IAAM,IAChC,UAAaA,IAAM,EAAOA,IAAM,IAChC,UAAaA,IAAM,EAAOA,IAAM,IAChC,UAAaA,IAAM,EAAOA,IAAM,IAChC,UAAaA,IAAM,EAAOA,IAAM,EAC/CC,EAAME,GAAKH,EAGZ,MAA6B,oBAAfI,WAA6B,IAAIA,WAAWH,GAASA,CACpE,CAESI,GAaLC,EAZJ,SAA4BC,GAC3B,IAAIP,EAAI,EAAGQ,EAAI,EAAGL,EAAI,EAAGF,EAA8B,oBAAfG,WAA6B,IAAIA,WAAW,MAAQ,IAAIF,MAAM,MAEtG,IAAIC,EAAI,EAAQ,KAALA,IAAYA,EAAGF,EAAME,GAAKI,EAAEJ,GACvC,IAAIA,EAAI,EAAQ,KAALA,IAAYA,EAEtB,IADAK,EAAID,EAAEJ,GACFH,EAAI,IAAMG,EAAGH,EAAI,KAAMA,GAAK,IAAKQ,EAAIP,EAAMD,GAAMQ,IAAM,EAAKD,EAAM,IAAJC,GAEnE,IAAIC,EAAM,GACV,IAAIN,EAAI,EAAQ,IAALA,IAAWA,EAAGM,EAAIN,EAAI,GAA2B,oBAAfC,WAA6BH,EAAMS,SAAa,IAAJP,EAAa,IAAJA,EAAU,KAAOF,EAAMU,MAAU,IAAJR,EAAa,IAAJA,EAAU,KAClJ,OAAOM,CACR,CACSG,CAAmBb,GACxBc,EAAKP,EAAG,GAAKQ,EAAKR,EAAG,GAAKS,EAAKT,EAAG,GAAKU,EAAKV,EAAG,GAAKW,EAAKX,EAAG,GAC5DY,EAAKZ,EAAG,GAAKa,EAAKb,EAAG,GAAKc,EAAKd,EAAG,GAAKe,EAAKf,EAAG,GAAKgB,EAAKhB,EAAG,GAC5DiB,EAAKjB,EAAG,IAAKkB,EAAKlB,EAAG,IAAKmB,EAAKnB,EAAG,IAAKoB,EAAKpB,EAAG,IAAKqB,EAAKrB,EAAG,IA6ChET,EAAMI,MAAQF,EAEdF,EAAM+B,KA9CN,SAAoBA,EAAMC,GAEzB,IADA,IAAIC,GAAID,EACAE,EAAI,EAAGC,EAAIJ,EAAKK,OAAQF,EAAIC,GAAIF,EAAKA,IAAI,EAAK/B,EAA4B,KAAxB+B,EAAEF,EAAKM,WAAWH,OAC5E,OAAQD,CACT,EA4CAjC,EAAMsC,IA1CN,SAAmBC,EAAGP,GAErB,IADA,IAAIC,GAAID,EAAWG,EAAII,EAAEH,OAAS,GAAIF,EAAI,EACpCA,EAAIC,GAAIF,EACbH,EAAGS,EAAEL,KAAY,IAAJD,GACbJ,EAAGU,EAAEL,KAASD,GAAK,EAAK,KACxBL,EAAGW,EAAEL,KAASD,GAAK,GAAM,KACzBN,EAAGY,EAAEL,KAAQD,IAAM,IACnBP,EAAGa,EAAEL,MAAQT,EAAGc,EAAEL,MAAQV,EAAGe,EAAEL,MAAQX,EAAGgB,EAAEL,MAC5CZ,EAAGiB,EAAEL,MAAQb,EAAGkB,EAAEL,MAAQd,EAAGmB,EAAEL,MAAQf,EAAGoB,EAAEL,MAC5ChB,EAAGqB,EAAEL,MAAQjB,EAAGsB,EAAEL,MAAQlB,EAAGuB,EAAEL,MAAQhC,EAAGqC,EAAEL,MAE7C,IADAC,GAAK,GACCD,EAAIC,GAAGF,EAAKA,IAAI,EAAK/B,EAAc,KAAV+B,EAAEM,EAAEL,OACnC,OAAQD,CACT,EA+BAjC,EAAMwC,IA7BN,SAAmBA,EAAKR,GAEvB,IADA,IAAIC,GAAID,EACAE,EAAI,EAAGC,EAAIK,EAAIJ,OAAQjC,EAAI,EAAGsC,EAAI,EAAGP,EAAIC,IAChDhC,EAAIqC,EAAIH,WAAWH,MACZ,IACND,EAAKA,IAAI,EAAK/B,EAAS,KAAL+B,EAAE9B,IACXA,EAAI,KAEb8B,GADAA,EAAKA,IAAI,EAAK/B,EAA2B,KAAvB+B,GAAK,IAAM9B,GAAG,EAAG,SAC1B,EAAKD,EAAsB,KAAlB+B,GAAK,IAAO,GAAF9B,KACnBA,GAAK,OAAUA,EAAI,OAC5BA,EAAa,IAAN,KAAFA,GAAYsC,EAAwB,KAApBD,EAAIH,WAAWH,KAIpCD,GADAA,GADAA,GADAA,EAAKA,IAAI,EAAK/B,EAA0B,KAAtB+B,GAAK,IAAM9B,GAAG,EAAG,QAC1B,EAAKD,EAA2B,KAAvB+B,GAAK,IAAM9B,GAAG,EAAG,SAC1B,EAAKD,EAAsC,KAAlC+B,GAAK,IAAMQ,GAAG,EAAG,IAAQ,EAAFtC,IAAM,QACtC,EAAKD,EAAsB,KAAlB+B,GAAK,IAAO,GAAFQ,MAI5BR,GADAA,GADAA,EAAKA,IAAI,EAAK/B,EAA4B,KAAxB+B,GAAK,IAAM9B,GAAG,GAAI,SAC3B,EAAKD,EAA2B,KAAvB+B,GAAK,IAAM9B,GAAG,EAAG,SAC1B,EAAKD,EAAsB,KAAlB+B,GAAK,IAAO,GAAF9B,KAG9B,OAAQ8B,CACT,CAQA,EA3GiC,oBAAtBS,kBAERlD,EAAQC,GAWTD,EAAgB,CAAC,yBCpBnBE,EAAOD,QAAUM,6HCCb4C,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAarD,QAGrB,IAAIC,EAASiD,EAAyBE,GAAY,CAGjDpD,QAAS,CAAC,GAOX,OAHAuD,EAAoBH,GAAUnD,EAAQA,EAAOD,QAASmD,GAG/ClD,EAAOD,OACf,CCrBAmD,EAAoBH,EAAI,CAAChD,EAASwD,KACjC,IAAI,IAAIC,KAAOD,EACXL,EAAoBO,EAAEF,EAAYC,KAASN,EAAoBO,EAAE1D,EAASyD,IAC5EE,OAAOC,eAAe5D,EAASyD,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDN,EAAoBO,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFb,EAAoBiB,EAAKpE,IACH,oBAAXqE,QAA0BA,OAAOC,aAC1CX,OAAOC,eAAe5D,EAASqE,OAAOC,YAAa,CAAEC,MAAO,WAE7DZ,OAAOC,eAAe5D,EAAS,aAAc,CAAEuE,OAAO,GAAO,sOCH1DC,yBACJ,SAAWA,GACPA,EAA0C,cAAI,gBAC9CA,EAAyC,aAAI,eAC7CA,EAAkC,MAAI,QACtCA,EAAwC,YAAI,cAC5CA,EAA6C,iBAAI,mBACjDA,EAAyC,aAAI,eAC7CA,EAA8C,kBAAI,oBAClDA,EAAqC,SAAI,WACzCA,EAAqC,SAAI,WACzCA,EAAiD,qBAAI,uBACrDA,EAA8D,kCAAI,oCAClEA,EAA+D,mCAAI,qCACnEA,EAAyD,6BAAI,+BAC7DA,EAAgD,oBAAI,sBACpDA,EAAoD,wBAAI,0BACxDA,EAAgD,oBAAI,sBACpDA,EAA6C,iBAAI,mBACjDA,EAAwD,4BAAI,8BAC5DA,EAAgE,oCAAI,sCACpEA,EAA8D,kCAAI,oCAClEA,EAAyC,aAAI,eAC7CA,EAAkD,sBAAI,wBACtDA,EAA+D,mCAAI,qCACnEA,EAAsD,0BAAI,2BAC7D,CAzBD,CAyBGA,IAA+BA,EAA6B,CAAC,IAChE,MAAMC,EAAqB,CACvB,CAACD,EAA2BE,eAAgB,CACxCC,QAAS,oCAEb,CAACH,EAA2BI,cAAe,CACvCD,QAAS,oFAEb,CAACH,EAA2BK,OAAQ,CAChCF,QAAS,4BAEb,CAACH,EAA2BM,aAAc,CACtCH,QAAS,wCAEb,CAACH,EAA2BO,kBAAmB,CAC3CJ,QAAS,6CAEb,CAACH,EAA2BQ,cAAe,CACvCL,QAAS,yCAEb,CAACH,EAA2BS,mBAAoB,CAC5CN,QAAS,8CAEb,CAACH,EAA2BU,UAAW,CACnCP,QAAS,+CAEb,CAACH,EAA2BW,UAAW,CACnCR,QAAS,0CAEb,CAACH,EAA2BY,6BAA8B,CACtDT,QAAS,kDAEb,CAACH,EAA2Ba,kBAAmB,CAC3CV,QAAS,+CAEb,CAACH,EAA2Bc,qBAAsB,CAC9CX,QAAS,gFAEb,CAACH,EAA2Be,8BAA+B,CACvDZ,QAAS,qGAEb,CAACH,EAA2BgB,qBAAsB,CAC9Cb,QAAS,wCAEb,CAACH,EAA2BiB,oCAAqC,CAC7Dd,QAAS,+DAEb,CAACH,EAA2BkB,yBAA0B,CAClDf,QAAS,oDAEb,CAACH,EAA2BmB,qCAAsC,CAC9DhB,QAAS,4DAEb,CAACH,EAA2BoB,mCAAoC,CAC5DjB,QAAS,2DAEb,CAACH,EAA2BqB,cAAe,CACvClB,QAAS,mBAEb,CAACH,EAA2BsB,sBAAuB,CAC/CnB,QAAS,wEAEb,CAACH,EAA2BuB,mCAAoC,CAC5DpB,QAAS,0DAEb,CAACH,EAA2BwB,uBAAwB,CAChDrB,QAAS,+BAEb,CAACH,EAA2ByB,oCAAqC,CAC7DtB,QAAS,oEAEb,CAACH,EAA2B0B,2BAA4B,CACpDvB,QAAS,0CClGjB,MAAMwB,UAAqBC,MASvB,WAAAC,EAAY,QAAE1B,EAAO,KAAE2B,EAAI,mBAAEC,EAAkB,gBAAEC,IAC7CC,MAAM9B,GACNtE,KAAKiG,KAAOA,EACZjG,KAAKmG,gBAAkBA,EACvBnG,KAAKkG,mBAAqBA,EAG1BlG,KAAKgG,YAAcF,EACnBxC,OAAO+C,eAAerG,KAAM8F,EAAalC,UAC7C,EChBJ,MAAM,UAAqBkC,EACvB,WAAAE,CAAYM,GACRF,MAAME,GAENtG,KAAKgG,YAAc,EACnB1C,OAAO+C,eAAerG,KAAM,EAAa4D,UAC7C,ECLJ,SAAS2C,EAAsBC,EAAWP,GACtC,MAAM,QAAE3B,EAAO,mBAAE4B,GAAuB9B,EAAmB6B,GAC3D,IAAKO,EACD,MAAM,IAAI,EAAa,CAAEP,OAAM3B,UAAS4B,sBAEhD,CCRA,MAAMO,EAA4B,iBAC5BC,EAAuB,QASvBC,EAAoB,QAIpBC,EAAsB,qBACtBC,EAAuB,SACvBC,EAAoB,MACpBC,EAAqB,OAErBC,EAA2B,SCXjC,MAAMC,UAAsB,EACxB,WAAAjB,CAAYM,EAAS,CAAC,GAClBF,MAAM,CACFH,KAAM,gBACN3B,QAAS,gCACNgC,IAGPtG,KAAKgG,YAAciB,EACnB3D,OAAO+C,eAAerG,KAAMiH,EAAcrD,UAC9C,EAQJ,MAAMsD,EAAiBC,KAAYA,GAASA,aAAiBF,ECxBvDG,EAAS,IAAI,EAAAC,cAAc,WCG3BC,EAAwB,EAAGC,MAAKC,eAElC,IAAIC,EACJ,MAAMC,EAAiB,CACnBC,OAASrD,IACL,MAAQsD,MAAOC,GAAcH,EACX,aAAdG,GACc,UAAdA,GACc,YAAdA,GAIJH,EAAeE,MAAQ,WACvBH,EAAuBnD,EACvBkD,EAASC,IALLL,EAAOU,MAAM,wCAAwCD,IAK3B,EAElCD,MAfU,eAiBRG,EAAoB,WACtB,IACI,MAAMC,QAAeT,IAErB,OADAG,EAAeE,MAAQ,UAChBI,CACX,CACA,MAAOC,GAMH,MALIf,EAAce,KACdP,EAAeE,MAAQ,WACvBK,EAAE3D,QAAUmD,GAAwBQ,EAAE3D,SAE1CoD,EAAeE,MAAQ,QACjBK,CACV,CACH,EAdyB,GAe1B,OAAO3E,OAAO4E,OAAOR,EAAgB,CACjCM,OAAQD,GACV,EAEAI,EAAqBb,EACrBc,EAAmB,EAAGb,MAAKC,WAAUa,WAAUC,UAASC,wBAC1D,MAAMC,EAAkBlB,EAAsB,CAC1CC,MACAC,aAEEiB,EAAanF,OAAO4E,OAAOM,EAAiB,CAC9CE,MAAO,KACH,MAAM,MAAEd,GAAUa,EACbF,GAA+B,gBAAVX,GAO1Ba,EAAWb,MAAQ,SACnBU,OAPIlB,EAAOU,MAAM,sCAAsCF,IAO5C,EAEfe,OAAQ,KACJ,MAAM,MAAEf,GAAUa,EACbF,GAA+B,WAAVX,GAO1Ba,EAAWb,MAAQ,cACnBS,OAPIjB,EAAOU,MAAM,uCAAuCF,IAO5C,IAGpB,OAAOa,CAAU,EC1ErB,IAAIG,EAsBAC,EAeAC,EAYAC,EAKAC,EAUAC,EA+BAC,EAKAC,EAWAC,EAMAC,EAIAC,EAMAC,EAIAC,EAKAC,GAvIJ,SAAWb,GAEPA,EAAsB,WAAI,IAC1BA,EAAiB,MAAI,IACrBA,EAAkB,OAAI,IACtBA,EAAmB,QAAI,IACvBA,EAAiB,MAAI,IACrBA,EAAgB,KAAI,IACpBA,EAAkB,OAAI,IAEtBA,EAA6B,kBAAI,MACjCA,EAAoB,SAAI,MACxBA,EAAqB,UAAI,MACzBA,EAAsB,WAAI,MAC1BA,EAAoB,SAAI,MACxBA,EAAmB,QAAI,MACvBA,EAAqB,UAAI,MAEzBA,EAAuB,YAAI,MAC3BA,EAAgB,KAAI,KACvB,CApBD,CAoBGA,IAAcA,EAAY,CAAC,IAE9B,SAAWC,GACPA,EAAa,GAAI,KACjBA,EAAc,IAAI,MAClBA,EAAe,KAAI,OACnBA,EAAoB,UAAI,YACxBA,EAAoB,UAAI,YACxBA,EAAc,IAAI,MAClBA,EAAyB,eAAI,iBAC7BA,EAAuB,aAAI,eAC3BA,EAAsB,YAAI,cAC1BA,EAAiB,OAAI,SACrBA,EAA2B,iBAAI,mBAC/BA,EAAkB,QAAI,SACzB,CAbD,CAaGA,IAAaA,EAAW,CAAC,IAE5B,SAAWC,GACPA,EAA6B,mBAAI,IACjCA,EAA0B,gBAAI,IAC9BA,EAA4B,kBAAI,IAChCA,EAA6B,mBAAI,IACjCA,EAAsB,YAAI,IAC1BA,EAAuB,aAAI,IAC3BA,EAAoB,UAAI,IACxBA,EAAqB,WAAI,IACzBA,EAA6B,mBAAI,GACpC,CAVD,CAUGA,IAAaA,EAAW,CAAC,IAE5B,SAAWC,GACPA,EAAwB,OAAI,IAC5BA,EAA8B,aAAI,GACrC,CAHD,CAGGA,IAAoBA,EAAkB,CAAC,IAE1C,SAAWC,GACPA,EAAmB,QAAI,IACvBA,EAAe,IAAI,IACnBA,EAAgB,KAAI,IACpBA,EAAe,IAAI,IACnBA,EAAiB,MAAI,IACrBA,EAAe,IAAI,IACnBA,EAAgB,KAAI,GACvB,CARD,CAQGA,IAAcA,EAAY,CAAC,IAE9B,SAAWC,GACPA,EAAmB,OAAI,IACvBA,EAA0B,cAAI,IAC9BA,EAA6B,iBAAI,IACjCA,EAAmB,OAAI,IACvBA,EAA+B,mBAAI,IACnCA,EAAgC,oBAAI,IACpCA,EAAsB,UAAI,KAC1BA,EAA4B,gBAAI,KAChCA,EAA0B,cAAI,KAC9BA,EAAiC,qBAAI,KACrCA,EAAuB,WAAI,KAC3BA,EAAiC,qBAAI,KACrCA,EAAgC,oBAAI,KACpCA,EAAiC,qBAAI,KACrCA,EAAoB,QAAI,KACxBA,EAA2B,eAAI,KAC/BA,EAA0B,cAAI,KAC9BA,EAAiC,qBAAI,KACrCA,EAA4B,gBAAI,KAChCA,EAA2B,eAAI,KAC/BA,EAAyB,aAAI,KAC7BA,EAAyB,aAAI,KAC7BA,EAA8C,kCAAI,KAClDA,EAA+B,mBAAI,KACnCA,EAAsC,0BAAI,KAC1CA,EAAyC,6BAAI,KAC7CA,EAAoC,wBAAI,KACxCA,EAAqC,yBAAI,IAC5C,CA7BD,CA6BGA,IAAeA,EAAa,CAAC,IAEhC,SAAWC,GACPA,EAA2B,UAAI,IAC/BA,EAAyB,QAAI,GAChC,CAHD,CAGGA,IAAoBA,EAAkB,CAAC,IAE1C,SAAWC,GACPA,EAAwB,aAAI,IAC5BA,EAA+B,oBAAI,IACnCA,EAAgC,qBAAI,IACpCA,EAA2B,gBAAI,IAC/BA,EAAyB,cAAI,IAC7BA,EAAuB,YAAI,IAC3BA,EAAyB,cAAI,IAC7BA,EAA2B,gBAAI,GAClC,CATD,CASGA,IAAcA,EAAY,CAAC,IAE9B,SAAWC,GACPA,EAAmC,aAAI,IACvCA,EAAmC,aAAI,IACvCA,EAA+C,yBAAI,GACtD,CAJD,CAIGA,IAAyBA,EAAuB,CAAC,IAEpD,SAAWC,GACPA,EAAyB,KAAI,GAChC,CAFD,CAEGA,IAAuBA,EAAqB,CAAC,IAEhD,SAAWC,GACPA,EAA2B,QAAI,IAC/BA,EAA4B,SAAI,IAChCA,EAA6B,UAAI,GACpC,CAJD,CAIGA,IAAsBA,EAAoB,CAAC,IAE9C,SAAWC,GACPA,EAAwB,UAAI,GAC/B,CAFD,CAEGA,IAAiBA,EAAe,CAAC,IAEpC,SAAWC,GACPA,EAAoD,4BAAI,IACxDA,EAAqC,aAAI,GAC5C,CAHD,CAGGA,IAA2BA,EAAyB,CAAC,IAExD,SAAWC,GACPA,EAA0B,WAAI,IAC9BA,EAA4B,aAAI,IAChCA,EAAoB,KAAI,IACxBA,EAAoB,KAAI,IACxBA,EAAsB,OAAI,IAC1BA,EAA6B,cAAI,IACjCA,EAAsB,OAAI,IAC1BA,EAA6B,cAAI,IACjCA,EAAsC,uBAAI,GAC7C,CAVD,CAUGA,IAAkBA,EAAgB,CAAC,ICrJ/B,MCEMC,EAAO,CAAC,WAAY,WAAY,WAAY,WCAlD,MAAMC,EACT,WAAA3D,GACIhG,KAAK4J,OACT,CACA,MAAAC,CAAOC,GACH,GA6IR,SAAqBC,GACjB,MAAoB,iBAATA,EACgB,IAAhBA,EAAKzH,OAEW,IAApByH,EAAKC,UAChB,CAlJYC,CAAYH,GACZ,OAEC,GAAI9J,KAAKkK,SACV,MAAM,IAAInE,MAAM,iDAEpB,MAAMgE,EA6Id,SAAyBA,GACrB,MAAoB,iBAATA,GF3JUI,EE4JDJ,GF5JW,IAAIK,aAAcC,OAAOF,IE8JpDG,YAAYC,OAAOR,GACZ,IAAIS,WAAWT,EAAKU,OAAQV,EAAKW,WAAYX,EAAKC,WAAaQ,WAAWG,mBAE9E,IAAIH,WAAWT,GFjKF,IAACI,CEkKzB,CArJqBS,CAAgBd,GAC7B,IAAIe,EAAW,GACX,WAAEb,GAAeD,EAErB,IADA/J,KAAK8K,aAAed,EACbA,EAAa,GAChBhK,KAAKyK,OAAOM,SAAS/K,KAAKgL,eAAgBjB,EAAKc,MAC/Cb,IDnBc,KCoBVhK,KAAKgL,eACLhL,KAAKiL,aACLjL,KAAKgL,aAAe,EAGhC,CACA,YAAME,GACF,IAAKlL,KAAKkK,SAAU,CAChB,MAAM,OAAEO,EAAQO,aAAcG,EAAiB,YAAEL,GAAgB9K,KAC3DoL,EAA2B,EAAdN,EAEnB,GADAL,EAAOM,SAAS/K,KAAKgL,eAAgB,KACjCG,ED/BU,IC+BwBE,GAAgB,CAClD,IAAK,IAAIjJ,EAAIpC,KAAKgL,aAAc5I,EDhCtB,GCgCsCA,IAC5CqI,EAAOM,SAAS3I,EAAG,GAEvBpC,KAAKiL,aACLjL,KAAKgL,aAAe,CACxB,CACA,IAAK,IAAI5I,EAAIpC,KAAKgL,aAAc5I,EAAIiJ,GAAgBjJ,IAChDqI,EAAOM,SAAS3I,EAAG,GAEvBqI,EAAOa,UAAUD,GAAgBD,IAAe,GAAG,GACnDX,EAAOa,UAAUD,GAAgBE,KAAKC,MAAMJ,EAAa,aAAc,GACvEpL,KAAKiL,aACLjL,KAAKkK,UAAW,CACpB,CACA,MAAMpJ,EAAM,IAAI2K,SAAS,IAAInB,YD7CR,KC8CrB,IAAK,IAAIlI,EAAI,EAAGA,EAAI,EAAGA,IACnBtB,EAAIwK,UAAc,EAAJlJ,EAAOpC,KAAK4H,MAAMxF,IAAI,GAExC,OAAO,IAAIoI,WAAW1J,EAAI2J,OAAQ3J,EAAI4J,WAAY5J,EAAIkJ,WAC1D,CACA,UAAAiB,GACI,MAAM,OAAER,EAAM,MAAE7C,GAAU5H,KAC1B,IAAI0L,EAAI9D,EAAM,GAAI+D,EAAI/D,EAAM,GAAIvH,EAAIuH,EAAM,GAAIjF,EAAIiF,EAAM,GACxD8D,EAAIE,EAAGF,EAAGC,EAAGtL,EAAGsC,EAAG8H,EAAOoB,UAAU,GAAG,GAAO,EAAG,YACjDlJ,EAAIiJ,EAAGjJ,EAAG+I,EAAGC,EAAGtL,EAAGoK,EAAOoB,UAAU,GAAG,GAAO,GAAI,YAClDxL,EAAIuL,EAAGvL,EAAGsC,EAAG+I,EAAGC,EAAGlB,EAAOoB,UAAU,GAAG,GAAO,GAAI,WAClDF,EAAIC,EAAGD,EAAGtL,EAAGsC,EAAG+I,EAAGjB,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDH,EAAIE,EAAGF,EAAGC,EAAGtL,EAAGsC,EAAG8H,EAAOoB,UAAU,IAAI,GAAO,EAAG,YAClDlJ,EAAIiJ,EAAGjJ,EAAG+I,EAAGC,EAAGtL,EAAGoK,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDxL,EAAIuL,EAAGvL,EAAGsC,EAAG+I,EAAGC,EAAGlB,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDF,EAAIC,EAAGD,EAAGtL,EAAGsC,EAAG+I,EAAGjB,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDH,EAAIE,EAAGF,EAAGC,EAAGtL,EAAGsC,EAAG8H,EAAOoB,UAAU,IAAI,GAAO,EAAG,YAClDlJ,EAAIiJ,EAAGjJ,EAAG+I,EAAGC,EAAGtL,EAAGoK,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDxL,EAAIuL,EAAGvL,EAAGsC,EAAG+I,EAAGC,EAAGlB,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDF,EAAIC,EAAGD,EAAGtL,EAAGsC,EAAG+I,EAAGjB,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDH,EAAIE,EAAGF,EAAGC,EAAGtL,EAAGsC,EAAG8H,EAAOoB,UAAU,IAAI,GAAO,EAAG,YAClDlJ,EAAIiJ,EAAGjJ,EAAG+I,EAAGC,EAAGtL,EAAGoK,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDxL,EAAIuL,EAAGvL,EAAGsC,EAAG+I,EAAGC,EAAGlB,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDF,EAAIC,EAAGD,EAAGtL,EAAGsC,EAAG+I,EAAGjB,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDH,EAAII,EAAGJ,EAAGC,EAAGtL,EAAGsC,EAAG8H,EAAOoB,UAAU,GAAG,GAAO,EAAG,YACjDlJ,EAAImJ,EAAGnJ,EAAG+I,EAAGC,EAAGtL,EAAGoK,EAAOoB,UAAU,IAAI,GAAO,EAAG,YAClDxL,EAAIyL,EAAGzL,EAAGsC,EAAG+I,EAAGC,EAAGlB,EAAOoB,UAAU,IAAI,GAAO,GAAI,WACnDF,EAAIG,EAAGH,EAAGtL,EAAGsC,EAAG+I,EAAGjB,EAAOoB,UAAU,GAAG,GAAO,GAAI,YAClDH,EAAII,EAAGJ,EAAGC,EAAGtL,EAAGsC,EAAG8H,EAAOoB,UAAU,IAAI,GAAO,EAAG,YAClDlJ,EAAImJ,EAAGnJ,EAAG+I,EAAGC,EAAGtL,EAAGoK,EAAOoB,UAAU,IAAI,GAAO,EAAG,UAClDxL,EAAIyL,EAAGzL,EAAGsC,EAAG+I,EAAGC,EAAGlB,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDF,EAAIG,EAAGH,EAAGtL,EAAGsC,EAAG+I,EAAGjB,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDH,EAAII,EAAGJ,EAAGC,EAAGtL,EAAGsC,EAAG8H,EAAOoB,UAAU,IAAI,GAAO,EAAG,WAClDlJ,EAAImJ,EAAGnJ,EAAG+I,EAAGC,EAAGtL,EAAGoK,EAAOoB,UAAU,IAAI,GAAO,EAAG,YAClDxL,EAAIyL,EAAGzL,EAAGsC,EAAG+I,EAAGC,EAAGlB,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDF,EAAIG,EAAGH,EAAGtL,EAAGsC,EAAG+I,EAAGjB,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDH,EAAII,EAAGJ,EAAGC,EAAGtL,EAAGsC,EAAG8H,EAAOoB,UAAU,IAAI,GAAO,EAAG,YAClDlJ,EAAImJ,EAAGnJ,EAAG+I,EAAGC,EAAGtL,EAAGoK,EAAOoB,UAAU,GAAG,GAAO,EAAG,YACjDxL,EAAIyL,EAAGzL,EAAGsC,EAAG+I,EAAGC,EAAGlB,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDF,EAAIG,EAAGH,EAAGtL,EAAGsC,EAAG+I,EAAGjB,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDH,EAAIK,EAAGL,EAAGC,EAAGtL,EAAGsC,EAAG8H,EAAOoB,UAAU,IAAI,GAAO,EAAG,YAClDlJ,EAAIoJ,EAAGpJ,EAAG+I,EAAGC,EAAGtL,EAAGoK,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDxL,EAAI0L,EAAG1L,EAAGsC,EAAG+I,EAAGC,EAAGlB,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDF,EAAII,EAAGJ,EAAGtL,EAAGsC,EAAG+I,EAAGjB,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDH,EAAIK,EAAGL,EAAGC,EAAGtL,EAAGsC,EAAG8H,EAAOoB,UAAU,GAAG,GAAO,EAAG,YACjDlJ,EAAIoJ,EAAGpJ,EAAG+I,EAAGC,EAAGtL,EAAGoK,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDxL,EAAI0L,EAAG1L,EAAGsC,EAAG+I,EAAGC,EAAGlB,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDF,EAAII,EAAGJ,EAAGtL,EAAGsC,EAAG+I,EAAGjB,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDH,EAAIK,EAAGL,EAAGC,EAAGtL,EAAGsC,EAAG8H,EAAOoB,UAAU,IAAI,GAAO,EAAG,WAClDlJ,EAAIoJ,EAAGpJ,EAAG+I,EAAGC,EAAGtL,EAAGoK,EAAOoB,UAAU,GAAG,GAAO,GAAI,YAClDxL,EAAI0L,EAAG1L,EAAGsC,EAAG+I,EAAGC,EAAGlB,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDF,EAAII,EAAGJ,EAAGtL,EAAGsC,EAAG+I,EAAGjB,EAAOoB,UAAU,IAAI,GAAO,GAAI,UACnDH,EAAIK,EAAGL,EAAGC,EAAGtL,EAAGsC,EAAG8H,EAAOoB,UAAU,IAAI,GAAO,EAAG,YAClDlJ,EAAIoJ,EAAGpJ,EAAG+I,EAAGC,EAAGtL,EAAGoK,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDxL,EAAI0L,EAAG1L,EAAGsC,EAAG+I,EAAGC,EAAGlB,EAAOoB,UAAU,IAAI,GAAO,GAAI,WACnDF,EAAII,EAAGJ,EAAGtL,EAAGsC,EAAG+I,EAAGjB,EAAOoB,UAAU,GAAG,GAAO,GAAI,YAClDH,EAAIM,EAAGN,EAAGC,EAAGtL,EAAGsC,EAAG8H,EAAOoB,UAAU,GAAG,GAAO,EAAG,YACjDlJ,EAAIqJ,EAAGrJ,EAAG+I,EAAGC,EAAGtL,EAAGoK,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDxL,EAAI2L,EAAG3L,EAAGsC,EAAG+I,EAAGC,EAAGlB,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDF,EAAIK,EAAGL,EAAGtL,EAAGsC,EAAG+I,EAAGjB,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDH,EAAIM,EAAGN,EAAGC,EAAGtL,EAAGsC,EAAG8H,EAAOoB,UAAU,IAAI,GAAO,EAAG,YAClDlJ,EAAIqJ,EAAGrJ,EAAG+I,EAAGC,EAAGtL,EAAGoK,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDxL,EAAI2L,EAAG3L,EAAGsC,EAAG+I,EAAGC,EAAGlB,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDF,EAAIK,EAAGL,EAAGtL,EAAGsC,EAAG+I,EAAGjB,EAAOoB,UAAU,GAAG,GAAO,GAAI,YAClDH,EAAIM,EAAGN,EAAGC,EAAGtL,EAAGsC,EAAG8H,EAAOoB,UAAU,IAAI,GAAO,EAAG,YAClDlJ,EAAIqJ,EAAGrJ,EAAG+I,EAAGC,EAAGtL,EAAGoK,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDxL,EAAI2L,EAAG3L,EAAGsC,EAAG+I,EAAGC,EAAGlB,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDF,EAAIK,EAAGL,EAAGtL,EAAGsC,EAAG+I,EAAGjB,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDH,EAAIM,EAAGN,EAAGC,EAAGtL,EAAGsC,EAAG8H,EAAOoB,UAAU,IAAI,GAAO,EAAG,YAClDlJ,EAAIqJ,EAAGrJ,EAAG+I,EAAGC,EAAGtL,EAAGoK,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDxL,EAAI2L,EAAG3L,EAAGsC,EAAG+I,EAAGC,EAAGlB,EAAOoB,UAAU,GAAG,GAAO,GAAI,WAClDF,EAAIK,EAAGL,EAAGtL,EAAGsC,EAAG+I,EAAGjB,EAAOoB,UAAU,IAAI,GAAO,GAAI,YACnDjE,EAAM,GAAM8D,EAAI9D,EAAM,GAAM,WAC5BA,EAAM,GAAM+D,EAAI/D,EAAM,GAAM,WAC5BA,EAAM,GAAMvH,EAAIuH,EAAM,GAAM,WAC5BA,EAAM,GAAMjF,EAAIiF,EAAM,GAAM,UAChC,CACA,KAAAgC,GACI5J,KAAK4H,MAAQqE,YAAYC,KAAKxC,GAC9B1J,KAAKyK,OAAS,IAAIgB,SAAS,IAAInB,YD9Hb,KC+HlBtK,KAAKgL,aAAe,EACpBhL,KAAK8K,YAAc,EACnB9K,KAAKkK,UAAW,CACpB,EAEJ,SAASiC,EAAIC,EAAGV,EAAGC,EAAGU,EAAGC,EAAGC,GAExB,QADAb,GAAOA,EAAIU,EAAK,aAAgBC,EAAIE,EAAK,YAAe,aACzCD,EAAMZ,IAAO,GAAKY,GAAOX,EAAK,UACjD,CACA,SAASC,EAAGF,EAAGC,EAAGtL,EAAGsC,EAAG0J,EAAGC,EAAGC,GAC1B,OAAOJ,EAAKR,EAAItL,GAAOsL,EAAIhJ,EAAI+I,EAAGC,EAAGU,EAAGC,EAAGC,EAC/C,CACA,SAAST,EAAGJ,EAAGC,EAAGtL,EAAGsC,EAAG0J,EAAGC,EAAGC,GAC1B,OAAOJ,EAAKR,EAAIhJ,EAAMtC,GAAKsC,EAAI+I,EAAGC,EAAGU,EAAGC,EAAGC,EAC/C,CACA,SAASR,EAAGL,EAAGC,EAAGtL,EAAGsC,EAAG0J,EAAGC,EAAGC,GAC1B,OAAOJ,EAAIR,EAAItL,EAAIsC,EAAG+I,EAAGC,EAAGU,EAAGC,EAAGC,EACtC,CACA,SAASP,EAAGN,EAAGC,EAAGtL,EAAGsC,EAAG0J,EAAGC,EAAGC,GAC1B,OAAOJ,EAAI9L,GAAKsL,GAAKhJ,GAAI+I,EAAGC,EAAGU,EAAGC,EAAGC,EACzC,CC7IA,SAASC,EAASrC,GACd,OALJ,SAAuBsC,GACnB,MAAMC,EAAYnM,MAAM2L,KAAKO,GAAOJ,GAAKM,OAAOC,cAAcP,KAAIQ,KAAK,IACvE,OAAOC,KAAKJ,EAChB,CAGeK,CADU,iBAAV5C,GACc,IAAIC,aAAcC,OAAOF,GAE7B,IAAIK,WAAWL,EAAMM,OAAQN,EAAMO,WAAYP,EAAMH,YAC9E,QCTA,MAAMgD,EAAYC,GAAS,IAAIC,SAAQ,CAACC,EAASC,KAC7C,MAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,KACZJ,EAAQE,EAAOrF,OAAO,EAE1BqF,EAAOG,QAAU,KACbJ,EAAO,IAAIrH,MAAM,gBAAgB,EAErCsH,EAAOI,QAAU,KACbL,EAAOC,EAAOlG,MAAM,EAExBkG,EAAOK,kBAAkBT,EAAK,ICF5BU,EAAsBC,MAAOC,IAC/B,MAAMC,EAAS,IAAInE,EACbc,EAASoD,aAAmBE,WAAaf,EAASa,GAAWA,EAGnE,OAFAC,EAAOjE,OAAOY,GAEP+B,QADcsB,EAAO5C,SACL,ECXrB8C,EAAgB,EAAGC,cAAaC,sBACd,YAAhBD,GACA1H,IAAwB2H,EAAkB/J,EAA2BI,cAC9D,WAAW2J,MAEG,cAAhBD,GACL1H,IAAwB2H,EAAkB/J,EAA2BI,cAC9D,aAAa2J,MAGb,UCKTC,EAA0BP,MAAOQ,EAASC,KAC5C,MAAQC,QAASC,GAAeF,GAAY,CAAC,GAKvC,WAAEG,SAAqBJ,EAAQK,KAAKC,oBAuBlCC,OAAQC,EAAeC,OAAQC,EAAa,2CAAEC,EAA0C,QAAEC,GAAaZ,EAAQa,aAAaC,SAASC,IAAM,CAAC,GAC9I,OAAER,EAASC,EAAa,OAAEC,EAASC,GAAmBP,GAAYI,QAAUS,EAAoBb,EAAYS,IAAa,CAAC,EAChIzI,IAAwBoI,EAAQxK,EAA2BU,UAC3D0B,IAAwBsI,EAAQ1K,EAA2BW,UAC3D,MAAM,mBAAEuK,EAAkB,eAAEC,EAAiBtB,EAAa,oBAAEuB,GAAyBnB,EAAQoB,gBAAgBN,SAASC,IAAM,CAAC,EACvHlB,EAAcM,GAAYN,aAAeoB,GAAsB3I,EAC/DwH,EAAmC,cAAhBD,EAClBM,GAAYL,kBAAoBM,EACjCA,EACAiB,QAAkBH,EAAe,CAAErB,cAAaC,qBACtD,MAAO,CACHwB,SAAU,CACNC,YAzBoB/B,MAAOU,IAC3BsB,EAA8BrB,IAC9BsB,EAAmBxB,GAKvB,MAAM,YAAEsB,GAAgBC,EAA8BrB,SAC1CA,EAAWuB,4BAA4BxB,SACvCF,EAAQK,KAAKC,mBAEzB,OADAnI,IAAwBoJ,EAAaxL,EAA2BE,eACzDsL,CAAW,EAedd,SACAkB,sBAAuBxB,GAAYwB,yBAC/BxB,GAAYyB,eACV,CAAEA,eAAgBzB,EAAWyB,gBAC7B,CAAC,KACHjB,EACE,CACEiB,eAAgBvJ,EAChBwJ,gBAAgB,GAElB,CAAC,GAEXtB,SACAc,YACAjB,aACAe,sBACH,EAECK,EAAiCtB,KAC1BA,GAASwB,4BAehBD,EAAsB1F,IACxB,GANsB,CAACA,GACf+F,EAAe/F,IACnBgG,EAAkBhG,IAClBiG,EAAmCjG,GAGnCkG,CAAkBlG,IAdM,CAACA,GACpBA,GAAOmG,MACU,mBAAfnG,EAAMmG,MACZnG,GAAOoG,aAAaD,MACkB,mBAA5BnG,EAAMoG,aAAaD,MAC7BnG,GAAOqG,QAAQF,MACkB,mBAAvBnG,EAAMqG,QAAQF,KAQGG,CAAwBtG,GACpD,MAAM,IAAI,EAAa,CACnBlE,KCjGkB,sBDkGlB3B,QAAS,oDACT4B,mBAAoB,gEAE5B,EAEEgK,EAAkB/F,KACW,iBAAdA,EAAM/G,KAErB+M,EAAqBhG,KACW,iBAAjBA,EAAMuG,QAErBN,EAAsCjG,KACD,iBAAtBA,EAAMqG,QAAQpN,KACO,iBAA3B+G,EAAMoG,aAAanN,KAE5BgM,EAAsB,CAACb,EAAYS,KACrC,GAAiC,iBAAtBT,EAAWI,OAAqB,CACvC,MAAMgC,EAAe3B,IAAUT,EAAWI,QAE1C,OADApI,IAAwBoK,EAAcxM,EAA2BsB,sBAC1D,CAAEkJ,OAAQgC,EAAaC,WAAY/B,OAAQ8B,EAAa9B,OACnE,CACA,GAAiC,iBAAtBN,EAAWI,OAClB,MAAO,CACHA,OAAQJ,EAAWI,OAAOiC,WAC1B/B,OAAQN,EAAWI,OAAOE,OAElC,EEzHEgC,GAA+B,UAC/BC,GAAyBC,SACT9N,IAAd8N,GAGJxK,EAAsBsK,GAA6BG,KAAKD,GAAY5M,EAA2BgB,oBAAoB,ECRjH8L,GAAmB9G,QACClH,IAAfkH,EAAMmG,KCEXY,GAAqB1C,IACvBjI,IAAwBiI,EAAYrK,EAA2BI,cACxDiK,GCCL2C,GAAgC,CAAChH,EAAOqE,KAM1C,GALAjI,IAEG4D,EAAM/G,MAAQ+G,EAAMmG,OAEjBnG,EAAM/G,OAAS+G,EAAMmG,KAAOnM,EAA2Be,8BACzD+L,GAAgB9G,GAAQ,CACxB,MAAM,KAAEmG,GAASnG,EACXiH,EAA4B,iBAATd,EACnBA,EACAA,EAAK,CAAE9B,WAAY0C,GAAkB1C,KAE3C,OADAjI,GAAuB6K,EAAUC,WAAW,KAAMlN,EAA2BkB,yBACtE,CACHiM,UAAWvK,EACXqK,YAER,CAEI,MAAO,CAAEE,UAAWxK,EAAmBsK,UAAWjH,EAAM/G,IAC5D,ECzBEmO,GAAiBC,IACnB,MAAM,QAAEC,EAAO,WAAEC,GAAeF,EAChC,MAAO,IACCG,GAAiBH,GAAYA,EAASI,UAAY,CAAC,EACvDC,eAAgBH,EAChBI,UAAWL,EAAQ,qBACfA,EAAQ,sBACRA,EAAQ,oBACZM,kBAAmBN,EAAQ,cAC3BO,KAAMP,EAAQ,eACjB,EAECE,GAAoBH,GAA4C,iBAAxBA,GAAUI,UCZlDK,GAAaC,IACbC,GAAyBC,gBCmCzBC,GAAoB,CAACC,EAAiBC,EAAYC,EAAcC,IAC3D7E,MAAO8E,EAAQvI,KAClB,MAAMwI,EAAiB,IAChBF,KACAC,GAIDE,QAAiBD,EAAeE,iBAAiBF,EAAgBxI,GAIjE2I,QAAgBP,EAAWpI,EAAOyI,GAClCpB,QAAiBc,EAAgBQ,EAAS,IACzCH,IAEP,OAAOH,EAAahB,EAAS,ECS/BuB,GAAmB,CAACC,EAAWC,KACjC,GAAIA,GAAaC,QACb,OAAOhG,QAAQC,UAEnB,IAAIgG,EACAC,EACJ,MAAMC,EAAe,IAAInG,SAAQC,IAC7BiG,EAAwBjG,EACxBgG,EAAYG,WAAWnG,EAAS6F,EAAU,IAO9C,OALAC,GAAaM,iBAAiB,SAAS,SAASC,EAAYC,GACxDC,aAAaP,GACbF,GAAaU,oBAAoB,QAASH,GAC1CJ,GACJ,IACOC,CAAY,EAEjBO,GAAiC,CAACC,EAAmBC,KACG,oBAAtDxQ,OAAOM,UAAUmQ,SAASjQ,KAAK+P,KAGnCA,EAAkBjC,UAAY,IACtBiC,EAAkBjC,WAAa,CAAC,EACpCkC,YACH,EC5ECE,GAAoBvC,GAAYnO,OAAO2Q,KAAKxC,GAC7CyC,KAAI9Q,GAAOA,EAAI+Q,gBACfC,OACAvH,KAAK,KCXJwH,GAAwB,kBACxBC,GAAuB,aACvBC,GAAyB,mBACzBC,GAAsB,gBAGtBC,GAA6B,sBAC7BC,GAAoB,uBAGpBC,GAAc,OACdC,GAAkBN,GAAqBH,cACvCU,GAAeH,GAAkBP,cAEjCW,GAAsB,eACtBC,GAA8B,mBAG9BC,GAAa,mECRbC,GAAmB,EAAGtF,cAAauF,cAAc,IAAIC,KAAQC,gBAAeC,iBAAgBC,iBAAgB,MAE9G,MAAM,YAAEC,EAAW,gBAAEC,EAAe,aAAEC,GAAiB9F,GAEjD,SAAE+F,EAAQ,UAAEC,GCLI,CAACC,IACvB,MAAMF,EAAWE,EAAKC,cAAcC,QAAQ,gBAAiB,IAC7D,MAAO,CACHJ,WACAC,UAAWD,EAAS1U,MAAM,EAAG,GAChC,EDA+B+U,CAAkBb,GAGlD,MAAO,CACHK,cACAS,gBEP8C,GFIPL,KAAWP,KAAeC,KEJaP,KFQ9EY,WACAF,kBACAC,eACAE,YACAP,gBACAC,iBACAC,gBACH,EG0HwBhS,OAAO2S,OA2GX3S,OAAO2S,OA2DkB,mBAApBC,iBAAiCA,gBC3TxD,IAAI,GAAa,GAQbC,GAAM,IAAIlK,YAAY,CAC7B,WACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,aAKO,GAAO,CACd,WACA,WACA,WACA,WACA,WACA,WACA,UACA,YAKOmK,GAAsB7K,KAAK8K,IAAI,EAAG,IAAM,ECzF/CC,GAA2B,WAC3B,SAASA,IACLtW,KAAK4H,MAAQnH,WAAWyL,KAAK,IAC7BlM,KAAKuW,KAAO,IAAI9V,WAAW,IAC3BT,KAAKyK,OAAS,IAAID,WAAW,IAC7BxK,KAAKgL,aAAe,EACpBhL,KAAK8K,YAAc,EAInB9K,KAAKkK,UAAW,CACpB,CAsGA,OArGAoM,EAAU1S,UAAUiG,OAAS,SAAUE,GACnC,GAAI/J,KAAKkK,SACL,MAAM,IAAInE,MAAM,iDAEpB,IAAI8E,EAAW,EACXb,EAAaD,EAAKC,WAEtB,GADAhK,KAAK8K,aAAed,EACG,EAAnBhK,KAAK8K,YAAkBsL,GACvB,MAAM,IAAIrQ,MAAM,uCAEpB,KAAOiE,EAAa,GAChBhK,KAAKyK,OAAOzK,KAAKgL,gBAAkBjB,EAAKc,KACxCb,IACIhK,KAAKgL,eAAiB,KACtBhL,KAAKiL,aACLjL,KAAKgL,aAAe,EAGhC,EACAsL,EAAU1S,UAAUsH,OAAS,WACzB,IAAKlL,KAAKkK,SAAU,CAChB,IAAIkB,EAAgC,EAAnBpL,KAAK8K,YAClB0L,EAAa,IAAI/K,SAASzL,KAAKyK,OAAOA,OAAQzK,KAAKyK,OAAOC,WAAY1K,KAAKyK,OAAOT,YAClFmB,EAAoBnL,KAAKgL,aAG7B,GAFAwL,EAAWzL,SAAS/K,KAAKgL,eAAgB,KAErCG,EAAoB,IAAc,GAAgB,CAClD,IAAK,IAAI/I,EAAIpC,KAAKgL,aAAc5I,EAAI,GAAYA,IAC5CoU,EAAWzL,SAAS3I,EAAG,GAE3BpC,KAAKiL,aACLjL,KAAKgL,aAAe,CACxB,CACA,IAAS5I,EAAIpC,KAAKgL,aAAc5I,EAAI,GAAgBA,IAChDoU,EAAWzL,SAAS3I,EAAG,GAE3BoU,EAAWlL,UAAU,GAAgBC,KAAKC,MAAMJ,EAAa,aAAc,GAC3EoL,EAAWlL,UAAU,GAAgBF,GACrCpL,KAAKiL,aACLjL,KAAKkK,UAAW,CACpB,CAGA,IAAIpJ,EAAM,IAAI0J,WDpDK,ICqDnB,IAASpI,EAAI,EAAGA,EAAI,EAAGA,IACnBtB,EAAQ,EAAJsB,GAAUpC,KAAK4H,MAAMxF,KAAO,GAAM,IACtCtB,EAAQ,EAAJsB,EAAQ,GAAMpC,KAAK4H,MAAMxF,KAAO,GAAM,IAC1CtB,EAAQ,EAAJsB,EAAQ,GAAMpC,KAAK4H,MAAMxF,KAAO,EAAK,IACzCtB,EAAQ,EAAJsB,EAAQ,GAAMpC,KAAK4H,MAAMxF,KAAO,EAAK,IAE7C,OAAOtB,CACX,EACAwV,EAAU1S,UAAUqH,WAAa,WAG7B,IAFA,IAAeR,EAANzK,KAAkByK,OAAQ7C,EAA1B5H,KAAqC4H,MAC1C6O,EAAS7O,EAAM,GAAI8O,EAAS9O,EAAM,GAAI+O,EAAS/O,EAAM,GAAIgP,EAAShP,EAAM,GAAIiP,EAASjP,EAAM,GAAIkP,EAASlP,EAAM,GAAImP,EAASnP,EAAM,GAAIoP,EAASpP,EAAM,GAC/IxF,EAAI,EAAGA,EAAI,GAAYA,IAAK,CACjC,GAAIA,EAAI,GACJpC,KAAKuW,KAAKnU,IACY,IAAhBqI,EAAW,EAAJrI,KAAkB,IACD,IAApBqI,EAAW,EAAJrI,EAAQ,KAAc,IACT,IAApBqI,EAAW,EAAJrI,EAAQ,KAAc,EACV,IAApBqI,EAAW,EAAJrI,EAAQ,OAEvB,CACD,IAAI6U,EAAIjX,KAAKuW,KAAKnU,EAAI,GAClB8U,GAASD,IAAM,GAAOA,GAAK,KAASA,IAAM,GAAOA,GAAK,IAAQA,IAAM,GAEpEE,IADJF,EAAIjX,KAAKuW,KAAKnU,EAAI,OACC,EAAM6U,GAAK,KAASA,IAAM,GAAOA,GAAK,IAAQA,IAAM,EACvEjX,KAAKuW,KAAKnU,IACJ8U,EAAOlX,KAAKuW,KAAKnU,EAAI,GAAM,IAAO+U,EAAOnX,KAAKuW,KAAKnU,EAAI,IAAO,EACxE,CACA,IAAIgV,KAAWP,IAAW,EAAMA,GAAU,KACpCA,IAAW,GAAOA,GAAU,KAC5BA,IAAW,GAAOA,GAAU,KAC5BA,EAASC,GAAYD,EAASE,GAChC,IACEC,GAAWb,GAAI/T,GAAKpC,KAAKuW,KAAKnU,GAAM,GAAM,GAC5C,EACAiV,IAASZ,IAAW,EAAMA,GAAU,KAClCA,IAAW,GAAOA,GAAU,KAC5BA,IAAW,GAAOA,GAAU,MAC5BA,EAASC,EAAWD,EAASE,EAAWD,EAASC,GACnD,EACJK,EAASD,EACTA,EAASD,EACTA,EAASD,EACTA,EAAUD,EAASQ,EAAM,EACzBR,EAASD,EACTA,EAASD,EACTA,EAASD,EACTA,EAAUW,EAAKC,EAAM,CACzB,CACAzP,EAAM,IAAM6O,EACZ7O,EAAM,IAAM8O,EACZ9O,EAAM,IAAM+O,EACZ/O,EAAM,IAAMgP,EACZhP,EAAM,IAAMiP,EACZjP,EAAM,IAAMkP,EACZlP,EAAM,IAAMmP,EACZnP,EAAM,IAAMoP,CAChB,EACOV,CACX,CAlH8B,GCA1B,GAA6B,oBAAXgB,QAA0BA,OAAOpL,KACjD,SAAU/B,GAAS,OAAOmN,OAAOpL,KAAK/B,EAAO,OAAS,ECLnCA,IAAU,IAAIC,aAAcC,OAAOF,GDOrD,SAAS,GAAgBJ,GAE5B,OAAIA,aAAgBS,WACTT,EACS,iBAATA,EACA,GAASA,GAEhBO,YAAYC,OAAOR,GACZ,IAAIS,WAAWT,EAAKU,OAAQV,EAAKW,WAAYX,EAAKC,WAAaQ,WAAWG,mBAE9E,IAAIH,WAAWT,EAC1B,CEdA,IAAIwN,GAAwB,WACxB,SAASA,EAAOC,GACZxX,KAAKwX,OAASA,EACdxX,KAAKyX,KAAO,IAAInB,GAChBtW,KAAK4J,OACT,CA0DA,OAzDA2N,EAAO3T,UAAUiG,OAAS,SAAU6N,GCRjC,IAAqB3N,EDSpB,ICRgB,iBADIA,EDSJ2N,GCPO,IAAhB3N,EAAKzH,OAEW,IAApByH,EAAKC,cDKmBhK,KAAKmH,MAGhC,IACInH,KAAKyX,KAAK5N,OAAO,GAAgB6N,GACrC,CACA,MAAOzP,GACHjI,KAAKmH,MAAQc,CACjB,CACJ,EAIAsP,EAAO3T,UAAU+T,WAAa,WAC1B,GAAI3X,KAAKmH,MACL,MAAMnH,KAAKmH,MAEf,OAAInH,KAAK4X,OACA5X,KAAK4X,MAAM1N,UACZlK,KAAK4X,MAAM/N,OAAO7J,KAAKyX,KAAKvM,UAEzBlL,KAAK4X,MAAM1M,UAEflL,KAAKyX,KAAKvM,QACrB,EAMAqM,EAAO3T,UAAUsH,OAAS,WACtB,OLwEkB2M,EKxED7X,KLwEU8X,OKxEJ,ELwEmBC,EKxEH,WACnC,OLiFL,SAAqBF,EAASG,GACnC,IAAsGC,EAAGC,EAAG3L,EAAxGkH,EAAI,CAAE0E,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAP7L,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,EAAI,EAAG8L,KAAM,GAAIC,IAAK,IAAeC,EAAIjV,OAAO2S,QAA4B,mBAAbuC,SAA0BA,SAAWlV,QAAQM,WACtL,OAAO2U,EAAEE,KAAOC,EAAK,GAAIH,EAAS,MAAIG,EAAK,GAAIH,EAAU,OAAIG,EAAK,GAAsB,mBAAX1U,SAA0BuU,EAAEvU,OAAO2U,UAAY,WAAa,OAAO3Y,IAAM,GAAIuY,EAC1J,SAASG,EAAKlY,GAAK,OAAO,SAAUK,GAAK,OACzC,SAAc+X,GACV,GAAIX,EAAG,MAAM,IAAIY,UAAU,mCAC3B,KAAON,IAAMA,EAAI,EAAGK,EAAG,KAAOnF,EAAI,IAAKA,OACnC,GAAIwE,EAAI,EAAGC,IAAM3L,EAAY,EAARqM,EAAG,GAASV,EAAU,OAAIU,EAAG,GAAKV,EAAS,SAAO3L,EAAI2L,EAAU,SAAM3L,EAAEzI,KAAKoU,GAAI,GAAKA,EAAEO,SAAWlM,EAAIA,EAAEzI,KAAKoU,EAAGU,EAAG,KAAKE,KAAM,OAAOvM,EAE3J,OADI2L,EAAI,EAAG3L,IAAGqM,EAAK,CAAS,EAARA,EAAG,GAAQrM,EAAErI,QACzB0U,EAAG,IACP,KAAK,EAAG,KAAK,EAAGrM,EAAIqM,EAAI,MACxB,KAAK,EAAc,OAAXnF,EAAE0E,QAAgB,CAAEjU,MAAO0U,EAAG,GAAIE,MAAM,GAChD,KAAK,EAAGrF,EAAE0E,QAASD,EAAIU,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKnF,EAAE6E,IAAIS,MAAOtF,EAAE4E,KAAKU,MAAO,SACxC,QACI,MAAkBxM,GAAZA,EAAIkH,EAAE4E,MAAY/V,OAAS,GAAKiK,EAAEA,EAAEjK,OAAS,KAAkB,IAAVsW,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEnF,EAAI,EAAG,QAAU,CAC3G,GAAc,IAAVmF,EAAG,MAAcrM,GAAMqM,EAAG,GAAKrM,EAAE,IAAMqM,EAAG,GAAKrM,EAAE,IAAM,CAAEkH,EAAE0E,MAAQS,EAAG,GAAI,KAAO,CACrF,GAAc,IAAVA,EAAG,IAAYnF,EAAE0E,MAAQ5L,EAAE,GAAI,CAAEkH,EAAE0E,MAAQ5L,EAAE,GAAIA,EAAIqM,EAAI,KAAO,CACpE,GAAIrM,GAAKkH,EAAE0E,MAAQ5L,EAAE,GAAI,CAAEkH,EAAE0E,MAAQ5L,EAAE,GAAIkH,EAAE6E,IAAIU,KAAKJ,GAAK,KAAO,CAC9DrM,EAAE,IAAIkH,EAAE6E,IAAIS,MAChBtF,EAAE4E,KAAKU,MAAO,SAEtBH,EAAKZ,EAAKlU,KAAK+T,EAASpE,EAC5B,CAAE,MAAOxL,GAAK2Q,EAAK,CAAC,EAAG3Q,GAAIiQ,EAAI,CAAG,CAAE,QAAUD,EAAI1L,EAAI,CAAG,CACzD,GAAY,EAARqM,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAE1U,MAAO0U,EAAG,GAAKA,EAAG,QAAK,EAAQE,MAAM,EAC9E,CAtBgDG,CAAK,CAACzY,EAAGK,GAAK,CAAG,CAuBnE,CK3GmBqY,CAAYlZ,MAAM,SAAUmZ,GAC/B,MAAO,CAAC,EAAcnZ,KAAK2X,aAC/B,GACJ,ELsEC,KAFsCyB,OKxER,KL0EnBA,EAAIlM,WAAU,SAAUC,EAASC,GAC/C,SAASiM,EAAUnV,GAAS,IAAM+U,EAAKlB,EAAUU,KAAKvU,GAAS,CAAE,MAAO+D,GAAKmF,EAAOnF,EAAI,CAAE,CAC1F,SAASqR,EAASpV,GAAS,IAAM+U,EAAKlB,EAAiB,MAAE7T,GAAS,CAAE,MAAO+D,GAAKmF,EAAOnF,EAAI,CAAE,CAC7F,SAASgR,EAAKjR,GAJlB,IAAe9D,EAIa8D,EAAO8Q,KAAO3L,EAAQnF,EAAO9D,QAJ1CA,EAIyD8D,EAAO9D,MAJhDA,aAAiBkV,EAAIlV,EAAQ,IAAIkV,GAAE,SAAUjM,GAAWA,EAAQjJ,EAAQ,KAIjBqV,KAAKF,EAAWC,EAAW,CAC7GL,GAAMlB,EAAYA,EAAUyB,MAAM3B,EAASC,GAAc,KAAKW,OAClE,IAPK,IAAmBZ,EAASC,EAAYsB,EAAGrB,CKnE9C,EACAR,EAAO3T,UAAUgG,MAAQ,WAErB,GADA5J,KAAKyX,KAAO,IAAInB,GACZtW,KAAKwX,OAAQ,CACbxX,KAAK4X,MAAQ,IAAItB,GACjB,IAAImD,EAkBhB,SAA0BjC,GACtB,IAAIrN,EAAQ,GAAgBqN,GAC5B,GAAIrN,EAAMH,WAAa,GAAY,CAC/B,IAAI0P,EAAa,IAAIpD,GACrBoD,EAAW7P,OAAOM,GAClBA,EAAQuP,EAAWxO,QACvB,CACA,IAAIT,EAAS,IAAID,WAAW,IAE5B,OADAC,EAAOkP,IAAIxP,GACJM,CACX,CA5BwBmP,CAAiB5Z,KAAKwX,QAC9BI,EAAQ,IAAIpN,WAAW,IAC3BoN,EAAM+B,IAAIF,GACV,IAAK,IAAIrX,EAAI,EAAGA,EAAI,GAAYA,IAC5BqX,EAAMrX,IAAM,GACZwV,EAAMxV,IAAM,GAKhB,IAHApC,KAAKyX,KAAK5N,OAAO4P,GACjBzZ,KAAK4X,MAAM/N,OAAO+N,GAETxV,EAAI,EAAGA,EAAIqX,EAAMzP,WAAY5H,IAClCqX,EAAMrX,GAAK,CAEnB,CACJ,EACOmV,CACX,CAhE2B,GEJ3B,MAAMsC,GAAe,CAAC,EAChBC,GAAe,CAAC,EACtB,IAAK,IAAI1X,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC1B,IAAI2X,EAAc3X,EAAE2R,SAAS,IAAII,cACN,IAAvB4F,EAAYzX,SACZyX,EAAc,IAAIA,KAEtBF,GAAazX,GAAK2X,EAClBD,GAAaC,GAAe3X,CAChC,CCIA,MAAM4X,GAAgB,CAAC5W,EAAK2G,KACxB,MAAMkQ,EAAS,IAAI1C,GAAOnU,QAAOH,GAIjC,OAHAgX,EAAOpQ,OAAOE,GAEKkQ,EAAOtC,YACT,EAWfuC,GAAqB,CAAC9W,EAAK2G,IDH1B,SAAe0C,GAClB,IAAI3L,EAAM,GACV,IAAK,IAAIsB,EAAI,EAAGA,EAAIqK,EAAMzC,WAAY5H,IAClCtB,GAAO+Y,GAAapN,EAAMrK,IAE9B,OAAOtB,CACX,CCDWqZ,CADYH,GAAc5W,EAAK2G,ICjBpCqQ,GAAuB3I,GAAYnO,OAAO+W,QAAQ5I,GACnDyC,KAAI,EAAE9Q,EAAKc,MAAW,CACvBd,IAAKA,EAAI+Q,cACTjQ,MAAOA,GAAOoW,OAAOxE,QAAQ,OAAQ,MAAQ,OAE5C1B,MAAK,CAAC1I,EAAGC,IAAOD,EAAEtI,IAAMuI,EAAEvI,KAAO,EAAI,IACrC8Q,KAAIqG,GAAS,GAAGA,EAAMnX,OAAOmX,EAAMrW,YACnC2I,KAAK,ICEJ2N,GAAaC,GAAQC,mBAAmBD,GAAK3E,QAAQ,WAAY6E,IACjEA,GAAata,GAAM,IAAIA,EAAEkC,WAAW,GAAGwR,SAAS,IAAI6G,gBCVpDC,GAAkB,CAACC,EAAUxF,GAAgB,IAASwF,EACtDxF,EACIoF,mBAAmBI,GAAUhF,QAAQ,OAAQ,KAC7CgF,EACJ,ICHAC,GAAoB/C,GAEV,MAARA,EACOhD,GAEPgG,GAAahD,GACMkC,GAAmB,KAAMlC,GhBE3B,mBgBInBgD,GAAgBhD,GAAyB,iBAATA,GAAqB1N,YAAYC,OAAOyN,IAASiD,GAAcjD,GAC/FiD,GAAiBC,GAAgC,mBAAhB5Q,aAA8B4Q,aAAe5Q,aACxC,yBAAxChH,OAAOM,UAAUmQ,SAASjQ,KAAKoX,GCX7BC,GAAe,CAACrI,GAAWkD,kBAAiBN,WAAUF,kBAAiBG,YAAWP,gBAAeC,iBAAgBC,oBAEnH,MAAM8F,ECKkB,GAAGpD,OAAMvG,UAAS4J,SAAQC,OAAOhG,GAAgB,KAAS,OAClF+F,EACAR,GAAgBS,EAAIR,SAAUxF,IJbDiG,EIcLD,EAAIC,aJdkBhb,MAAM2L,KAAKqP,GACxDnH,MAAK,EAAEoH,EAAMC,IAAQC,EAAMC,KACxBH,IAASE,EACFD,EAAOE,GAAQ,EAAI,EAEvBH,EAAOE,GAAQ,EAAI,IAEzBxH,KAAI,EAAE9Q,EAAKwY,KAAS,GAAGpB,GAAUpX,MAAQoX,GAAUoB,OACnD/O,KAAK,MIONuN,GAAoB3I,GACpBuC,GAAiBvC,GACjBsJ,GAAiB/C,IACnBnL,KAAK,MJlByB,IAAC0O,CIkBrB,EDZiBM,CAAoB/I,EAASwC,GAIhDwG,EEJc,EAAClG,EAAMI,EAAiB+F,IAAkB,CAAChH,GAA6Ba,EAAMI,EAAiB+F,GAAelP,KAAK,MFIlHmP,CAAgBtG,EAAUM,EAFzBkE,GAAmB,KAAMkB,IAIzCa,EAAY/B,GGRA,EAAC1E,EAAiBI,EAAM/G,EAAQqN,KAClD,MACMC,EAAUnC,GADJ,OAA0BxE,IACHI,GAC7BwG,EAAYpC,GAAcmC,EAAStN,GACnCwN,EAAarC,GAAcoC,EAAWF,GAE5C,OADmBlC,GAAcqC,EAAYvH,GAC5B,EHEoBwH,CAAc9G,EAAiBG,EAAWP,EAAeC,GAAiByG,GAC/G,OAAOG,CAAS,EIfdM,GAAwBC,GAAsB,IAAIrH,KAAKA,KAAKsH,MAAQD,GCPpEE,GAAwB,gBAExBC,GAAsB,kBAItBC,GAAwB,uBCAxBC,GAAmBC,IACrB,IAAIC,EACJ,MAAO,KACEA,IAIDA,EAASD,KAENC,EACV,ECZC,GAAS,IAAI,EAAA1V,cAAc,oBA2H3B2V,GAAkCC,IAAU,CAC9CC,iBAAkBD,EAAME,OACxBC,WAAYH,EAAMI,iBAAmBJ,EAAMK,WAAQra,IA2CjDsa,GAAoB,CAAC,QCnKrBC,ICH0BC,GFQL,CAAC3K,EAASxE,KACjC,MAAM,IAAEgN,EAAG,OAAED,EAAM,QAAE5J,EAAO,KAAEuG,GAASlF,GACjC,mBAAE4K,EAAkB,iBAAEC,EAAgB,aAAEC,EAAY,YAAE3K,GAAgB3E,EAC5E,OAAO,IAAIpB,SAAQ,CAACC,EAASC,KACzB,IAAIyQ,EAAM,IAAIC,eAmFd,GAlFAD,EAAIE,KAAK1C,EAAOT,cAAeU,EAAIvH,YACnCzQ,OAAO+W,QAAQ5I,GACVuM,QAAO,EAAEC,MAAaV,GAAkBW,SAASD,KACjDE,SAAQ,EAAEF,EAAQ/Z,MACnB2Z,EAAIO,iBAAiBH,EAAQ/Z,EAAM,IAEvC2Z,EAAID,aAAeA,EACfF,GACAG,EAAItK,iBAAiB,YAAY0J,IAC7BS,EAAmBV,GAA+BC,IAClD,GAAOnV,MAAMmV,EAAM,IAGvBU,GACAE,EAAIQ,OAAO9K,iBAAiB,YAAY0J,IACpCU,EAAiBX,GAA+BC,IAChD,GAAOnV,MAAMmV,EAAM,IAG3BY,EAAItK,iBAAiB,SAAS,KAC1B,MAAM+K,EAAe,IAAI,EAAa,CAClCha,QAASoY,GACTzW,KFxCW,gBE0Cf,GAAOkB,MAAMuV,IACbtP,EAAOkR,GACPT,EAAM,IAAI,IAGdA,EAAItK,iBAAiB,SAAS,KAG1B,IAAKsK,GAAO5K,GAAaC,QACrB,OAGJ,MAAM/L,EA4EQ,EAAC7C,EAAS2B,KAChC,MAAMkB,EAAQ,IAAIpB,MAAMzB,GAExB,OADA6C,EAAMlB,KAAOA,EACNkB,CAAK,EA/EUoX,CAAkB5B,GFpDnB,eEqDb,GAAOxV,MAAMwV,IACbvP,EAAOjG,GACP0W,EAAM,IAAI,IAGdA,EAAItK,iBAAiB,oBAAoB,KAChCsK,GAAOA,EAAIW,aAAeX,EAAIY,MAqCnCnL,YAlCkB,KAEd,IAAKuK,EACD,OACJ,MAAMa,GAwEUC,EAxE+Bd,EAAIe,yBA4ExDD,EACFE,MAAM,QACNC,QAAO,CAACC,EAAWC,KACpB,MAAMC,EAAQD,EAAKH,MAAM,MACnBZ,EAASgB,EAAMC,QACfhb,EAAQ+a,EAAMpS,KAAK,MAEzB,OADAkS,EAAUd,EAAO9J,eAAiBjQ,EAC3B6a,CAAS,GACjB,CAAC,GAVO,CAAC,GAzEQnB,aAAcuB,GAAwBtB,EACxCuB,EAAevB,EAAIrM,SACnB6N,EAAuC,SAAxBF,EAAiCtB,EAAIwB,aAAe,GACnEC,EAAY,CACdC,KAAM,IAAMrS,QAAQC,QAAQiS,GAC5BI,KAAM3C,IAAgB,IAA8B,SAAxBsC,EAgFzB,CAACI,IACpB,MAAMlS,EAAS,IAAIC,WACnB,OAAO,IAAIJ,SAAQ,CAACC,EAASC,KACzBC,EAAOoS,UAAY,KACXpS,EAAOmR,aAAelR,WAAWmR,MAGrCtR,EAAQE,EAAOrF,OAAO,EAE1BqF,EAAOI,QAAU,KACbL,EAAOC,EAAOlG,MAAM,EAExBkG,EAAOqS,WAAWH,EAAK,GACzB,EA5FoBI,CAAeP,GACflS,QAAQC,QAAQkS,KACtBO,KAAM,IAAM1S,QAAQE,OAEpB,IAAIrH,MAAM,sFAERyL,EAAW,CACbE,WAAYmM,EAAIgC,OAChBpO,QAASiN,EAKT1G,KAA4B,SAArB6F,EAAID,aACLta,OAAO4E,OAAOkX,EAAcE,GAC5BA,GAkDK,IAACX,EAhDhBxR,EAAQqE,GACRqM,EAAM,IAAI,GAKO,IAErB5K,EAAa,CACb,MAAM6M,EAAa,KAEf,IAAKjC,EACD,OAEJ,MAAMkC,EAAgB,IAAI9Y,EAAc,CACpChB,KFvGQ,eEwGR3B,QFzGW,aE2Gf8I,EAAO2S,GACPlC,EAAImC,QACJnC,EAAM,IAAI,EAEd5K,EAAYC,QACN4M,IACA7M,EAAYM,iBAAiB,QAASuM,EAChD,CACA,GAA8B,mBAAnBG,gBACPjI,aAAgBiI,eAEhB,MAAM,IAAIla,MAAM,oDAEpB8X,EAAIqC,KAAKlI,GAAQ,KAAK,GACxB,EEvHuCmI,GDGwB,CED9B,IAAO1H,GAAS7K,eAAuCkF,GAC1F,GAAIA,EAAQrB,QAAQmL,IAChB,OAAOnE,EAAK3F,GAEX,CACD,MAAM2E,QAAasD,GAAiBjI,EAAQkF,MAE5C,OADAlF,EAAQrB,QAAQmL,IAAyBnF,EAClCgB,EAAK3F,EAChB,CACJ,ECbmC,EAAGsN,kBAAkB,mBAAoBC,iBAAiB,MAAU5H,GAC5F7K,eAAmCkF,GACtC,GAAqC,IAAjCuN,EAAe/F,OAAOhY,OAEtB,aADqBmW,EAAK3F,GAGzB,CACD,MAAMwN,EAAaF,EAAgBjM,cAKnC,OAJArB,EAAQrB,QAAQ6O,GAAcxN,EAAQrB,QAAQ6O,GACxC,GAAGxN,EAAQrB,QAAQ6O,MAAeD,IAClCA,QACiB5H,EAAK3F,EAEhC,CACJ,E9BhB2B,EAAGyN,cAJH,EAIyCC,eAAcC,eAAcxN,kBAChG,GAAIsN,EAAc,EACd,MAAM,IAAIxa,MAAM,sCAEpB,MAAO,CAAC0S,EAAMiI,IAAY9S,eAA+BkF,GACrD,IAAI3L,EAEAqK,EADAmP,EAAgBD,EAAQC,eAAiB,EAG7C,MAAMC,EAAgC,KAClC,GAAIpP,EAEA,OADAoC,GAA+BpC,EAAUmP,GAClCnP,EAIP,MADAoC,GAA+BzM,EAAOwZ,GAChCxZ,CACV,EAEJ,MAAQ8L,GAAaC,SAAWyN,EAAgBJ,GAAa,CACzD,IACI/O,QAAiBiH,EAAK3F,GACtB3L,OAAQlE,CACZ,CACA,MAAOgF,GACHd,EAAQc,EACRuJ,OAAWvO,CACf,CAEA0d,GACKD,EAAQC,eAAiB,GAAKA,EACxBD,EAAQC,eAAiB,EAC1BA,EAAgB,EAC1BD,EAAQC,cAAgBA,EACxB,MAAM,0BAAEE,EAAyB,UAAEC,SAAoBN,EAAahP,EAAUrK,EAAOuZ,GACrF,IAAII,EAWA,OAAOF,IARP,GADAF,EAAQK,uBAAyBF,GAC5B5N,GAAaC,SAAWyN,EAAgBJ,EAAa,CAEtD,MAAMS,EAAQP,EAAaE,SACrB5N,GAAiBiO,EAAO/N,EAClC,CAMR,CACA,GAAIA,GAAaC,QACb,MAAM,IAAInN,MAAM,oBAGhB,OAAO6a,GAEf,CAAC,E+BjD4B,EAAGjR,cAAad,SAAQqN,UAAS5G,iBAAgB,MAC9E,IAAI2L,EACJ,MAAO,CAACxI,EAAMiI,IAAY9S,eAAiCkF,GACvDmO,EAA2BA,GAA4B,EACvD,MAAMC,EAAqB,CACvBvR,YAAoC,mBAAhBA,QACRA,EAAY,CAChBwR,eAAgBT,GAASK,uBAE3BpR,EACNuF,YAAaqH,GAAqB0E,GAClC7L,cAAevG,EACfwG,eAAgB6G,EAChB5G,iBAEE8L,OCbM,EAACtO,EAASxE,KAC1B,MAAM+S,EAAgBpM,GAAiB3G,IACjC,YAAEiH,EAAW,gBAAES,EAAe,SAAEN,EAAQ,aAAED,GAAiB4L,EAE3D5P,EAAU,IAAKqB,EAAQrB,SAC7BA,EAAQkD,IAAe7B,EAAQwI,IAAIgG,KACnC7P,EAAQmD,IAAmBc,EACvBD,IACAhE,EAAQoD,IAAgBY,GAE5B,MAAM8L,EAAgB,IAAKzO,EAASrB,WAE9BwK,EAAYd,GAAaoG,EAAeF,GACxCG,EAAkB,cAAcjM,KAAeS,IAC/CyL,EAAqB,iBAAiBzN,GAAiBvC,KACvDiQ,EAAiB,aAAazF,IAGpC,OAFAxK,EAAmB,cACf,GAAGsD,MAA+ByM,MAAoBC,MAAuBC,IAC1EH,CAAa,EDLYI,CAAY7O,EAASoO,GAC3C1P,QAAiBiH,EAAK2I,GAItBQ,EAOQ,GAAGnQ,WAAY,CAAC,IAAMA,GAASmE,MAAQnE,GAAS0D,MAAQ1D,IAAU,cAP7DoQ,CAAcrQ,GAIjC,OAHIoQ,IACAX,EEtBwB,EAACa,EAAyBb,ICIxC,EAACa,EAAyBC,IAA8BxW,KAAKyW,IAAIzF,GAAqBwF,GAA2BE,UACnIH,IAZgB,IDQZI,CAAcJ,EAAyBb,GAChCa,EAA0B3M,KAAKsH,MAEnCwE,EFkB4BkB,CAA4BhN,KAAKiN,MAAMR,GAAaX,IAE5EzP,CACX,CAAC,GH3BuD,CAACsB,EAASxE,KAClE,MAAMoS,EAAU,CAAC,EACjB,IAAI2B,EAAmBC,GAA0B7E,GAAY6E,EAAuBhU,GACpF,IAAK,IAAIlM,EAAI+d,GAAW7d,OAAS,EAAGF,GAAK,EAAGA,IAGxCigB,GAD2BE,EADjBpC,GAAW/d,IACQkM,EACXkU,CAAmBH,EAAiB3B,GAE1D,OAAO2B,EAAgBvP,EAAQ,GARJ,IAAC2K,GAAa0C,iBO0B7C,MAAMjM,GAAM,CAACxQ,EAAK+e,KACd,MAAMza,EAAS,CAAC,EAChB,IAAK,MAAO5E,EAAKsf,KAAgBpf,OAAO+W,QAAQoI,GAAe,CAC3D,MAAOE,EAAUnQ,GAAgBjS,MAAMqiB,QAAQF,GACzCA,EACA,CAACA,GACHpf,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKif,KAC1C3a,EAAO5E,GAAOoP,EACRA,EAAa9O,EAAIif,IACjBhW,OAAOjJ,EAAIif,IAEzB,CACA,OAAO3a,CAAM,EAOX6a,GAAqB3e,GAAUA,EAAQ4e,OAAO5e,QAASjB,EAOvD8f,GAAsB7e,GACjBA,EAAkB,SAAVA,OAAmBjB,EAehC+f,GAAwB9e,GACnBA,EAAQ,IAAIiR,KAAKjR,QAASjB,EAuC/BggB,GAAkB,CAAC/e,EAAOsO,IACd,KAAVtO,EACO,GAGJsO,GADajS,MAAMqiB,QAAQ1e,GAASA,EAAQ,CAACA,IAAQ8Z,QAAO/V,GAAU,MAALA,KAMtEib,GAAuBzR,IACzB,MAAM0R,EAA6B,cAC7BC,EAAe9f,OAAO2Q,KAAKxC,GAC5BuM,QAAOC,GAAUA,EAAO5M,WAAW8R,KACnCrE,QAAO,CAACuE,EAAKpF,KACdoF,EAAIpF,EAAOnI,QAAQqN,EAA4B,KAAO1R,EAAQwM,GACvDoF,IACR,CAAC,GACJ,OAAO/f,OAAO2Q,KAAKmP,GAAc9gB,OAAS,EAAI8gB,OAAengB,CAAS,EAOpEqgB,GAA2B,CAACnc,EAAOuK,KACrC,MAAM6R,EAAe,IAAI,EAAa,CAClCtd,KAAMkB,EAAMlB,KACZ3B,QAAS6C,EAAM7C,UAMnB,OAJmB,MAAfoN,IACA6R,EAAard,mBACT,8EAEDqd,CAAY,EAOjBC,GAAgCrZ,GAAUA,EAAM+J,KAAIuP,GAAQvP,GAAIuP,EAAM,CACxEC,WAAY,CAAC,aAAcb,IAC3Bc,KAAM,OACNC,cAAe,oBCvJbC,GAA8BpJ,GAGzBC,mBAAmBD,GAAK3E,QADJ,WACgC,IAEzD,GAAazV,GAAM,IAAIA,EAAEkC,WAAW,GAAGwR,SAAS,IAAI6G,gBCd1D,IAAIkJ,IACJ,SAAWA,GACPA,EAA+B,aAAI,eACnCA,EAAuC,qBAAI,uBAC3CA,EAA0B,QAAI,UAC9BA,EAA+B,aAAI,cACtC,CALD,CAKGA,KAAqBA,GAAmB,CAAC,ICC5C,MAAMC,GAAyBC,IAC3B,MAAMC,EAAc,CAAC,EACrB,IAAK,MAAO7gB,EAAKc,KAAUZ,OAAO+W,QAAQ2J,GACzB,MAAT9f,IACA+f,EAAY7gB,GAAOc,EAAM6P,YAGjC,OAAOkQ,CAAW,EAQhBC,GAAkCtW,MAAOzD,IAAU,IAClD4Z,GAAsB,CACrB,YAAa5Z,EAAMga,IACnB,gBAAiBha,EAAMia,aACvB,sBAAuBja,EAAMka,mBAC7B,mBAAoBla,EAAMma,gBAC1B,mBAAoBna,EAAMoa,gBAC1B,eAAgBpa,EAAMqa,YACtBC,QAASta,EAAMua,SAASC,cACxB,gBAAiBxa,EAAMya,WACpBC,GAAkB1a,EAAM2a,cAG7BD,GAAoB,CAACE,EAAW,CAAC,IAAMzhB,OAAO2Q,KAAK8Q,GAAUjG,QAAO,CAACuE,EAAK2B,KAC5E3B,EAAI,cAAc2B,EAAO7Q,iBAAmB4Q,EAASC,GAC9C3B,IACR,CAAC,GAOE4B,GAA6B,CAAC3J,EAAKlY,IAC7BkY,EAAIR,SAAShF,QAAQ,MAAO,IAChC,IAAI1S,EAAIyb,MAAM,KAAK3K,IAAI2P,IAA4BhX,KAAK,OAEhE,SAASqY,GAA4B1e,EAAW2e,GAC5C,IAAK3e,EACD,MAAM,IAAI,EAAa,CACnBP,KAAM6d,GAAiBsB,QACvB9gB,QAAS,iCACT6B,gBAAiB,IAAI0S,UAAU,8CAA8CsM,KAC7Ejf,mBAAoB,oEAGhC,CCvDA,MAAMmf,WAAuB,EACzB,WAAArf,CAAYM,EAAS,CACjBL,KAAM6d,GAAiBsB,QACvB9gB,QAAS,iCACT4B,mBAAoB,4DAEpBE,MAAME,GAENtG,KAAKgG,YAAcqf,GACnB/hB,OAAO+C,eAAerG,KAAMqlB,GAAezhB,UAC/C,ECVJ,SAAS0hB,IAAkB,WAAE1U,EAAU,IAAExN,EAAG,UAAEmiB,IAC1C,IAAK3U,IAAexN,IAAQmiB,EACxB,MAAM,IAAIF,GAEd,MAAMG,EAAiB5U,EAAWsN,SAAS,KACrCuH,EAAoB5B,GAA2BjT,GAC/C8U,EAAatiB,EAAIyb,MAAM,KAAK3K,IAAI2P,IAA4BhX,KAAK,KACjE8Y,EAAiBJ,EAAUzK,WAAa,IAAI2K,KAAqBC,IACjEE,EAAiBL,EAAUM,SAASxU,WAAW,GAAGoU,OACpDF,EAAUzK,WAAa,IAAI4K,IAC/B,KAAMC,IAAoBH,GAAkBI,GACxC,MAAM,IAAIP,EAElB,CCjBA,MAAMllB,GAAU,SCCV2lB,GAAe,IACQ,oBAAXC,OAKZC,GAAe,IACQ,oBAAXC,OAEZC,GAAiB,IACQ,oBAAbC,SAEZC,GAAgB,IACQ,oBAAZC,QAEZC,GAAiB,CAACC,EAAQ7V,MACnBpN,OAAO2Q,KAAKsS,GAAQC,MAAKpjB,GAAOA,EAAIiO,WAAWX,KCJtD+V,GAAe,CAEjB,CAAEC,SAAU9d,EAAU+d,KAAMC,gBCXhC,WACI,OAAOd,WAAyC,IAAhBC,OAAOc,IAC3C,GDUI,CAAEH,SAAU9d,EAAUke,YAAaF,gBEdvC,WACI,MAA6B,oBAAdG,gBACkB,IAAtBA,UAAUC,SACK,gBAAtBD,UAAUC,OAClB,GFYI,CAAEN,SAAU9d,EAAUqe,OAAQL,gBGdlC,WACI,OAAQZ,MACJC,OAAOxN,MACgB,iBAAhBwN,OAAOxN,IACtB,GHWI,CAAEiO,SAAU9d,EAAUse,KAAMN,gBIfhC,WACI,OAAQZ,YACiB/iB,IAApBgjB,OAAOkB,eACalkB,IAAjBgjB,OAAOmB,MACnB,GJYI,CAAEV,SAAU9d,EAAUye,QAAST,gBKhBnC,WACI,MAAMU,EAA8BC,QAAQrB,MAAoBC,SAASqB,cAAc,iBACjFC,EAA4BF,QAAQvB,WAAuC,IAAdC,OAAOyB,IAC1E,OAAOJ,GAA+BG,CAC1C,GLaI,CAAEf,SAAU9d,EAAU+e,MAAOf,gBMjBjC,WACI,MAAMgB,EAA+BxkB,GAC1BA,EAAIiO,WAAW,WAAajO,EAAIiO,WAAW,WAMtD,OAAO6U,MADyB3lB,MAAM2L,KAAKia,SAAS0B,iBAAiB,SACtBC,MAJhBC,GACpBzkB,OAAO2Q,KAAK8T,GAASvB,KAAKoB,IAIzC,GNSI,CAAElB,SAAU9d,EAAUof,MAAOpB,gBOlBjC,WACI,OAAOZ,MAAkBM,GAAeL,OAAQ,QACpD,GPiBI,CAAES,SAAU9d,EAAUqf,OAAQrB,gBQnBlC,WACI,OAAOZ,MAAkBM,GAAeL,OAAQ,WACpD,GRkBI,CAAES,SAAU9d,EAAUsf,WAAYtB,gBSrBtC,WACI,OAAOZ,IACX,GTqBI,CAAEU,SAAU9d,EAAUuf,UAAWvB,gBGjBrC,WACI,OAAQd,OACHQ,GAAeP,OAAQ,WAAaO,GAAeP,OAAQ,UACpE,GHeI,CAAEW,SAAU9d,EAAUwf,QAASxB,gBIlBnC,WACI,OAAQd,WAAmD,IAA1BC,OAAOsC,cAC5C,GJiBI,CAAE3B,SAAU9d,EAAU0f,SAAU1B,gBMdpC,WACI,OAAQR,WACmB,IAAhBC,QAAQkC,OACbjlB,OAAO2Q,KAAKoS,QAAQkC,KAAK/B,MAAKpjB,GAAOA,EAAI8a,SAAS,UAC5D,GNWI,CAAEwI,SAAU9d,EAAU4f,SAAU5B,gBOtBpC,WACI,OAAOd,MAAkBQ,GAAeP,OAAQ,QACpD,GPqBI,CAAEW,SAAU9d,EAAU6f,WAAY7B,gBKrBtC,WACI,OAASR,MACkB,iBAAhBC,QAAQkC,KACflC,QAAQkC,IAAIG,sBAAsBrX,WAAW,SAC7C,CACR,GLiBI,CAAEqV,SAAU9d,EAAU+f,UAAW/B,gBQxBrC,WACI,OAAQR,WACmB,IAAhBC,QAAQkC,OACbjlB,OAAO2Q,KAAKoS,QAAQkC,KAAK/B,MAAKpjB,GAAOA,EAAI8a,SAAS,WAC5D,IENA,IAAI0K,GACJ,MAAMC,GAA2B,GAEjC,IAAIC,IAAiB,EACrB,MAGMC,GAAkB,KACpB,IAAKH,GAAgB,CAEjB,GADAA,GVoBInC,GAAaD,MAAKwC,GAAkBA,EAAepC,qBACrDF,UAAY9d,EAAUqgB,kBUpBpBH,GAKA,KAAOD,GAAyBvmB,QAC5BumB,GAAyB9P,KAAzB8P,UAMJA,GAAyB1K,SAAQ+K,IAC7BA,GAAK,IAIbC,GAAavgB,EAAUqgB,kBAvBL,IAwBlBE,GAAavgB,EAAUsf,WAvBL,GAwBtB,CACA,OAAOU,EAAc,EAsBzB,SAASO,GAAaC,EAAWpI,GACzB4H,KAAmBQ,GAAcN,IACjCxV,YAAW,KAVfsV,QAAiB3lB,EAYT6lB,IAAiB,EACjBxV,WAAWyV,GAnDO,IAmDgC,GACnD/H,EAEX,CC/DA,MAAMqI,GAAuB,CAAC,ECIxBC,GAAkB,cAElBC,GAA0BC,GAAmBA,EAAe1T,QAAQ,OAAQ,IAgBjE,IAfjB,MACI,WAAA9P,GACIhG,KAAKypB,UAAY,GAAGH,MAAmBC,GAAuBppB,KAClE,CACA,aAAIipB,GACA,OAAOL,IACX,CACA,iBAAIW,GACA,OAAQ1pB,KAAKopB,YAAcxgB,EAAUke,aACjC9mB,KAAKopB,YAAcxgB,EAAU+d,IACrC,CACA,uBAAAgD,CAAwBT,GFoBI,CAACA,IAGzBJ,IAGJD,GAAyB7P,KAAKkQ,EAAI,EEzB9BS,CAAwBT,EAC5B,GAEJ,MAmBMU,GAAuBC,GAlBK,GAAGC,WAAUC,UAAY,CAAC,KACxD,MAAMN,EAAY,CACd,CAACH,GAAiBC,GAAuBppB,MAM7C,GAJI2pB,GACAL,EAAUzQ,KAAK,CAAC8Q,EAAUC,IAE9BN,EAAUzQ,KAAK,CAAC,YAAa+P,OACzBe,GAAYC,EAAQ,CACpB,MAAMC,EDgBa,EAACF,EAAUG,IAAQZ,GAAqBS,KAAYG,IAAMC,kBChBzDC,CAAmBL,EAAUC,GAC7CC,GACAA,EAAY7L,SAAQvW,IAChB6hB,EAAUzQ,KAAKpR,EAAM,GAGjC,CACA,OAAO6hB,CAAS,EAGEW,CAA0BP,GAEvC3V,KAAI,EAAEmW,EAAUC,KAAgBD,GAAYC,EAAa,GAAGD,KAAYC,IAAeD,IACvFxd,KAAK,KCzCR0d,GAAmB,CACrBC,GAAI,MACJC,QAAS,CACLC,UAAW,iBAEfC,YAAa,yCACbC,QAAS,CAAC,eAYRC,GAAiB,CACnBC,WAAY,CACRP,GACA,CACIC,GAAI,SACJC,QAAS,CACLC,UAAW,oBAEfC,YAAa,qBACbC,QAAS,CAAC,oBCpBhBG,GAAgBlc,IAClB,MAAM,WAAEic,GAAeD,GACvB,IAAK,MAAM,QAAED,EAAO,QAAEH,EAAO,YAAEE,KAAiBG,EAAY,CACxD,MAAME,EAAQ,IAAIC,OAAON,GACzB,GAAIC,EAAQ1M,SAASrP,IAAWmc,EAAMha,KAAKnC,GACvC,OAAO4b,EAAQC,SAEvB,CACA,OAAOH,GAAiBE,QAAQC,SAAS,ECfvCQ,GAAuB,ICAvBC,GACMC,IACJ,MACMC,GADY,IAAIC,WACAC,gBAAgBH,EAAQ,YACxCI,EAAYC,GAAaJ,GAE/B,OAAOG,EADSloB,OAAO2Q,KAAKuX,GAAW,GACd,EAG3BC,GAAgBC,IAClB,GAAIC,GAAeD,GACf,MAAO,CACH,CAACA,EAAKE,gBAAgBC,UAAWJ,GAAaC,EAAKE,kBAG3D,GAAIF,EAAKI,WAAaC,KAAKC,UACvB,OAAON,EAAKO,WAAW3R,OAE3B,GAAI4R,GAAcR,GAAO,CAGrB,GAAIS,GAAsBT,GACtB,OAAOA,EAAKU,WAAW,GAAGH,UAE9B,MAAMA,EAAY,CAAC,EAEnB,IAAK,MAAMI,KAAQX,EAAKY,WACfC,GAAyBF,EAAKR,YAC/BI,EAAUI,EAAKR,UAAYQ,EAAKJ,WAIxC,GAAIP,EAAKc,SAASlqB,OAAS,EACvB,IAAK,MAAMmqB,KAASf,EAAKc,SAAU,CAC/B,MAAME,EAAajB,GAAagB,GAChC,QAAmBxpB,IAAfypB,EACA,SAEJ,MAAMC,EAAYF,EAAMZ,cACK5oB,IAAzBgpB,EAAUU,GACVV,EAAUU,GAAaD,EAElBnsB,MAAMqiB,QAAQqJ,EAAUU,IAC7BV,EAAUU,GAAW3T,KAAK0T,GAG1BT,EAAUU,GAAa,CAACV,EAAUU,GAAYD,EAEtD,CAGJ,OAAyC,IAAlCppB,OAAO2Q,KAAKgY,GAAW3pB,OAAe,GAAK2pB,CACtD,GAEEC,GAAiBR,GAASA,EAAKI,WAAaC,KAAKa,aACjDjB,GAAkBD,GAASA,EAAKI,WAAaC,KAAKc,cAClDV,GAAyBT,GAASoB,GAA2BpB,IACtC,IAAzBA,EAAKc,SAASlqB,QACdopB,EAAKqB,YAAYjB,WAAaC,KAAKC,UACjCc,GAA8BpB,IAChC,IAAK,MAAMW,KAAQX,EAAKY,WACpB,IAAKC,GAAyBF,EAAKR,UAC/B,OAAO,EAGf,OAAO,CAAI,EAETU,GAA4BtmB,GAAkB,UAATA,GAAoBA,EAAKoL,WAAW,iBCrD/E,MAmBM2b,GAAepf,MAAO4D,IACxB,IAAKA,EAASwG,KAEV,MAAM,IAAIjS,MAAM,uBAEpB,MAAMgE,QAAayH,EAASwG,KAAKwH,OACjC,GAAIzV,GAAMzH,OAAS,EACf,IACI,OAAO6oB,GAAaphB,EACxB,CACA,MAAO5C,GACH,MAAM,IAAIpB,MAAM,iCAAiCoB,IACrD,CAEJ,MAAO,CAAC,CAAC,ECnDP8lB,GAAyB,CAC3B,cACA,4BACA,iBACA,qBACA,uBACA,wBACA,uBCcEC,GAAyB,CAC3B,yBACA,wBACA,yBACA,0BACA,yCACA,uBACA,mBACA,4BACA,WACA,qBACA,aACA,sBACA,4BAEEC,GAAsB,CACxB,eACA,iBACA,2BAEEC,GAAoB,CAAC1b,EAAY2b,IAA6B,MAAf3b,KAC9C2b,GAAaH,GAAuBhP,SAASmP,GAC9CC,GAAqBnmB,GAAU,CACjC2c,GAAiByJ,aAEjB,eACFrP,SAAS/W,GAAOlB,MACZunB,GAAoB,CAAC9b,EAAY2b,MAAiB3b,GAAc,CAAC,IAAK,IAAK,IAAK,KAAKwM,SAASxM,MAC7F2b,GAAaF,GAAoBjP,SAASmP,GCrB3CI,GAA4B,CAC9B,iBACA,wBACA,gBCpBEC,GAAiB,qCACjBC,GAAqB,gBACrBC,GAAe,OAoEfC,GJ/DuB,GAAGC,mBAAkB,GAAW,CAAC,IAAMlgB,MAAO4D,IACvE,IAAKA,GAAYA,EAASE,WAAa,IACnC,OAEJ,MAAM,WAAEA,GAAeF,EACjBwG,QAAagV,GAAaxb,GAC1Buc,EAAgBD,EAAkB9V,EAAOA,EAAKjS,MAC9CioB,EAAOD,GAAeE,KACtBF,EAAcE,KACC,MAAfvc,EACI,WACAA,EAAWqC,WAEf5M,EAAQ,IAAIpB,MADFgoB,GAAezpB,SAAWypB,GAAeG,SAAWF,GAEpE,OAAO1qB,OAAO4E,OAAOf,EAAO,CACxBlB,KAAM+nB,EACNpc,UAAWL,GAAcC,IAC3B,EI8CgB2c,CAAqB,CAAEL,iBAAiB,IAIxDtN,ID5EsB4N,GC4EYP,GD5EIjgB,MAAO4D,EAAUrK,EAAOknB,KAChE,MAAMC,EDJc,CAACF,GAAgBxgB,MAAO4D,EAAUrK,KACtD,MAAMonB,EAAcpnB,SACTinB,EAAY5c,SACnBvO,EACEoqB,EAAYkB,GAAaP,MAAQO,GAAatoB,KAC9CyL,EAAaF,GAAUE,WAK7B,MAAO,CACHoP,UALgBwM,GAAkBnmB,IAClCimB,GAAkB1b,EAAY2b,IDIb,CAACA,KAAgBA,GAAaJ,GAAuB/O,SAASmP,GCH/EmB,CAAiBnB,IACjBG,GAAkB9b,EAAY2b,GAGjC,ECR2BoB,CAAgBL,IACtCM,QAA6BJ,EAAoB9c,EAAUrK,GACjE,IAAKqK,EACD,MAAO,CAAEsP,UAAW4N,EAAqB5N,WAE7C,MAAMyN,QAAoBH,GAAY5c,GAChC6b,EAAYkB,GAAatoB,KACzB0oB,EAAeJ,GAAajqB,QAC5Byc,EAsBwB,EAACsM,EAAWsB,KAC1C,MAAMC,IAAwBvB,GAAaI,GAA0BvP,SAASmP,GAExEwB,IAA4BxB,KAC5BsB,GACFtB,EAAUnP,SAAS,cACnByQ,EAAazQ,SAAS,WAC1B,OAAO0Q,GAAuBC,CAAuB,EA7BxBhO,CAA0BwM,EAAWsB,GAClE,MAAO,CACH7N,UAAW4N,EAAqB5N,cAGzBC,GAAyBsN,GAAmBtN,sBACnDF,0BAA2BE,EAC9B,GAhBsB,IAACqN,GCgF5B,MAAM3b,GAAgB,CAClByJ,QAzEiB,KA0EjBrJ,iBAtEqB,CAACvE,EAASD,KAC/B,MAAM,OAAEQ,EAAM,sBAAEkB,EAAqB,eAAEC,EAAc,eAAEC,GAAmB3B,EAC1E,IAAIsE,EA2BJ,OAzBI5C,GACIA,IAAmBvJ,IACnBmM,EAAW,IAAIX,GAAWjC,IAE9BzJ,GAAuByJ,EAAekO,SAAS,OAAQ/Z,EAA2BwB,uBAClFiN,EAAW,IAAIX,GAAW,UAAUjC,MAE/BD,GAELxJ,GAAuB0J,EAAgB9L,EAA2ByB,oCAClEgN,EAAW,IAAIX,GAAW,yBAAyB8Y,GAAalc,OAGhE+D,EAAW,IAAIX,GAAW,cAAcpD,KAAUkc,GAAalc,MAG/DR,GAAUygB,SACVvoB,GAmB2BqK,EAnBqBvC,EAASygB,OAmBfpB,GAAe1c,KAAKJ,KACjE+c,GAAmB3c,KAAKJ,KACxBgd,GAAa5c,KAAKJ,IArBmDzM,EAA2B0B,2BACzFoK,GAAkB5B,EAASygB,OAAO5Q,SAAS,KAC3CtL,EAASkI,SAAW,IAAIzM,EAASygB,SAGjClc,EAAS0O,KAAO,GAAGjT,EAASygB,UAAUlc,EAAS0O,QAGhD,CAAEhG,IAAK1I,GAWgB,IAAChC,CAXP,EA0CxB4P,gBACAC,aNxFoBsO,IACpB,MAAMC,EODV,SAAyBC,ECNJ,KDSjB,OAAOF,IACH,MAAM/N,EAAQ,GAAK+N,EAHF,IACC,IAE0CxjB,KAAK2jB,SACjE,QAAOlO,EAAQiO,IAAqBjO,CAAK,CAEjD,CPN0BmO,CAAkBjE,IAClClK,EAAQgO,EAAcD,GAG5B,OAAiB,IAAV/N,EAAkBkK,GAAuBlK,CAAK,EMoFrDX,eAAgBuJ,KAChB7Z,uBAAuB,EACvBuF,eAAe,GG1Cb8Z,GAAY/c,GAAkBmL,IA3CR5P,MAAOzD,EAAOyI,KACtC,MAAMnB,EAAU,UACFyS,GAAgC,IACnC/Z,EACHqa,YAAara,EAAMqa,aAAe,gCAEnCT,GAAsB,CACrB,cAAe5Z,EAAMklB,WACrB,uBAAwBllB,EAAMyZ,cAC9B,8BAA+BzZ,EAAMmlB,oBACrC,gBAAiBnlB,EAAMolB,eAGzBjU,EAAM,IAAIrJ,GAAWW,EAAS0I,IAAIvH,YAQxC,OAPAmR,KAA8B/a,EAAMqlB,IAAK,OACzClU,EAAIR,SAAWmK,GAA2B3J,EAAKnR,EAAMqlB,KACrDlK,GAAkB,CACd1U,WAAYzG,EAAM2kB,OAClB1rB,IAAK+G,EAAMqlB,IACXjK,UAAWjK,IAER,CACHD,OAAQ,MACR5J,UACA6J,MACAtD,KAAM7N,EAAMslB,KACf,IAEyB7hB,MAAO4D,IACjC,GAAIA,EAASE,YAAc,IAAK,CAC5B,MAAMvK,QAAe0mB,GAAcrc,GACnC,MAAM8R,GAAyBnc,EAAOqK,EAASE,WACnD,CAEI,MAAO,IACAwC,GAAI1C,EAASC,QAAS,CACrBkS,KAAM,OACN+L,UAAW,qBAEf9d,UAAWL,GAAcC,GAEjC,GAE+F,IAAKiB,GAAemL,aAAc,SCrDrI,SAAS+R,GAAyB5F,GAC9B,OAAOH,GAAoB,CACvBE,SAAUjhB,EAASqG,QACnB6a,UAER,eCFA,MAAM6F,GAAmBC,GAAc,IAAIrlB,YAAYqlB,EAAUC,MAAM,WAAa,IAAI5b,KAAI6b,GAAKC,SAASD,EAAG,OAEvGE,GAAeJ,GAAcrjB,EAASojB,GAAgBC,ICHtDK,GAAa,QACbC,GAAwBviB,MAAOC,EAAS3L,EAAO,KACjD,IAAIkuB,EAAeluB,EACnB,GAAI2L,aAAmBvD,aAAeA,YAAYC,OAAOsD,GAAU,CAC/D,IAAIwiB,EAEAA,EADAxiB,aAAmBvD,YACN,IAAIE,WAAWqD,GAGf,IAAIrD,WAAWqD,EAAQpD,OAAQoD,EAAQnD,WAAYmD,EAAQ7D,YAE5E,IAAIsmB,EAAS,EACb,KAAOA,EAASD,EAAW/tB,QAAQ,CAC/B,MAAMiuB,EAAMhlB,KAAKilB,IAAIF,EAASJ,GAAYG,EAAW/tB,QAC/CmuB,EAAQJ,EAAWrvB,MAAMsvB,EAAQC,GACvCH,EAAeM,GAAMluB,IAAIiuB,EAAOL,KAAkB,EAClDE,EAASC,CACb,CACJ,KACK,CACD,IAAIhR,EAEAA,EADA1R,aAAmBE,KACZF,EAGA,IAAIE,KAAK,CAACF,IAErB,IAAIyiB,EAAS,EACb,KAAOA,EAAS/Q,EAAKoR,MAAM,CACvB,MAAMJ,EAAMhlB,KAAKilB,IAAIF,EAASJ,GAAY3Q,EAAKoR,MACzCF,EAAQlR,EAAKve,MAAMsvB,EAAQC,GAC3BK,QAAoB5jB,EAASyjB,GAC7BJ,EAAa,IAAI7lB,WAAWomB,GAClCR,EAAeM,GAAMluB,IAAI6tB,EAAYD,KAAkB,EACvDE,EAASC,CACb,CACJ,CACA,MAAMM,EAAMT,EAAarc,SAAS,IAAI+c,SAAS,EAAG,KAClD,MAAO,CACHC,qBDrCkBlB,ECqCoBgB,EDrCNjB,GAAgBC,GAAWplB,QCsC3DumB,SAAUf,GAAYY,GACtB3uB,KAAMkuB,GDvCW,IAACP,CCwCrB,EC9CCoB,GAA+BC,IACjC,IAAKA,EACD,OACJ,GAAkC,iBAAvBA,EACP,OAAOA,EACX,MAAM,KAAEC,EAAI,SAAEC,GAAaF,EAC3B,YAAoBjuB,IAAbmuB,EAAyB,GAAGD,gBAAmBC,KAAcD,CAAI,uBCN5E,MAAME,GAASntB,GACJA,QAELotB,GAAiB,CAACC,EAAUC,IACtBH,GAAME,IAAaF,GAAMG,IAAYD,IAAaC,EASxDC,GAAYvtB,GACE,MAATA,GAAkC,iBAAVA,IAAuB3D,MAAMqiB,QAAQ1e,GAWlEwtB,GAAU,CAACnL,EAAQoL,KACrB,GAAIpxB,MAAMqiB,QAAQ2D,KAAYhmB,MAAMqiB,QAAQ+O,GACxC,OAAO,EAEX,IAAKpxB,MAAMqiB,QAAQ2D,IAAWhmB,MAAMqiB,QAAQ+O,GACxC,OAAO,EAEX,GAAIpxB,MAAMqiB,QAAQ2D,IAAWhmB,MAAMqiB,QAAQ+O,GACvC,OAAQpL,EAAOjkB,SAAWqvB,EAAMrvB,QAC5BikB,EAAOqL,OAAM,CAAChW,EAAKiW,IAAOH,GAAQ9V,EAAK+V,EAAME,MAErD,IAAKJ,GAASlL,KAAYkL,GAASE,GAC/B,OAAOpL,IAAWoL,EAEtB,MAAMG,EAAaxuB,OAAO2Q,KAAKsS,GACzBwL,EAAYzuB,OAAO2Q,KAAK0d,GAC9B,OAAIG,EAAWxvB,SAAWyvB,EAAUzvB,QAG7BwvB,EAAWF,OAAMxuB,GACZ2uB,EAAU7T,SAAS9a,IACvBsuB,GAAQnL,EAAOnjB,GAAMuuB,EAAMvuB,KACjC,ECjCA4uB,GAA8B,mDAsC9BC,GAA8B9nB,IAChC,IAAKA,EAAMwZ,MAA4B,MAApBxZ,EAAMuZ,WACrB,MAAM,IAAI3d,MAAM,GAAGisB,OAAgC7nB,KAOvD,MAAO,eALeA,EAAMwZ,0BACMxZ,EAAMuZ,0BAClBvZ,EAAMyZ,cACtB,kBAAkBzZ,EAAMyZ,gCACxB,WACoD,EAwDxDsO,GAA0B7f,GAAkBmL,IAtGR5P,MAAOzD,EAAOyI,KACpD,MAAMnB,EAAU,CACZ,eAAgB,qBACbsS,GAAsB,CACrB,uBAAwB5Z,EAAMyZ,cAC9B,8BAA+BzZ,EAAMmlB,oBACrC,gBAAiBnlB,EAAMolB,eAGzBjU,EAAM,IAAIrJ,GAAWW,EAAS0I,IAAIvH,YACxCmR,KAA8B/a,EAAMqlB,IAAK,OACzClU,EAAIR,SAAWmK,GAA2B3J,EAAKnR,EAAMqlB,KACrDtK,KAA8B/a,EAAMgoB,SAAU,YAC9C7W,EAAI8W,OAAS,IAAIjgB,GAAuB,CACpCkgB,SAAUloB,EAAMgoB,WACjBpe,WACHmR,KAA8B/a,EAAMmoB,gBAAiB,mBACrDhN,GAAkB,CACd1U,WAAYzG,EAAM2kB,OAClB1rB,IAAK+G,EAAMqlB,IACXjK,UAAWjK,IAEf,MAAM+P,EASgC,CAAClhB,IACvC,IAAKA,EAAMooB,OAAOjwB,OACd,MAAM,IAAIyD,MAAM,GAAGisB,OAAgC7nB,KAEvD,MAAO,4EAA4EA,EAAMooB,MAAMre,IAAI+d,IAA4BplB,KAAK,+BAA+B,EAbvJ2lB,CAAkCroB,EAAMmoB,iBAEpD,OC7BJ,SAAoCnoB,EAAOkhB,GACvC,IAAKlhB,EAAMooB,MACP,MAAM,IAAIlN,GAEd,MAAMoN,EAAYtH,GAAaE,GACzBqH,EAAiCxe,GAAIue,EAAW,CAClDF,MAAO,CACH,OACAruB,GAAS+e,GAAgB/e,EAAOsf,OAGxC,IAAKkO,GAAQvnB,EAAOuoB,GAChB,MAAM,IAAIrN,EAElB,CDcIsN,CAA2BxoB,EAAMmoB,gBAAiBjH,GAC3C,CACHhQ,OAAQ,OACR5J,UACA6J,MACAtD,KAAM,yCAA2CqT,EACpD,IAoCuCzd,MAAO4D,IAC/C,GAAIA,EAASE,YAAc,IAAK,CAC5B,MAAMvK,QAAe0mB,GAAcrc,GACnC,MAAM8R,GAAyBnc,EAAOqK,EAASE,WACnD,CACK,CACD,MAAMkhB,OAjBchlB,OAAO4D,IAC/B,MAAMohB,QAAe5F,GAAaxb,GAClC,QAAoBvO,IAAhB2vB,EAAO3E,WAAyChrB,IAAnB2vB,EAAO1E,QAAuB,CAC3D,MAAM/mB,QAAe0mB,GAAc,IAC5Brc,EACHE,WAAY,MAEhB,MAAM4R,GAAyBnc,EAAOqK,EAASE,WACnD,CACA,OAAOkhB,CAAM,EAQYC,CAAoBrhB,GACnCshB,EAAW5e,GAAI0e,EAAQ,CACzBjP,KAAM,OACN6L,IAAK,MACLuD,SAAU,aAEd,MAAO,CACHnhB,UAAWL,GAAcC,MACtBshB,EAEX,IAqByI,IACtIrgB,GACHmL,aAAc,OACd4C,aAnBoC5S,MAAO4D,EAAUrK,EAAOknB,KAC5D,IAAK7c,EACD,MAAO,CAAEsP,WAAW,GAExB,GAA4B,MAAxBtP,EAASE,WAAoB,CAC7B,IAAKF,EAASwG,KACV,MAAO,CAAE8I,WAAW,GAExB,MAAM8R,QAAe5F,GAAaxb,GAClC,YAAoBvO,IAAhB2vB,EAAO3E,WAAyChrB,IAAnB2vB,EAAO1E,QAC7B,CAAEpN,WAAW,GAEjB,CAAEA,WAAW,EACxB,CACA,OAAON,GAAahP,EAAUrK,EAAOknB,EAAkB,IEpErD2E,GAAuB3gB,GAAkBmL,IAnCR,CAACrT,EAAOyI,KAC3C,MAAM0I,EAAM,IAAIrJ,GAAWW,EAAS0I,IAAIvH,YAiBxC,OAhBAmR,KAA8B/a,EAAMqlB,IAAK,OACzClU,EAAIR,SAAWmK,GAA2B3J,EAAKnR,EAAMqlB,KACrDtK,KAA8B/a,EAAMgoB,SAAU,YAC9C7W,EAAI8W,OAAS,IAAIjgB,GAAuB,CACpCkgB,SAAUloB,EAAMgoB,WACjBpe,WACHuR,GAAkB,CACd1U,WAAYzG,EAAM2kB,OAClB1rB,IAAK+G,EAAMqlB,IACXjK,UAAWjK,IAOR,CACHD,OAAQ,SACR5J,QAPY,IACTsS,GAAsB,CACrB,8BAA+B5Z,EAAMmlB,uBAMzChU,MACH,IAEoC1N,MAAO4D,IAC5C,GAAIA,EAASE,YAAc,IAAK,CAC5B,MAAMvK,QAAe0mB,GAAcrc,GACnC,MAAM8R,GAAyBnc,EAAOqK,EAASE,WACnD,CAEI,MAAO,CACHE,UAAWL,GAAcC,GAEjC,GAEgI,IAAKiB,GAAemL,aAAc,SCMhKqV,GAAa5gB,GAAkBmL,IAzCR5P,MAAOzD,EAAOyI,KACvC,MAAM0I,EAAM,IAAIrJ,GAAWW,EAAS0I,IAAIvH,YAWxC,OAVAmR,KAA8B/a,EAAMqlB,IAAK,OACzClU,EAAIR,SAAWmK,GAA2B3J,EAAKnR,EAAMqlB,KACrDlK,GAAkB,CACd1U,WAAYzG,EAAM2kB,OAClB1rB,IAAK+G,EAAMqlB,IACXjK,UAAWjK,IAKR,CACHD,OAAQ,OACR5J,QALYsS,GAAsB,CAClC,8BAA+B5Z,EAAMmlB,sBAKrChU,MACH,IAE0B1N,MAAO4D,IAClC,GAAIA,EAASE,YAAc,IAAK,CAE5B,MAAMvK,QAAe0mB,GAAcrc,GACnC,MAAM8R,GAAyBnc,EAAOqK,EAASE,WACnD,CACK,CACD,MAAMohB,EAAW,IACV5e,GAAI1C,EAASC,QAAS,CACrByhB,cAAe,CAAC,iBAAkBrQ,IAClC2B,YAAa,eACbb,KAAM,OACNwP,aAAc,CAAC,gBAAiBnQ,IAChC0M,UAAW,qBAEf5K,SAAU5B,GAAoB1R,EAASC,UAE3C,MAAO,CACHG,UAAWL,GAAcC,MACtBshB,EAEX,IAEkG,IAAKrgB,GAAemL,aAAc,SCGlIwV,GAAa/gB,GAAkBmL,IA5CR5P,MAAOzD,EAAOyI,KACvC,MAAMnB,EAAU,IACTsS,GAAsB,CACrB,uBAAwB5Z,EAAMyZ,cAC9B,cAAezZ,EAAMklB,WACrB,8BAA+BllB,EAAMmlB,sBAEzC,eAAgB,4BAEdhU,EAAM,IAAIrJ,GAAWW,EAAS0I,IAAIvH,YAcxC,OAbAmR,KAA8B/a,EAAMqlB,IAAK,OACzClU,EAAIR,SAAWmK,GAA2B3J,EAAKnR,EAAMqlB,KACrDtK,KAA8B/a,EAAMuZ,WAAY,cAChDwB,KAA8B/a,EAAMgoB,SAAU,YAC9C7W,EAAI8W,OAAS,IAAIjgB,GAAuB,CACpCkhB,WAAYlpB,EAAMuZ,WAAa,GAC/B2O,SAAUloB,EAAMgoB,WACjBpe,WACHuR,GAAkB,CACd1U,WAAYzG,EAAM2kB,OAClB1rB,IAAK+G,EAAMqlB,IACXjK,UAAWjK,IAER,CACHD,OAAQ,MACR5J,UACA6J,MACAtD,KAAM7N,EAAMslB,KACf,IAE0B7hB,MAAO4D,IAClC,GAAIA,EAASE,YAAc,IAAK,CAC5B,MAAMvK,QAAe0mB,GAAcrc,GACnC,MAAM8R,GAAyBnc,EAAOqK,EAASE,WACnD,CAEI,MAAO,IACAwC,GAAI1C,EAASC,QAAS,CACrBkS,KAAM,SAEV/R,UAAWL,GAAcC,GAEjC,GAEkG,IAAKiB,GAAemL,aAAc,SCtClI0V,GAAqB1lB,OAAS2lB,uBAAsBC,yBAAwB9jB,WAAUuD,cAAatE,SAAQ8kB,WAAUpB,WAAUqB,yBAAwBC,aAAYpkB,sBAAqBqkB,mBAAkBC,0BAC5M,IAAI3W,EAAmB,EACvB,IAAK,MAAM,KAAEnT,EAAI,WAAEspB,EAAU,KAAE1C,KAAU4C,EAAsB,CAC3D,GAAItgB,EAAYC,QAAS,CACrB9L,EAAOU,MAAM,4BACb,KACJ,CACA,GAAI0rB,EAAuBM,IAAIT,GAC3BjsB,EAAOU,MAAM,QAAQurB,uBACrBnW,GAAoByT,EACpBgD,IAAa,CACTzW,yBAGH,CAED,IAAI6W,EACAH,IACAG,QAAsB5D,GAAsBpmB,IAEhD,MAAMiqB,GAELD,GAAiBxkB,QACN5B,EAAoB5D,QAC1B9G,GACE0gB,KAAMsQ,SAAeb,GAAW,IACjC1jB,EACHuD,cACA0K,iBAAmBV,IACf,MAAQC,iBAAkBgX,GAAgCjX,EAC1D0W,IAAa,CACTzW,iBAAkBA,EAAmBgX,GACvC,GAEP,CACCpF,OAAQngB,EACR6gB,IAAKiE,EACLtB,SAAUE,EACV5C,KAAM1lB,EACN2Z,WAAY2P,EACZzP,cAAemQ,GAAe/C,SAC9B3B,WAAY2E,EACZ1E,oBAAqBuE,IAEzB3W,GAAoByT,EAEpB+C,EAAuBL,EAAYY,EAAMF,GAAe/C,SAC5D,CACJ,GCnBEmD,GAAY9hB,GAAkBmL,IAnCR5P,MAAOzD,EAAOyI,KACtC,MACM0I,EAAM,IAAIrJ,GAAWW,EAAS0I,IAAIvH,YAOxC,OANAmR,KAA8B/a,EAAMqlB,IAAK,OACzClU,EAAIR,SAAWmK,GAA2B3J,EAAKnR,EAAMqlB,KACrDtK,KAA8B/a,EAAMgoB,SAAU,YAC9C7W,EAAI8W,OAAS,IAAIjgB,GAAuB,CACpCkgB,SAAUloB,EAAMgoB,WACjBpe,WACI,CACHsH,OAAQ,MACR5J,QAVY,CAAC,EAWb6J,MACH,IAEyB1N,MAAO4D,IACjC,GAAIA,EAASE,YAAc,IAAK,CAC5B,MAAMvK,QAAe0mB,GAAcrc,GACnC,MAAM8R,GAAyBnc,EAAOqK,EAASE,WACnD,CACK,CACD,MAAMkhB,QAAe5F,GAAaxb,GAC5BshB,EAAW5e,GAAI0e,EAAQ,CACzBT,SAAU,WACVI,MAAO,CACH,OACAruB,GAAS+e,GAAgB/e,EAAOsf,OAGxC,MAAO,CACH5R,UAAWL,GAAcC,MACtBshB,EAEX,IAE+F,IAAKrgB,GAAemL,aAAc,SCG/HwW,GAAwBxmB,MAAOymB,IACjC,IACI,OAAOC,KAAKlS,YAAaiS,EAAsBE,QAAQ3tB,IAAyB,KACpF,CACA,MAAOqB,GAEH,OADAb,EAAOU,MAAM,0CACN,CAAC,CACZ,GAOE0sB,GAAqB,EAAGvnB,OAAM0jB,OAAM8D,cAAa9lB,SAAQV,cAAa7K,MAAKsxB,kBAC7E,IAAIC,EAIAA,OADgB1xB,IAAhBgL,EACW,SAGgB,UAAhBA,EAA0B,SAAWA,EAEpD,MAAM2mB,EAAS,GAAGF,KAAe/D,KARL8D,GAAexnB,GAAMkkB,MAAQ,8BAQOxiB,KAAUgmB,KAAYvxB,IACtF,OAAI6J,EACO,GAAGA,EAAKhH,QAAQgH,EAAK4nB,gBAAgBD,IAGrCA,CACX,EAUEE,GAAqBlnB,MAAOymB,EAAuBU,KACrD,MAAMC,QAAsBZ,GAAsBC,UAC3CW,EAAcD,SACfV,EAAsBY,QAAQruB,EAAqB0tB,KAAKY,UAAUF,GAAe,ECzCrFG,GAAwB9iB,GAAkBmL,IAvCR5P,MAAOzD,EAAOyI,KAClD,MAAMnB,EAAU,UACFyS,GAAgC/Z,MACvC4Z,GAAsB,CACrB,2BAA4B5Z,EAAMirB,kBAClC,8BAA+BjrB,EAAMmlB,uBAGvChU,EAAM,IAAIrJ,GAAWW,EAAS0I,IAAIvH,YASxC,OARAmR,KAA8B/a,EAAMqlB,IAAK,OACzClU,EAAIR,SAAWmK,GAA2B3J,EAAKnR,EAAMqlB,KACrDlU,EAAI8W,OAAS,UACb9M,GAAkB,CACd1U,WAAYzG,EAAM2kB,OAClB1rB,IAAK+G,EAAMqlB,IACXjK,UAAWjK,IAER,CACHD,OAAQ,OACR5J,UACA6J,MACH,IAEqC1N,MAAO4D,IAC7C,GAAIA,EAASE,YAAc,IAAK,CAC5B,MAAMvK,QAAe0mB,GAAcrc,GACnC,MAAM8R,GAAyBnc,EAAOqK,EAASE,WACnD,CACK,CACD,MAAMkhB,QAAe5F,GAAaxb,GAC5BshB,EAAW5e,GAAI0e,EAAQ,CACzBT,SAAU,aAEd,MAAO,CACHvgB,UAAWL,GAAcC,MACtBshB,EAEX,IAEmI,IAAKrgB,GAAemL,aAAc,SClDnKyX,GAAqBC,IACvB,IAAKA,EACD,OAAO3uB,EAEX,IAAI4uB,EAAW5uB,EACX6uB,EAAajqB,KAAKkqB,KAAKH,EAAYC,GACvC,KAAOC,EvGIa,KuGHhBD,GAAY,EACZC,EAAajqB,KAAKkqB,KAAKH,EAAYC,GAEvC,OAAOA,CAAQ,ECRbG,GAAiB,CAAC3rB,EAAMurB,KAC1B,MAAMC,EAAWF,GAAkBC,GACnC,GAAIvrB,aAAgBgE,KAChB,OAAO4nB,GAAO5rB,EAAM,EAAGA,EAAK4mB,KAAM4E,GAEjC,GAAIjrB,YAAYC,OAAOR,GACxB,OAAO4rB,GAAO5rB,EAAKU,OAAQV,EAAKW,WAAYX,EAAKC,WAAYurB,GAE5D,GAAIxrB,aAAgBO,YACrB,OAAOqrB,GAAO5rB,EAAM,EAAGA,EAAKC,WAAYurB,GAEvC,GAAoB,iBAATxrB,EAAmB,CAC/B,MAAMwV,EAAO,IAAIxR,KAAK,CAAChE,IACvB,OAAO2rB,GAAenW,EAAMA,EAAKoR,KACrC,CAEI,MAAM,IAAI,EAAa,CACnB1qB,KAAM9B,EAA2Bc,uBAC9Bb,EAAmBD,EAA2Bc,sBAEzD,EAEE0wB,GAAS,UAAWlrB,EAAQC,EAAYV,EAAYurB,GACtD,IAAIlC,EAAa,EACbuC,EAAYlrB,EACZmrB,EAAUnrB,EAAaa,KAAKilB,IAAI+E,EAAUvrB,GAC9C,KAAO6rB,EAAU7rB,EAAaU,QACpB,CACF2oB,aACAtpB,KAAMU,EAAOzJ,MAAM40B,EAAWC,GAC9BlF,KAAM4E,GAEVlC,GAAc,EACduC,EAAYC,EACZA,EAAUD,EAAYL,OAEpB,CACFlC,aACAtpB,KAAMU,EAAOzJ,MAAM40B,EAAW5rB,EAAaU,GAC3CimB,KAAM3mB,EAAaU,EAAakrB,EAExC,ECFME,GAA6B,CAACC,EAAiBpF,KACjD,IAAIqF,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAhD,EACAI,EAIA6C,GAAyB,EAC7B,MAAM,sBAAErC,GAA0B0B,EAAgBznB,SAAW,CAAC,EAmIxDqoB,EAA8B,IAlIhB/oB,WAChB,MAAQU,QAASsoB,EAAiB,KAAE7sB,GAASgsB,EACvCc,QAA0B1oB,EAAwB,EAAA2oB,QAASf,GACjEK,EAAkB,IAAIW,gBACtBL,GAAyB,EACzBP,EAAmBU,EAAkBnnB,SACrC4mB,EAAiBO,EAAkBloB,OACnC6nB,EAAqBK,EAAkBroB,WACvCqlB,EAAsB+C,GAAmB/C,oBACzC,MAAM,UAAEviB,EAAS,UAAEF,GAAcD,GAA8B4kB,EAAiBS,IAC1E,mBAAEtF,EAAkB,gBAAE8F,EAAe,YAAEvC,EAAc,2BAA0B,SAAE1P,EAAQ,iBAAEkS,EAAgB,WAAEtD,GAAgBiD,GAAqB,CAAC,EAGzJ,GAFAnD,EAAWriB,EAEPE,IAAcxK,EAAmB,CACjC,MAAMmH,EAAc2oB,GACd3oB,YACNsoB,EAAoBM,EAAkBpnB,UACtCgkB,EAAW8C,EAAoBnlB,EAC/BilB,EAAsBa,GAAmBjpB,EAC7C,CACA,MAAMymB,SAAqBvE,GAAsBmE,KAAKY,UAAU0B,KAAqB5F,SACrF,IAAKkF,EAAkB,CACnB,MAAM,SAAE7D,EAAQ,YAAE8E,EAAW,WAAEC,QCzDPxpB,QAAS8B,WAAU3F,OAAM4mB,OAAM8D,cAAa9lB,SAAQV,cAAawB,YAAWrM,MAAK8tB,qBAAoB8F,kBAAiBjS,WAAU9R,cAAaokB,oBAAmB3C,cAAaL,wBAAuBR,0BACpO,MAAMJ,OAAyBxwB,IAAdwM,EAA0BA,EAAYrM,EAAMA,EAC7D,IAAIk0B,EACJ,GAAKjD,EAIA,CACD,MAAMoC,EAAiBjC,GAAmB,CACtC7D,OACA8D,cACAxnB,KAAMlD,aAAgBwtB,KAAOxtB,OAAO9G,EACpC0L,SACAV,cACA7K,MACAsxB,gBAEE8C,OLrBgB5pB,QAASymB,wBAAuBU,WAAUrlB,WAAUf,SAAQ8kB,eACtF,MAAMuB,QAAsBZ,GAAsBC,GAClD,IAAKW,EAAcD,IACfC,EAAcD,GAAU0C,YAActiB,KAAKsH,MARlC,KAUT,OAAO,KAEX,MAAM6a,EAAetC,EAAcD,GACnCuC,EAAaG,YAActiB,KAAKsH,YAC1B4X,EAAsBY,QAAQruB,EAAqB0tB,KAAKY,UAAUF,IACxE,IACI,MAAM,MAAEzC,EAAQ,UAAa4B,GAAUzkB,EAAU,CAC7Cof,OAAQngB,EACR6gB,IAAKiE,EACLtB,SAAUmF,EAAajF,WAE3B,MAAO,CACHpT,MAAOsT,EACPF,SAAUiF,EAAajF,SACvB+E,WAAYE,EAAaF,WAEjC,CACA,MAAOnvB,GAGH,OAFAb,EAAOU,MAAM,8DACPgtB,GAAmBT,EAAuBU,GACzC,IACX,GKLoC2C,CAAsB,CAClDhoB,WACAqlB,SAAU0B,EACV9nB,SACA8kB,WACAY,0BAEJiD,EAAeE,EACT,IAAKA,EAAmBf,uBACxBxzB,CACV,MAvBImE,EAAOU,MAAM,iEACbwvB,OAAer0B,EAuBnB,GAAIq0B,EACA,MAAO,CACHjF,SAAUiF,EAAajF,SACvB8E,YAAaG,EAAarY,MAC1BmY,WAAYE,EAAaF,YAG5B,CACD,MAAMA,EAAaC,IAAsBrwB,OC/CxB4G,OAAO7D,EAAM4mB,KAClC,MAAMgH,EAAY,GACZC,EAAclC,GAAe3rB,EAAM4mB,GACzC,IAAIkH,EAAc,EAClB,IAAK,MAAQ9tB,KAAM+tB,KAAeF,EAAa,CAC3C,MAAM5G,EAAW,IAAIxmB,kBAAkB2lB,GAAsB2H,IAAY/G,qBACzE8G,GAAe7G,EAAS1uB,OACxBq1B,EAAU3e,KAAKgY,EACnB,CAEA,MAAM+G,EAAgB,IAAIvtB,WAAWqtB,GACrC,IAAIvH,EAAS,EACb,IAAK,MAAM0H,KAAaL,EACpBI,EAAcpe,IAAIqe,EAAW1H,GAC7BA,GAAU0H,EAAU11B,OAExB,MAAO,UAAU6tB,GAAsB4H,EAActtB,SAASumB,YAAY2G,EAAUr1B,QAAQ,EDgC5E21B,CAAiBluB,EAAM4mB,QAC7B1tB,GACA,SAAEkvB,SAAmBgD,GAAsB,IAC1CzlB,EACHuD,eACD,CACC6b,OAAQngB,EACR6gB,IAAKiE,EACLjP,YAAaiQ,EACbpQ,mBAAoB4M,GAA4BC,GAChD3M,gBAAiByS,EACjBlS,SAAUC,EACVqQ,kBAAmBgC,EAAa,aAAUn0B,EAC1CqsB,oBAAqBuE,IAEzB,GAAIQ,EAAuB,CACvB,MAAMoC,EAAiBjC,GAAmB,CACtC7D,OACA8D,cACAxnB,KAAMlD,aAAgBwtB,KAAOxtB,OAAO9G,EACpC0L,SACAV,cACA7K,MACAsxB,qBLJa9mB,OAAOymB,EAAuBU,EAAUmD,KACjE,MAAMlD,QAAsBZ,GAAsBC,GAClDW,EAAcD,GAAY,IACnBmD,EACHT,YAAatiB,KAAKsH,aAEhB4X,EAAsBY,QAAQruB,EAAqB0tB,KAAKY,UAAUF,GAAe,EKAzEmD,CAAqB9D,EAAuBoC,EAAgB,CAC9DpE,SAAUF,EACVxjB,SACAvL,MACAg0B,aACAgB,SAAUruB,aAAgBwtB,KAAOxtB,EAAK9D,KAAO,IAErD,CACA,MAAO,CACHosB,SAAUF,EACVgF,YAAa,GACbC,aAER,GDlB4DiB,CAA4B,CAC5E3oB,SAAUymB,EACVloB,YAAaooB,EACb1nB,OAAQ2nB,EACR7mB,UAAW8mB,EACXnzB,IAAKgO,EACLqjB,cACAvD,qBACA8F,kBACAjS,WACAhb,OACA4mB,OACA1d,YAAamjB,EAAgBkC,OAC7BjB,kBAAmBT,GAAmBS,kBACtC3C,cACAL,wBACAR,wBAEJqC,EAAmB,CACf7D,WACAkG,eAAgBpB,EAChBC,aAER,CACAX,EAAiB9F,EACX6D,GAAmB,CACjBvnB,KAAMlD,aAAgBwtB,KAAOxtB,OAAO9G,EACpCgL,YAAaooB,EACb5B,YAAamC,GAAmBnC,YAChC9lB,OAAQ2nB,EACR3F,OACAvtB,IAAKgO,EACLsjB,qBAEFzxB,EACN,MAAM20B,EAAclC,GAAe3rB,EAAM4mB,GACnC6C,EAAyB,IAAIgF,IAAItC,EAAiBqC,eAAerkB,KAAI,EAAGwP,gBAAiBA,KACzFgQ,EAAyB,CAACL,EAAYY,EAAMvD,KAC9CwF,GAAkBqC,eAAevf,KAAK,CAClC0K,WAAY2P,EACZ1P,KAAMsQ,KAEFvD,EAAQ,CAAE9M,cAAe8M,GAAU,CAAC,GAC1C,EAEA+H,EG3H8B,GAAG9H,OAAMgD,iBACjD,MAAM+E,EAA8B,GAEpC,MAAO,CACHC,sBAAuB,KACnBD,EAA4B1f,KAAK,GACjC,MAAM4f,EAAgBF,EAA4Bp2B,OAAS,EAC3D,OAAQ2a,IACJ,MAAM,iBAAEC,GAAqBD,EAC7Byb,EAA4BE,GAAiB1b,EAC7CyW,IAAa,CACTzW,iBATkBwb,EAA4B5Z,QAAO,CAACuE,EAAKnG,IAAqBmG,EAAMnG,GAAkB,GAUxGE,WAAYuT,GACd,CACL,EAER,EH2G4CkI,CAAoC,CACzElI,OACAgD,eAEEmF,EAAgC,GACtC,IAAK,IAAIC,EAAQ,EAAGA,EzGxHD,EyGwH6BA,IAC5CD,EAA8B9f,KAAKsa,GAAmB,CAClDC,qBAAsBqE,EACtBpE,yBACA9jB,SAAUymB,EACVljB,YAAamjB,EAAgBkC,OAC7B3pB,OAAQ2nB,EACR7C,WACApB,SAAU6D,EAAiB7D,SAC3BqB,yBACAC,WAAY8E,EAAiCE,wBAC7CppB,oBAAqBsnB,EAAkBtnB,oBACvCqkB,iBAAkBrM,QAAQ2O,EAAiBkB,YAC3CvD,+BAGF3mB,QAAQ8rB,IAAIF,GAClBG,GAAuB/C,EAAiBqC,eAAgB5H,GACxD,MAAQhN,KAAMsQ,SAAe/B,GAAwB,IAC9CiE,EACHljB,YAAamjB,EAAgBkC,OAC7BjY,eAAgBsP,GAAyBlmB,EAAcyvB,aACxD,CACCpK,OAAQwH,EACR9G,IAAKiE,EACLtB,SAAU+D,EAAiB7D,SAC3BzO,cAAesS,EAAiBkB,WAChC7H,YAAa0H,EAAmB,SAAMh0B,EACtCqvB,gBAAiB,CACbC,MAAO4G,GAAgBjD,EAAiBqC,iBAE5CjJ,oBAAqBuE,IAEzB,GAAIlD,EAAM,CACN,MAAQuC,cAAekG,SAA6BnG,GAAWkD,EAAkB,CAC7ErH,OAAQwH,EACR9G,IAAKiE,EACLnE,oBAAqBuE,IAEzB,GAAIuF,GAAsBA,IAAuBzI,EAC7C,MAAM,IAAI,EAAa,CACnB1qB,KAAM,QACN3B,QAAS,uCAAuCqsB,cAAiByI,MAG7E,CACI/E,GAAyBoC,SACnB3B,GAAmBT,EAAuBoC,GAEpD,MAAMzuB,EAAS,CACXisB,OACAQ,cACA1P,YAEJ,OAAOzT,IAAcxK,EACf,CAAE1D,IAAKgO,KAAcpJ,GACrB,CAAEsI,KAAMc,KAAcpJ,EAAQ,EAEEqxB,GACrC9f,KAAKyc,GACLsD,OAAMnyB,IACP,MAAM8L,EAAcmjB,GAAiBkC,OACjCrlB,GAAaC,SAAWwjB,EACxBtvB,EAAOU,MAAM,kBAIbmuB,EAAe9uB,EACnB,IAsCJ,MAAO,CACHoyB,mBArCuB,IAAM,IAAIrsB,SAAQ,CAACC,EAASC,KACnD4oB,EAAkB7oB,EAClB8oB,EAAiB7oB,EACjBupB,GAA6B,IAmC7BruB,QAjCY,KACZouB,GAAyB,EACzBN,GAAiBpW,OAAO,EAgCxB3X,SA9Ba,KACbsuB,GAA6B,EA8B7BnvB,SA5BclD,IAEd8xB,GAAiBpW,MAAM1b,GACFsJ,WAEb6oB,GAAkBpC,SACZS,GAAmBT,EAAuBoC,SAG9CzD,GAAqBmD,EAAkB,CACzCrH,OAAQwH,EACR9G,IAAKiE,EACLtB,SAAU+D,GAAkB7D,SAC5B/C,oBAAqBuE,GACvB,EAEN2F,GAAeF,OAAMrxB,IACjBb,EAAOU,MAAM,qCAAsCG,EAAE,IAEzDguB,EAGA,IAAIhvB,EAAc3C,EAAU,CAAEA,gBAAYrB,GAAW,EAOxD,EAECi0B,GAAsBjpB,GAAgBA,GACxC,EAAA6oB,QAAQtnB,eAAeN,SAASC,IAAIE,oBACpC3I,EACEuyB,GAAyB,CAACV,EAAgB5H,KAC5C,MAAM8I,EAAgBluB,KAAKkqB,KAAK9E,EAAO0E,GAAkB1E,IACnD+I,EAAiBnB,EAAej2B,SAAWm3B,EAE3CE,EADSR,GAAgBZ,GACC3G,OAAM,CAACgI,EAAMb,IAAUa,EAAKlW,aAAeqV,EAAQ,IACnF,IAAKW,IAAmBC,EACpB,MAAM,IAAItU,EACd,EAEE8T,GAAmBla,GACd,IAAIA,GAAO7K,MAAK,CAACylB,EAAOC,IAAUD,EAAMnW,WAAaoW,EAAMpW,aIpPhEqW,GAAc5vB,IAChB,MAAM,KAAEJ,GAASI,EACX6vB,ECbS,CAAC7vB,GACZA,QACO,EACU,iBAAVA,EACM,IAAI4D,KAAK,CAAC5D,IACXwmB,KAEqB,iBAArBxmB,EAAMH,WAEXG,EAAMH,WAEc,iBAAfG,EAAMwmB,KAEXxmB,EAAMwmB,UAFZ,EDEkB3mB,CAAWD,GAKlC,GAFAxD,OAAyCtD,IAAnB+2B,EAA8B71B,EAA2Bc,qBAC/EsB,EAAsByzB,G7GVF,c6GUqC71B,EAA2Ba,kBAChFg1B,GAAkBrzB,EAAmB,CAErC,MAAMyvB,EAAkB,IAAIW,gBAC5B,OAAO3uB,EAAiB,CACpBG,mBAAmB,EACnBhB,KEGUwuB,EFHQ5rB,EEGS8I,EFHFmjB,EAAgBkC,OEGDT,EFHSmC,EEGOpsB,UAChE,MAAQU,QAASsoB,EAAiB,KAAE7sB,GAASgsB,GACvC,OAAEpnB,EAAM,UAAEc,EAAS,SAAEC,EAAQ,oBAAEH,EAAmB,WAAEf,SAAqBL,EAAwB,EAAA2oB,QAASf,IAC1G,UAAEzkB,EAAS,UAAEF,GAAcD,GAA8B4kB,EAAiBvnB,GAChFsC,GAAsB8lB,GAAmB/C,qBACzC,MAAMJ,EAAWniB,IAAcxK,EAAoB2I,EAAY2B,EAAYA,GACrE,mBAAE8f,EAAkB,gBAAE8F,EAAe,YAAEvC,EAAc,2BAA0B,iBAAEwC,EAAgB,SAAElS,EAAQ,kBAAEsS,EAAiB,WAAE1D,EAAU,oBAAEE,GAAyB+C,GAAqB,CAAC,EAC3L7C,EAAgBsD,IAAsBrwB,QAChCmpB,GAAsBpmB,QAC5B9G,EACA+wB,GAELD,GAAiBxkB,QACN5B,EAAoB5D,QAC1B9G,GACE0gB,KAAMsQ,EAAMvE,UAAWuK,SAAoB7K,GAAU,IACtD1f,EACHuD,cACA0K,iBAAkBgW,EAClBtT,eAAgBsP,GAAyBlmB,EAAcyvB,aACxD,CACCpK,OAAQngB,EACR6gB,IAAKiE,EACLhE,KAAM1lB,EACNya,YAAaiQ,EACbpQ,mBAAoB4M,GAA4BC,GAChD3M,gBAAiByS,EACjBlS,SAAUC,EACVsK,WAAY2E,EACZpQ,cAAemQ,GAAe/C,SAC9B1B,oBAAqBuE,EACrBtE,YAAa0H,EAAmB,SAAMh0B,IAEpC+E,EAAS,CACXisB,OACAgG,YACAxF,cACA1P,WACA4L,KAAMkH,GAEV,OAAOvmB,IAAcxK,EACf,CAAE1D,IAAKgO,KAAcpJ,GACrB,CAAEsI,KAAMc,KAAcpJ,EAAQ,GF5C5BR,SAAWlD,IACP8xB,EAAgBpW,MAAM1b,EAAQ,GAG1C,CACK,CAED,MAAM,mBAAEi1B,EAAkB,QAAEjxB,EAAO,SAAED,EAAQ,SAAEb,GAAasuB,GAA2B3rB,EAAO6vB,GAC9F,OAAO5xB,EAAiB,CACpBG,mBAAmB,EACnBhB,IAAKgyB,EACL/xB,SAAWlD,IACPkD,EAASlD,EAAQ,EAErBgE,UACAD,YAER,CEfiB,IAAC0tB,EAAiB9iB,EAAa4kB,CFehD,EG1CJ,SAAS,GAAW1tB,GAChB,OAAO4vB,GAAa,IACb5vB,EACHmE,QAAS,IACFnE,GAAOmE,QAGV+lB,sBAAuB,EAAA6F,iBAGnC,eCDA,MCEMC,GAAsBvsB,MAAOzD,EAAOyI,KACtC,MAAM0I,EAAM,IAAIrJ,GAAWW,EAAS0I,IAAIvH,YAQxC,OAPAmR,KAA8B/a,EAAMqlB,IAAK,OACzClU,EAAIR,SAAWmK,GAA2B3J,EAAKnR,EAAMqlB,KACrDlK,GAAkB,CACd1U,WAAYzG,EAAM2kB,OAClB1rB,IAAK+G,EAAMqlB,IACXjK,UAAWjK,IAER,CACHD,OAAQ,MACR5J,QAAS,IACDtH,EAAMiwB,OAAS,CAAEA,MAAOjwB,EAAMiwB,UAC/BrW,GAAsB,CACrB,8BAA+B5Z,EAAMmlB,uBAG7ChU,MACH,EA2DC+e,GAAYhoB,GAAkBmL,GAAmB2c,IAzDzBvsB,MAAO4D,IACjC,GAAIA,EAASE,YAAc,IAAK,CAC5B,MAAMvK,QAAe0mB,GAAcrc,GACnC,MAAM8R,GAAyBnc,EAAOqK,EAASE,WACnD,CAEI,MAAO,IACAwC,GAAI1C,EAASC,QAAS,CACrB6oB,aAAc,CAAC,sBAAuBvX,IACtCwX,aAAc,gBACdC,WAAY,mBACZC,QAAS,gBACTtH,aAAc,CAAC,gBAAiBnQ,IAChCkQ,cAAe,CAAC,iBAAkBrQ,IAClCc,KAAM,OACNC,cAAe,uBACf8W,eAAgB,wBAChBC,aAAc,sBACdC,eAAgB,wBAChBC,YAAa,CAAC,qBAAsBhY,IACpC6M,UAAW,mBACXtL,aAAc,gBACdC,mBAAoB,sBACpBE,gBAAiB,mBACjBD,gBAAiB,mBACjBwW,aAAc,gBACdtW,YAAa,eACbE,QAAS,CAAC,UAAW1B,IACrB+X,wBAAyB,kCACzBC,qBAAsB,+BACtBC,qBAAsB,kDACtBC,kBAAmB,gDACnBC,YAAa,8CACbC,iBAAkB,CACd,kDACArY,IAEJsY,aAAc,sBACdC,eAAgB,wBAChBC,kBAAmB,2BACnBC,WAAY,CAAC,uBAAwB3Y,IACrC4Y,SAAU,CAAC,sBAAuB5Y,IAClC6Y,eAAgB,yBAChBC,0BAA2B,CACvB,sCACA3Y,IAEJ4Y,0BAA2B,iCAE/B9W,SAAU5B,GAAoB1R,EAASC,SACvCG,UAAWL,GAAcC,GAGzBie,KAAMje,EAASwG,KAEvB,GAE+F,IAAKvF,GAAemL,aAAc,SAM/Hie,GAA2BjuB,MAAO8E,EAAQvI,KAC5C,MAAMyI,EAAWH,GAAcI,iBAAiBH,EAAQvI,IAClD,IAAEmR,EAAG,QAAE7J,EAAO,OAAE4J,SAAiB8e,GAAoBhwB,EAAOyI,GAIlE0I,EAAIC,aAAaugB,OAAOlf,GAAuB,IAC3ClK,EAAO2N,gBACP/E,EAAIC,aAAaugB,OAAOppB,EAAO0N,iBA5Fb,mBA4FmD1N,EAAO2N,gBAE5ElW,EAAM4xB,qBACNzgB,EAAIC,aAAaugB,OAAO,wBAAyB3xB,EAAM4xB,qBAEvD5xB,EAAM6xB,4BACN1gB,EAAIC,aAAaugB,OAAO,+BAAgC3xB,EAAM6xB,4BAElE,IAAK,MAAO1b,EAAYpc,KAAUZ,OAAO+W,QAAQ5I,GAAS2C,MAAK,EAAE6nB,IAAQC,KAAUD,EAAKE,cAAcD,KAClG5gB,EAAIC,aAAaugB,OAAOxb,EAAYpc,GAExC,MDxGe,GAAG8T,OAAMqD,SAAS,MAAOC,QAAS8gB,gBAAe9tB,MAChE,MAAM+S,EAAgBpM,GAAiB3G,IACjC,YAAEiH,EAAW,gBAAES,EAAe,SAAEN,EAAQ,aAAED,GAAiB4L,EAE3Dgb,EAAe,IAAIpqB,GAAWqJ,GACpChY,OAAO+W,QAAQ,CACX,CAAChG,IAAwBU,GACzB,CAACR,IAAyB,GAAGgB,KAAeS,IAC5C,CAAC1B,IAAuBoB,EACxB,CAACjB,IAA6BE,MAC1BynB,GAAc,CAAE,CAAC5nB,IAAsB4nB,EAAWroB,eAClD0B,GAAgB,CAAE,CAACf,IAAoBe,KAC5C0I,SAAQ,EAAE/a,EAAKc,MACdm4B,EAAa9gB,aAAaugB,OAAO14B,EAAKc,EAAM,IAEhD,MAAMqd,EAAgB,CAClBvJ,OACAvG,QAAS,CAAE,CAACkD,IAAc2G,EAAIgG,MAC9BjG,SACAC,IAAK+gB,GAGHpgB,EAAYd,GAAaoG,EAAeF,GAE9C,OADAgb,EAAa9gB,aAAaugB,O1F7BA,kB0F6B8B7f,GACjDogB,CAAY,ECgFZC,CAAW,CAAEjhB,SAAQC,MAAKtD,UAAM/U,GAAa,CAChDoS,eAAgB5C,GAAcyJ,QAC9B9G,cAAe1C,EAAO7D,UACnB4D,MACAC,GACL,EC5FA6pB,GAAgBpyB,IAClB,MAAMisB,EAAkB,IAAIW,gBAO5B,OANqB5uB,EAAmB,CACpCZ,IAAKi1B,GAAgBryB,EAAOisB,EAAgBkC,QAC5C9wB,SAAWlD,IACP8xB,EAAgBpW,MAAM1b,EAAQ,GAGnB,EAEjBk4B,GAAkB,CAACC,EAAmBxpB,IAAgBrF,UACxD,MAAQU,QAASouB,GAAwBD,GACnC,OAAE9tB,EAAM,UAAEc,EAAS,SAAEC,EAAQ,WAAElB,SAAqBL,EAAwB,EAAA2oB,QAAS2F,IACrF,UAAEnrB,EAAS,UAAEF,GAAcD,GAA8BsrB,EAAmBjuB,GAClFsC,GAAsB4rB,GAAqB7I,qBAC3C,MAAMJ,EAAWniB,IAAcxK,EAAoB2I,EAAY2B,EAAYA,EAC3EhK,EAAOU,MAAM,YAAYsJ,UAAkBqiB,MAC3C,MAAQhE,KAAMzX,EAAMmb,aAAc0B,EAAc3B,cAAevC,EAAMhN,KAAMsQ,EAAMnP,SAAUC,EAAU2K,UAAWuK,EAAWzV,YAAaiQ,SAAuB4F,GAAU,IAClK3qB,EACHuD,cACAyK,mBAAoBgf,GAAqB/I,WACzCtT,eAAgBsP,GAAyBlmB,EAAckzB,eACxD,CACC7N,OAAQngB,EACR6gB,IAAKiE,KACDiJ,GAAqBE,YAAc,CACnCxC,MAAO,SAASsC,EAAoBE,WAAWC,SAASH,EAAoBE,WAAWrM,OAE3FjB,oBAAqBoN,GAAqB7I,sBAExC7rB,EAAS,CACXgQ,OACA6c,eACAlE,OACA8D,cACAR,OACAlP,WACAkV,aAEJ,OAAO3oB,IAAcxK,EACf,CAAE1D,IAAKgO,KAAcpJ,GACrB,CAAEsI,KAAMc,KAAcpJ,EAAQ,ECpExC,SAAS,GAAamC,GAClB,OAAOoyB,GAAepyB,EAC1B,CCQA,MAoCM2yB,GAAezqB,GAAkBmL,IApCR,CAACrT,EAAOyI,KACnC,MAAM0I,EAAM,IAAIrJ,GAAWW,EAAS0I,IAAIvH,YAWxC,OAVAmR,KAA8B/a,EAAMqlB,IAAK,OACzClU,EAAIR,SAAWmK,GAA2B3J,EAAKnR,EAAMqlB,KACrDlK,GAAkB,CACd1U,WAAYzG,EAAM2kB,OAClB1rB,IAAK+G,EAAMqlB,IACXjK,UAAWjK,IAKR,CACHD,OAAQ,SACR5J,QALYsS,GAAsB,CAClC,8BAA+B5Z,EAAMmlB,sBAKrChU,MACH,IAE4B1N,MAAO4D,IACpC,GAAIA,EAASE,YAAc,IAAK,CAE5B,MAAMvK,QAAe0mB,GAAcrc,GACnC,MAAM8R,GAAyBnc,EAAOqK,EAASE,WACnD,CAOI,MAAO,IALSwC,GAAI1C,EAASC,QAAS,CAClC6oB,aAAc,CAAC,sBAAuBvX,IACtC2M,UAAW,mBACX4L,eAAgB,0BAIhB1pB,UAAWL,GAAcC,GAEjC,GAEwG,IAAKiB,GAAemL,aAAc,SCrBxImf,GAASnvB,MAAOQ,EAASjE,KAC3B,MAAM,SAAEuF,EAAQ,UAAED,EAAS,OAAEd,EAAM,WAAEH,SAAqBL,EAAwBC,EAASjE,IACrF,UAAEmH,EAAS,UAAEF,GAAcD,GAA8BhH,EAAOqE,GAEtE,IAAIilB,EAiBJ,OAlBA3iB,GAAsB3G,EAAMmE,SAASulB,qBAEjCviB,IAAcxK,GACd2sB,EAAW,GAAGhkB,IAAY2B,IAC1BhK,EAAOU,MAAM,WAAWsJ,YAAoBqiB,SAG5CA,EAAWriB,EACXhK,EAAOU,MAAM,4BAA4B2rB,aAEvCqJ,GAAa,IACZptB,EACH2Q,eAAgBsP,GAAyBlmB,EAAcuzB,SACxD,CACClO,OAAQngB,EACR6gB,IAAKiE,EACLnE,oBAAqBnlB,EAAMmE,SAASulB,sBAEjCviB,IAAcxK,EACf,CACE1D,IAAKgO,GAEP,CACEd,KAAMc,EACT,ECnDT,SAAS,GAAOjH,GACZ,OAAO4yB,GAAS,EAAAjG,QAAS3sB,EAC7B,CCCA,MCCM8yB,GAAa/4B,GACRg5B,mBAAmBh5B,EAAM4R,QAAQ,MAAO,MCgE7CqnB,GAA+B3L,GAAWA,EAAOtd,IAAIkpB,IACrDA,GAA2B5L,GAAWtd,GAAIsd,EAAQ,CACpD6L,OAAQ,WAENC,GAAyB9L,GAAWA,EAAOtd,IAAIqpB,IAC/CA,GAAqB/L,GAAWtd,GAAIsd,EAAQ,CAC9ChC,IAAK,MACL2D,aAAc,CAAC,eAAgBnQ,IAC/BW,KAAM,OACNyR,kBAAmB,CACf,oBACAlxB,GAAS+e,GAAgB/e,EAAOs5B,KAEpCC,KAAM,CAAC,OAAQ5a,IACfwY,aAAc,eACdqC,MAAO,CAAC,QAASC,MAEfH,GAAoChM,GAAWA,EAAOtd,KAAIqG,GAAS5N,OAAO4N,KAC1EojB,GAAoBnM,GAAWtd,GAAIsd,EAAQ,CAAEoM,YAAa,cAAeC,GAAI,OAU7EC,GAAgBzrB,GAAkBmL,IAvFR,CAACrT,EAAOyI,KACpC,MAAMnB,EAAUsS,GAAsB,CAClC,sBAAuB5Z,EAAM4zB,aAC7B,8BAA+B5zB,EAAMmlB,sBAEnC0O,EAAQja,GAAsB,CAChC,YAAa,IACb,qBAAsB5Z,EAAM8zB,kBAC5BC,UAAW/zB,EAAMg0B,UACjB,gBAAiBh0B,EAAMi0B,aACvB,cAAej0B,EAAMk0B,WACrB,WAAYl0B,EAAMm0B,QAClB5tB,OAAQvG,EAAMkzB,OACd,cAAelzB,EAAMo0B,aAEnBjjB,EAAM,IAAIrJ,GAAWW,EAAS0I,IAAIvH,YAExC,OADAuH,EAAI8W,OAAS,IAAIjgB,GAAuB6rB,GAAOjqB,WACxC,CACHsH,OAAQ,MACR5J,UACA6J,MACH,IAE6B1N,MAAO4D,IACrC,GAAIA,EAASE,YAAc,IAAK,CAE5B,MAAMvK,QAAe0mB,GAAcrc,GACnC,MAAM8R,GAAyBnc,EAAOqK,EAASE,WACnD,CACK,CACD,MAAMkhB,QAAe5F,GAAaxb,GAC5BshB,EAAW5e,GAAI0e,EAAQ,CACzB4L,eAAgB,CACZ,iBACAt6B,GAAS+e,GAAgB/e,EAAOi5B,KAEpCsB,SAAU,CACN,WACAv6B,GAAS+e,GAAgB/e,EAAOo5B,KAEpCW,kBAAmB,oBACnBE,UAAW,YACXC,aAAc,eACdM,YAAa,CAAC,cAAe3b,IAC7B4b,SAAU,CAAC,WAAY9b,IACvByb,QAAS,CAAC,UAAWzb,IACrB+b,KAAM,OACNC,sBAAuB,wBACvBxB,OAAQ,SACRkB,WAAY,eAEV/M,EAAS,CACX5f,UAAWL,GAAcC,MACtBshB,GAGP,MAsB8B,CAACthB,IACnC,MAAM,YAAEktB,EAAW,SAAEC,EAAQ,SAAEF,EAAW,GAAE,eAAED,EAAiB,GAAE,sBAAEK,GAA2BrtB,EACxFstB,EAAmBJ,KAAiBG,IACpCH,IAAgBG,EAChBE,EAA4BJ,IAAaF,EAASn8B,OAASk8B,EAAel8B,OAChF,IAAKw8B,IAAoBC,EACrB,MAAM,IAAI1Z,EACd,EA9BI2Z,CAA8BxN,GACvBA,CACX,IA8B2G,IAAK/e,GAAemL,aAAc,SCvE3IqhB,GAAgB,IAChBC,GAAOtxB,MAAOQ,EAASjE,KACzB,MAAM,QAAEmE,EAAU,CAAC,GAAMnE,GACnB,SAAEuF,EAAQ,OAAEf,EAAQc,UAAW0vB,EAAe,WAAE3wB,SAAsBL,EAAwBC,EAASjE,IACvG,UAAEmH,EAAS,UAAEF,GHxByB,EAACjH,EAAOqE,KAGpD,GADAjI,IAAwB4D,EAAMuG,QAAUvG,EAAMmG,MAAOnM,EAA2BiB,oCAL3D,CAAC+E,QACAlH,IAAfkH,EAAMmG,KAKT8uB,CAAiBj1B,GAAQ,CACzB,MAAM,KAAEmG,GAASnG,EACXiH,EAA4B,iBAATd,EACnBA,EACAA,EAAK,CAAE9B,WAAY0C,GAAkB1C,KAG3C,OADAjI,GAAuB6K,EAAUC,WAAW,KAAMlN,EAA2BkB,yBACtE,CACHiM,UAAWvK,EACXqK,YAER,CAEI,MAAO,CAAEE,UAAWzK,EAAsBuK,UAAWjH,EAAMuG,QAAU,GACzE,EGOiC2uB,CAAwCl1B,EAAOqE,GAChFsC,GAAsBxC,EAAQulB,qBAC9B,MAAM1jB,EAAoBmB,IAAczK,EAExC,GAAIyH,GAASgxB,UAAYhxB,GAASixB,UAAYjxB,GAASkxB,WAAY,CAC/D,MAAMC,EAAanxB,EACnBlH,EAAOU,MAAM,oCAAoC23B,GAAYF,SAAW,aAAaE,GAAYF,WAAa,MAAME,GAAYD,UAAY,cAAcC,GAAYD,YAAc,MACxL,CACA,MAAME,EAAa,CACf5Q,OAAQngB,EACR0uB,OAAQltB,EAAoB,GAAGgvB,IAAkB/tB,IAAcA,EAC/DktB,QAAShwB,GAASgxB,aAAUr8B,EAAYqL,GAASixB,SACjDtB,kBAAmB3vB,GAASgxB,aAAUr8B,EAAYqL,GAASkxB,UAC3DrB,UAAWwB,GAAarxB,GACxBghB,oBAAqBhhB,GAASulB,oBAC9BuK,aAAc,OAElBh3B,EAAOU,MAAM,uBAAuB43B,EAAWrC,WAC/C,MAAMuC,EAAgB,CAClBlwB,WACAgwB,cAEJ,OAAIpxB,EAAQgxB,QACJnvB,EACO0vB,GAAmB,IACnBD,EACHT,oBAIGW,GAAiBF,GAIxBzvB,EACO4vB,GAAgB,IAAKH,EAAeT,oBAGpCa,GAAcJ,EAE7B,EAGEC,GAAqBjyB,OAAS8B,WAAUgwB,aAAYP,sBACtD,MAAMc,EAAa,GACnB,IAAIC,EAAoBR,EAAWzB,kBACnC,EAAG,CACC,MAAQkC,MAAOC,EAAaZ,UAAWa,SAAwBN,GAAgB,CAC3EZ,kBACAzvB,WACAgwB,WAAY,IACLA,EACHzB,kBAAmBiC,EACnB5B,QAASW,MAGjBgB,EAAWjnB,QAAQonB,GACnBF,EAAoBG,CACxB,OAASH,GACT,MAAO,CACHC,MAAOF,EACV,EAGCF,GAAkBnyB,OAAS8B,WAAUgwB,aAAYP,sBACnD,MAAMmB,EAAkB,IAAKZ,KACxBY,EAAgBhC,SAAWgC,EAAgBhC,QAAUW,MACtD73B,EAAOU,MAAM,gCACbw4B,EAAgBhC,QAAUW,IAE9B,MAAMztB,QAAiBssB,GAAc,IAC9BpuB,EACH2Q,eAAgBsP,GAAyBlmB,EAAc82B,OACxDD,GACGE,EAAaC,GAAsBjvB,GAEzC,OADAkvB,GAAuBJ,EAAiBE,GACnCA,GAAY/B,SAKV,CACH0B,MAAOK,EAAW/B,SAASvqB,KAAIuP,IAAQ,CACnCrgB,IAAK+7B,EACC1b,EAAK+L,IAAImR,UAAUxB,EAAgB78B,QACnCmhB,EAAK+L,IACXyE,KAAMxQ,EAAKE,KACXkR,aAAcpR,EAAK0P,aACnBxC,KAAMlN,EAAKga,SAEf+B,UAAWgB,EAAW3B,uBAbf,CACHsB,MAAO,GAad,EAECL,GAAmBlyB,OAAS8B,WAAUgwB,iBACxC,MAAMO,EAAa,GACbW,EAAmB,GACzB,IAAIV,EAAoBR,EAAWzB,kBACnC,EAAG,CACC,MAAQkC,MAAOC,EAAaQ,iBAAkBC,EAAsBrB,UAAWa,SAAyBL,GAAc,CAClHtwB,WACAgwB,WAAY,IACLA,EACHzB,kBAAmBiC,EACnB5B,QAASW,MAGjBgB,EAAWjnB,QAAQonB,GACnBQ,EAAiB5nB,QAAS6nB,GAAwB,IAClDX,EAAoBG,CACxB,OAASH,GACT,MAAO,CACHC,MAAOF,EACPW,mBACH,EAECZ,GAAgBpyB,OAAS8B,WAAUgwB,iBACrC,MAAMY,EAAkB,IAAKZ,KACxBY,EAAgBhC,SAAWgC,EAAgBhC,QAAUW,MACtD73B,EAAOU,MAAM,gCACbw4B,EAAgBhC,QAAUW,IAE9B,MAAMztB,QAAiBssB,GAAc,IAC9BpuB,EACH2Q,eAAgBsP,GAAyBlmB,EAAc82B,OACxDD,GACGE,EAAaC,GAAsBjvB,GACzCkvB,GAAuBJ,EAAiBE,GACxC,MAAQ/B,SAAU3L,EAAU+L,sBAAuBiC,EAAuBtC,eAAgBuC,GAAoBP,EACxGI,EAAmBG,GAAkBC,GAAoCD,GAC/E,OAAKjO,EAOE,CACHqN,MAAOrN,EAAS5e,KAAIuP,IAAQ,CACxBnT,KAAMmT,EAAK+L,IACXyE,KAAMxQ,EAAKE,KACXkR,aAAcpR,EAAK0P,aACnBxC,KAAMlN,EAAKga,SAEf+B,UAAWsB,EACXF,oBAdO,CACHT,MAAO,GACPX,UAAWsB,EACXF,mBAYP,EAECI,GAAuCD,GAClCA,EAAejiB,QAAO,CAACmiB,GAAkB5D,aACxCA,GACA4D,EAAejoB,KAAKqkB,GAEjB4D,IACR,IAEDtB,GAAgBrxB,IAClB,GAA2C,YAAvCA,GAAS4yB,iBAAiBC,SAC1B,OAAO7yB,GAAS4yB,iBAAiBhD,W3H5Kf,G2H6KtB,EAEEwC,GAAyB,CAACU,EAAWZ,KAMvC,GAL8BY,EAAUtS,SAAW0R,EAAW5B,MAC1DwC,EAAUjD,YAAcqC,EAAWrC,WACnCiD,EAAU9C,UAAYkC,EAAWlC,SACjC8C,EAAU/D,SAAWmD,EAAWnD,QAChC+D,EAAUnD,oBAAsBuC,EAAWvC,kBAE3C,MAAM,IAAI5Y,EACd,EAMEob,GAAyBD,IAC3B,GAAgC,QAA5BA,EAAWpC,aACX,OAAOoC,EAEX,MAAMa,EAAoB,IAAKb,GAsB/B,MApBA,CAAC,YAAa,SAAU,cAAcriB,SAAQxa,IAC1C,MAAMO,EAAQs8B,EAAW78B,GACJ,iBAAVO,IACPm9B,EAAkB19B,GAAQs5B,GAAU/4B,GACxC,IAGAs8B,EAAW/B,WACX4C,EAAkB5C,SAAW+B,EAAW/B,SAASvqB,KAAIrG,IAAW,IACzDA,EACH2hB,IAAK3hB,EAAQ2hB,IAAMyN,GAAUpvB,EAAQ2hB,KAAO3hB,EAAQ2hB,SAIxDgR,EAAWhC,iBACX6C,EAAkB7C,eAAiBgC,EAAWhC,eAAetqB,KAAIrG,IAAW,IACrEA,EACHwvB,OAAQxvB,EAAQwvB,OAASJ,GAAUpvB,EAAQwvB,QAAUxvB,EAAQwvB,YAG9DgE,CAAiB,ECtO5B,SAAS,GAAKl3B,GACV,OAAO+0B,GAAO,EAAApI,QAAS3sB,GAAS,CAAC,EACrC,CCsBA,MAAMm3B,GAAgB1zB,MAAOQ,EAASjE,EAAO4f,KACzC,MAAM,SAAEra,EAAQ,OAAEf,EAAM,UAAEc,EAAS,WAAEjB,SAAqBL,EAAwBC,EAASjE,IACrF,UAAEmH,EAAS,UAAEF,GAAcD,GAA8BhH,EAAOqE,GACtEsC,GAAsB3G,EAAMmE,SAASulB,qBACrC,MAAMJ,EAAWniB,IAAcxK,EAAoB2I,EAAY2B,EAAYA,EAC3EhK,EAAOU,MAAM,qBAAqBsJ,UAAkBqiB,KACpD,MAAMjiB,QAAiByhB,GAAW,IAC3BvjB,EACH2Q,eAAgBsP,GAAyB5F,GAAUtgB,EAAc83B,gBAClE,CACCzS,OAAQngB,EACR6gB,IAAKiE,EACLnE,oBAAqBnlB,EAAMmE,SAASulB,sBAElC7rB,EAAS,CACXysB,YAAajjB,EAASgT,YACtBmM,KAAMnf,EAAS0hB,cACfe,KAAMziB,EAASmS,KACfkR,aAAcrjB,EAAS2hB,aACvBpO,SAAUvT,EAASsT,SACnBmV,UAAWzoB,EAASke,WAExB,OAAOpe,IAAcxK,EACf,CAAE1D,IAAKgO,KAAcpJ,GACrB,CAAEsI,KAAMc,KAAcpJ,EAAQ,EChDxC,SAAS,GAAcmC,GACnB,OAAOm3B,GAAgB,EAAAxK,QAAS3sB,EACpC,CCUA,MAkDMq3B,GAAanvB,GAAkBmL,IAlDR5P,MAAOzD,EAAOyI,KACvC,MAAMnB,EAAU,UACFyS,GAAgC/Z,MACvC4Z,GAAsB,CACrB,oBAAqB5Z,EAAMs3B,WAC3B,2BAA4Bt3B,EAAMu3B,kBAClC,6BAA8Bv3B,EAAMw3B,kBACpC,wCAAyCx3B,EAAMy3B,6BAA6Bjd,cAC5E,qCAAsCxa,EAAM03B,0BAC5C,8BAA+B13B,EAAMmlB,uBAkBf,EAACnlB,EAAOsH,KAOtC,GANoB,CAChBA,EAAQ,uBAAyBtH,EAAMs3B,WACvCnQ,GAAennB,EAAMu3B,kBAAmBjwB,EAAQ,6BAChD6f,GAAennB,EAAMw3B,kBAAmBlwB,EAAQ,+BAChD6f,GAAennB,EAAMy3B,6BAA6Bjd,cAAelT,EAAQ,2CAE7DqW,MAAKga,IAAeA,IAChC,MAAM,IAAIzc,EACd,EAxBA0c,CAA0B53B,EAAOsH,GACjC,MAAM6J,EAAM,IAAIrJ,GAAWW,EAAS0I,IAAIvH,YAQxC,OAPAmR,KAA8B/a,EAAMqlB,IAAK,OACzClU,EAAIR,SAAWmK,GAA2B3J,EAAKnR,EAAMqlB,KACrDlK,GAAkB,CACd1U,WAAYzG,EAAM2kB,OAClB1rB,IAAK+G,EAAMqlB,IACXjK,UAAWjK,IAER,CACHD,OAAQ,MACR5J,UACA6J,MACH,IAa0B1N,MAAO4D,IAClC,GAAIA,EAASE,YAAc,IAAK,CAC5B,MAAMvK,QAAe0mB,GAAcrc,GACnC,MAAM8R,GAAyBnc,EAAOqK,EAASE,WACnD,CAGI,aADMsb,GAAaxb,GACZ,CACHI,UAAWL,GAAcC,GAEjC,GAEkG,IAAKiB,GAAemL,aAAc,SCpClIokB,GAAyB,CAACC,EAAcC,KAI1C37B,OAEkBtD,IAAjBg/B,QAA6Ch/B,IAAfi/B,IAEzBA,IAAeD,EAAe99B,EAA2BuB,kCAAkC,EAE/Fy8B,GAAOv0B,MAAOQ,EAASjE,IAXD,CAACA,GAAU8G,GAAgB9G,EAAMqG,QAYlD4xB,CAAoBj4B,GACrBk4B,GAAaj0B,EAASjE,GACtBm4B,GAAYl0B,EAASjE,GAEzBk4B,GAAez0B,MAAOQ,EAASjE,KACjC,MAAM,OAAEqG,EAAM,YAAED,GAAgBpG,EAChC63B,GAAuBxxB,EAAO7B,OAAQ4B,EAAY5B,QAClD,MAAQA,OAAQszB,SAAuB9zB,EAAwBC,EAAS,CACpEkC,KAAMnG,EAAMqG,OAAOF,KACnBhC,QAAS,CACLwB,4BAA6B3F,EAAMmE,SAASwB,+BACzC3F,EAAMqG,WAKX,SAAEd,EAAUf,OAAQuzB,EAAU,WAAE1zB,SAAsBL,EAAwBC,EAAS,CACzFkC,KAAMnG,EAAMoG,YAAYD,KACxBhC,QAAS,CACLwB,4BAA6B3F,EAAMmE,SAASwB,4BAC5CE,eAAgB7F,EAAMmE,SAAS0B,kBAC5B7F,EAAMoG,eAGjBhK,IAAwBiK,EAAOF,KAAMnM,EAA2BQ,cAChE4B,IAAwBgK,EAAYD,KAAMnM,EAA2BS,mBACrE,MAAQwM,UAAWmxB,GAAepxB,GAA8BX,EAAQhC,IAChE4C,UAAWoxB,GAAoBrxB,GAA8BZ,EAAa/B,GAClFsC,GAAsBN,EAAOqjB,qBAC7B/iB,GAAsBP,EAAYsjB,qBAClC,MAAM4O,EAAkB,GAAGR,KAAgBM,IACrCG,EAAuBF,EAY7B,OAXAp7B,EAAOU,MAAM,YAAY26B,UAAwBC,aAC3CC,GAAY,CACdnyB,OAAQiyB,EACRlyB,YAAamyB,EACb/zB,OAAQuzB,EACRxyB,WACAkzB,iBAAkBz4B,EAAMqG,OAAOoyB,iBAC/B3O,KAAM9pB,EAAMqG,OAAOyjB,KACnB4O,0BAA2B14B,EAAMqG,QAAQqjB,oBACzCA,oBAAqB1pB,EAAMoG,aAAasjB,sBAErC,CAAEvjB,KAAMoyB,EAAsB,EAGnCJ,GAAc10B,MAAOQ,EAASjE,KAChC,MAAM,OAAEqG,EAAM,YAAED,GAAgBpG,EAChC63B,GAAuBxxB,EAAO7B,OAAQ4B,EAAY5B,QAClDpI,IAAwBiK,EAAOpN,IAAKe,EAA2BM,aAC/D8B,IAAwBgK,EAAYnN,IAAKe,EAA2BO,kBACpEoM,GAAsBN,EAAOqjB,qBAC7B/iB,GAAsBP,EAAYsjB,qBAClC,MAAQllB,OAAQszB,EAAcxyB,UAAWqzB,SAA0B30B,EAAwBC,EAAS,IAC7FjE,EACHmE,QAAS,CAGLwB,4BAA6B3F,EAAMmE,SAASwB,+BACzC3F,EAAMqG,WAKX,SAAEd,EAAUf,OAAQuzB,EAAYzyB,UAAWszB,SAAgC50B,EAAwBC,EAAS,IAC3GjE,EACHmE,QAAS,CAGLwB,4BAA6B3F,EAAMmE,SAASwB,+BACzC3F,EAAMoG,eAIXkyB,EAAkB,GAAGR,KAAgBa,IAAkBtyB,EAAOpN,MAC9Ds/B,EAAuB,GAAGK,IAAuBxyB,EAAYnN,MAYnE,OAXAgE,EAAOU,MAAM,YAAY26B,UAAwBC,aAC3CC,GAAY,CACdnyB,OAAQiyB,EACRlyB,YAAamyB,EACb/zB,OAAQuzB,EACRxyB,WACAkzB,iBAAkBz4B,EAAMqG,OAAOoyB,iBAC/B3O,KAAM9pB,EAAMqG,OAAOyjB,KACnB4O,0BAA2B14B,EAAMqG,QAAQqjB,oBACzCA,oBAAqB1pB,EAAMoG,aAAasjB,sBAErC,CACHzwB,IAAKmN,EAAYnN,IACpB,EAECu/B,GAAc/0B,OAAS4C,SAAQD,cAAa5B,SAAQe,WAAUkzB,mBAAkB3O,OAAM4O,4BAA2BhP,gCAC7G2N,GAAW,IACV9xB,EACH2Q,eAAgBsP,GAAyBlmB,EAAcu5B,OACxD,CACClU,OAAQngB,EACR8yB,WAAYjxB,EACZgf,IAAKjf,EACLmxB,kBAAmB,OACnBC,kBAAmB1N,EACnB2N,4BAA6BgB,EAC7Bf,0BAA2BgB,EAC3BvT,oBAAqBuE,GACvB,EC7IN,SAAS,GAAK1pB,GACV,OAAOg4B,GAAO,EAAArL,QAAS3sB,EAC3B,CCwBA,MAAM84B,GAASr1B,MAAOQ,EAASjE,KAC3B,MAAQmE,QAAS40B,GAAkB/4B,GAC7B,SAAEuF,EAAQ,UAAED,EAAS,OAAEd,EAAM,WAAEH,SAAqBL,EAAwBC,EAASjE,IACrF,UAAEmH,EAAS,UAAEF,GAAcD,GAA8BhH,EAAOqE,GACtEsC,GAAsBoyB,GAAerP,qBACrC,MAAMJ,EAAWniB,IAAcxK,EAAoB2I,EAAY2B,EAAYA,EACvE8xB,GAAeC,+BACT7B,GAAclzB,EAASjE,EAAOV,EAAc25B,QAEtD,IAAIC,EAAqBH,GAAeI,WlIpCT,IkIqC/B,MAAMC,EAAqD,mBAAzB7zB,EAASC,kBAC/BD,EAASC,cACfD,EAASC,YACT6zB,EAAoBD,EAAmBnH,WAC7C,GAAIoH,EAAmB,CACnB,MAAMC,EAAyBl4B,KAAKC,OAAOg4B,EAAkBvhB,UAAY9M,KAAKsH,OAAS,KACvF4mB,EAAqB93B,KAAKilB,IAAIiT,EAAwBJ,EAC1D,CAIA,OAFA98B,EAAsB88B,GADQK,OACqCv/B,EAA2BY,6BAEvF,CACHuW,UAAWugB,GAAyB,IAC7BnsB,EACHC,YAAa4zB,EACbnH,WAAYiH,GACb,CACCvU,OAAQngB,EACR6gB,IAAKiE,KACDyP,GAAehS,oBAAsB,CACrC8K,2BAA4B/K,GAA4BiS,EAAchS,wBAEtEgS,GAAezO,aAAe,CAC9BsH,oBAAqBmH,EAAczO,aAEvCnF,oBAAqB4T,GAAerP,sBAExC8P,UAAW,IAAIxuB,KAAKA,KAAKsH,MAA6B,IAArB4mB,GACpC,EChEL,SAAS,GAAOl5B,GACZ,OAAO84B,GAAS,EAAAnM,QAAS3sB,EAC7B","sources":["webpack:///webpack/universalModuleDefinition","webpack:///./node_modules/crc-32/crc32.js","webpack:///external umd \"aws_amplify_core\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./dist/esm/errors/types/validation.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/errors/AmplifyError.mjs","webpack:///./dist/esm/errors/StorageError.mjs","webpack:///./dist/esm/errors/utils/assertValidationError.mjs","webpack:///./dist/esm/providers/s3/utils/constants.mjs","webpack:///./dist/esm/errors/CanceledError.mjs","webpack:///./dist/esm/utils/logger.mjs","webpack:///./dist/esm/providers/s3/utils/transferTask.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/types.mjs","webpack:///./node_modules/@smithy/md5-js/node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js","webpack:///./node_modules/@smithy/md5-js/dist-es/constants.js","webpack:///./node_modules/@smithy/md5-js/dist-es/index.js","webpack:///./dist/esm/providers/s3/utils/client/runtime/base64/index.browser.mjs","webpack:///./dist/esm/providers/s3/utils/readFile.mjs","webpack:///./dist/esm/providers/s3/utils/md5.mjs","webpack:///./dist/esm/utils/resolvePrefix.mjs","webpack:///./dist/esm/providers/s3/utils/resolveS3ConfigAndInput.mjs","webpack:///./dist/esm/errors/constants.mjs","webpack:///./dist/esm/providers/s3/utils/validateBucketOwnerID.mjs","webpack:///./dist/esm/providers/s3/utils/isInputWithPath.mjs","webpack:///./dist/esm/providers/s3/utils/resolveIdentityId.mjs","webpack:///./dist/esm/providers/s3/utils/validateStorageOperationInput.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/serde/responseInfo.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/utils/amplifyUrl/index.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/internal/composeServiceApi.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/middleware.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getSignedHeaders.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/constants.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getSigningValues.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getFormattedDates.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCredentialScope.mjs","webpack:///./node_modules/tslib/tslib.es6.mjs","webpack:///./node_modules/@aws-crypto/sha256-js/build/module/constants.js","webpack:///./node_modules/@aws-crypto/sha256-js/build/module/RawSha256.js","webpack:///./node_modules/@aws-crypto/util/build/module/convertToBuffer.js","webpack:///./node_modules/@aws-crypto/util/node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js","webpack:///./node_modules/@aws-crypto/sha256-js/build/module/jsSha256.js","webpack:///./node_modules/@aws-crypto/util/build/module/isEmptyData.js","webpack:///./node_modules/@smithy/util-hex-encoding/dist-es/index.js","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/dataHashHelpers.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalHeaders.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalQueryString.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalUri.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getHashedPayload.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getSignature.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalRequest.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getStringToSign.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getSigningKey.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/utils/getSkewCorrectedDate.mjs","webpack:///./dist/esm/providers/s3/utils/client/runtime/constants.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/utils/memoization.mjs","webpack:///./dist/esm/providers/s3/utils/client/runtime/xhrTransferHandler.mjs","webpack:///./dist/esm/providers/s3/utils/client/runtime/s3TransferHandler/xhr.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/internal/composeTransferHandler.mjs","webpack:///./dist/esm/providers/s3/utils/client/runtime/contentSha256middleware.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/userAgent/middleware.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/middleware.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/signRequest.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/utils/getUpdatedSystemClockOffset.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/utils/isClockSkewed.mjs","webpack:///./dist/esm/providers/s3/utils/client/utils/deserializeHelpers.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/utils/extendedEncodeURIComponent.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/types/errors.mjs","webpack:///./dist/esm/providers/s3/utils/client/utils/serializeHelpers.mjs","webpack:///./dist/esm/errors/IntegrityError.mjs","webpack:///./dist/esm/providers/s3/utils/validateObjectUrl.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/version.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/detection/helpers.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/detection/index.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/detection/Expo.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/detection/ReactNative.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/detection/Next.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/detection/Nuxt.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/detection/Angular.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/detection/React.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/detection/Vue.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/detection/Svelte.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/detection/Web.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/detectFramework.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/customUserAgent.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/index.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/endpoints/partitions.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/endpoints/getDnsSuffix.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/jitteredBackoff.mjs","webpack:///./dist/esm/providers/s3/utils/client/runtime/xmlParser/dom.mjs","webpack:///./dist/esm/providers/s3/utils/client/utils/parsePayload.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/isClockSkewError.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/defaultRetryDecider.mjs","webpack:///./dist/esm/providers/s3/utils/client/utils/createRetryDecider.mjs","webpack:///./dist/esm/providers/s3/utils/client/s3data/base.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/utils/retry/jitteredBackoff.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/utils/retry/constants.mjs","webpack:///./dist/esm/providers/s3/utils/client/s3data/putObject.mjs","webpack:///./dist/esm/providers/s3/utils/userAgent.mjs","webpack:///./dist/esm/providers/s3/utils/hexUtils.mjs","webpack:///./dist/esm/providers/s3/utils/crc32.mjs","webpack:///./dist/esm/providers/s3/utils/constructContentDisposition.mjs","webpack:///./dist/esm/providers/s3/utils/client/utils/integrityHelpers.mjs","webpack:///./dist/esm/providers/s3/utils/client/s3data/completeMultipartUpload.mjs","webpack:///./dist/esm/providers/s3/utils/validateMultipartUploadXML.mjs","webpack:///./dist/esm/providers/s3/utils/client/s3data/abortMultipartUpload.mjs","webpack:///./dist/esm/providers/s3/utils/client/s3data/headObject.mjs","webpack:///./dist/esm/providers/s3/utils/client/s3data/uploadPart.mjs","webpack:///./dist/esm/providers/s3/apis/internal/uploadData/multipart/uploadPartExecutor.mjs","webpack:///./dist/esm/providers/s3/utils/client/s3data/listParts.mjs","webpack:///./dist/esm/providers/s3/apis/internal/uploadData/multipart/uploadCache.mjs","webpack:///./dist/esm/providers/s3/utils/client/s3data/createMultipartUpload.mjs","webpack:///./dist/esm/providers/s3/apis/internal/uploadData/multipart/calculatePartSize.mjs","webpack:///./dist/esm/providers/s3/apis/internal/uploadData/multipart/getDataChunker.mjs","webpack:///./dist/esm/providers/s3/apis/internal/uploadData/multipart/uploadHandlers.mjs","webpack:///./dist/esm/providers/s3/apis/internal/uploadData/multipart/initialUpload.mjs","webpack:///./dist/esm/providers/s3/utils/getCombinedCrc32.native.mjs","webpack:///./dist/esm/providers/s3/apis/internal/uploadData/multipart/progressTracker.mjs","webpack:///./dist/esm/providers/s3/apis/internal/uploadData/index.mjs","webpack:///./dist/esm/providers/s3/apis/internal/uploadData/byteLength.mjs","webpack:///./dist/esm/providers/s3/apis/internal/uploadData/putObjectJob.mjs","webpack:///./dist/esm/providers/s3/apis/uploadData.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/presignUrl.mjs","webpack:///./dist/esm/providers/s3/utils/client/s3data/getObject.mjs","webpack:///./dist/esm/providers/s3/apis/internal/downloadData.mjs","webpack:///./dist/esm/providers/s3/apis/downloadData.mjs","webpack:///./dist/esm/providers/s3/utils/client/s3data/deleteObject.mjs","webpack:///./dist/esm/providers/s3/apis/internal/remove.mjs","webpack:///./dist/esm/providers/s3/apis/remove.mjs","webpack:///./dist/esm/providers/s3/utils/validateStorageOperationInputWithPrefix.mjs","webpack:///./dist/esm/providers/s3/utils/urlDecoder.mjs","webpack:///./dist/esm/providers/s3/utils/client/s3data/listObjectsV2.mjs","webpack:///./dist/esm/providers/s3/apis/internal/list.mjs","webpack:///./dist/esm/providers/s3/apis/list.mjs","webpack:///./dist/esm/providers/s3/apis/internal/getProperties.mjs","webpack:///./dist/esm/providers/s3/apis/getProperties.mjs","webpack:///./dist/esm/providers/s3/utils/client/s3data/copyObject.mjs","webpack:///./dist/esm/providers/s3/apis/internal/copy.mjs","webpack:///./dist/esm/providers/s3/apis/copy.mjs","webpack:///./dist/esm/providers/s3/apis/internal/getUrl.mjs","webpack:///./dist/esm/providers/s3/apis/getUrl.mjs"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"aws_amplify_core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"aws_amplify_storage\", [\"aws_amplify_core\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"aws_amplify_storage\"] = factory(require(\"aws_amplify_core\"));\n\telse\n\t\troot[\"aws_amplify_storage\"] = factory(root[\"aws_amplify_core\"]);\n})(this, (__WEBPACK_EXTERNAL_MODULE__556__) => {\nreturn ","/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.2';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n","module.exports = __WEBPACK_EXTERNAL_MODULE__556__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar StorageValidationErrorCode;\n(function (StorageValidationErrorCode) {\n    StorageValidationErrorCode[\"NoCredentials\"] = \"NoCredentials\";\n    StorageValidationErrorCode[\"NoIdentityId\"] = \"NoIdentityId\";\n    StorageValidationErrorCode[\"NoKey\"] = \"NoKey\";\n    StorageValidationErrorCode[\"NoSourceKey\"] = \"NoSourceKey\";\n    StorageValidationErrorCode[\"NoDestinationKey\"] = \"NoDestinationKey\";\n    StorageValidationErrorCode[\"NoSourcePath\"] = \"NoSourcePath\";\n    StorageValidationErrorCode[\"NoDestinationPath\"] = \"NoDestinationPath\";\n    StorageValidationErrorCode[\"NoBucket\"] = \"NoBucket\";\n    StorageValidationErrorCode[\"NoRegion\"] = \"NoRegion\";\n    StorageValidationErrorCode[\"InvalidStorageBucket\"] = \"InvalidStorageBucket\";\n    StorageValidationErrorCode[\"InvalidCopyOperationStorageBucket\"] = \"InvalidCopyOperationStorageBucket\";\n    StorageValidationErrorCode[\"InvalidStorageOperationPrefixInput\"] = \"InvalidStorageOperationPrefixInput\";\n    StorageValidationErrorCode[\"InvalidStorageOperationInput\"] = \"InvalidStorageOperationInput\";\n    StorageValidationErrorCode[\"InvalidAWSAccountID\"] = \"InvalidAWSAccountID\";\n    StorageValidationErrorCode[\"InvalidStoragePathInput\"] = \"InvalidStoragePathInput\";\n    StorageValidationErrorCode[\"InvalidUploadSource\"] = \"InvalidUploadSource\";\n    StorageValidationErrorCode[\"ObjectIsTooLarge\"] = \"ObjectIsTooLarge\";\n    StorageValidationErrorCode[\"UrlExpirationMaxLimitExceed\"] = \"UrlExpirationMaxLimitExceed\";\n    StorageValidationErrorCode[\"InvalidLocationCredentialsCacheSize\"] = \"InvalidLocationCredentialsCacheSize\";\n    StorageValidationErrorCode[\"LocationCredentialsStoreDestroyed\"] = \"LocationCredentialsStoreDestroyed\";\n    StorageValidationErrorCode[\"InvalidS3Uri\"] = \"InvalidS3Uri\";\n    StorageValidationErrorCode[\"InvalidCustomEndpoint\"] = \"InvalidCustomEndpoint\";\n    StorageValidationErrorCode[\"ForcePathStyleEndpointNotSupported\"] = \"ForcePathStyleEndpointNotSupported\";\n    StorageValidationErrorCode[\"DnsIncompatibleBucketName\"] = \"DnsIncompatibleBucketName\";\n})(StorageValidationErrorCode || (StorageValidationErrorCode = {}));\nconst validationErrorMap = {\n    [StorageValidationErrorCode.NoCredentials]: {\n        message: 'Credentials should not be empty.',\n    },\n    [StorageValidationErrorCode.NoIdentityId]: {\n        message: 'Missing identity ID when accessing objects in protected or private access level.',\n    },\n    [StorageValidationErrorCode.NoKey]: {\n        message: 'Missing key in api call.',\n    },\n    [StorageValidationErrorCode.NoSourceKey]: {\n        message: 'Missing source key in copy api call.',\n    },\n    [StorageValidationErrorCode.NoDestinationKey]: {\n        message: 'Missing destination key in copy api call.',\n    },\n    [StorageValidationErrorCode.NoSourcePath]: {\n        message: 'Missing source path in copy api call.',\n    },\n    [StorageValidationErrorCode.NoDestinationPath]: {\n        message: 'Missing destination path in copy api call.',\n    },\n    [StorageValidationErrorCode.NoBucket]: {\n        message: 'Missing bucket name while accessing object.',\n    },\n    [StorageValidationErrorCode.NoRegion]: {\n        message: 'Missing region while accessing object.',\n    },\n    [StorageValidationErrorCode.UrlExpirationMaxLimitExceed]: {\n        message: 'Url Expiration can not be greater than 7 Days.',\n    },\n    [StorageValidationErrorCode.ObjectIsTooLarge]: {\n        message: 'Object size cannot not be greater than 5TB.',\n    },\n    [StorageValidationErrorCode.InvalidUploadSource]: {\n        message: 'Upload source type can only be a `Blob`, `File`, `ArrayBuffer`, or `string`.',\n    },\n    [StorageValidationErrorCode.InvalidStorageOperationInput]: {\n        message: 'Path or key parameter must be specified in the input. Both can not be specified at the same time.',\n    },\n    [StorageValidationErrorCode.InvalidAWSAccountID]: {\n        message: 'Invalid AWS account ID was provided.',\n    },\n    [StorageValidationErrorCode.InvalidStorageOperationPrefixInput]: {\n        message: 'Both path and prefix can not be specified at the same time.',\n    },\n    [StorageValidationErrorCode.InvalidStoragePathInput]: {\n        message: 'Input `path` does not allow a leading slash (/).',\n    },\n    [StorageValidationErrorCode.InvalidLocationCredentialsCacheSize]: {\n        message: 'locationCredentialsCacheSize must be a positive integer.',\n    },\n    [StorageValidationErrorCode.LocationCredentialsStoreDestroyed]: {\n        message: `Location-specific credentials store has been destroyed.`,\n    },\n    [StorageValidationErrorCode.InvalidS3Uri]: {\n        message: 'Invalid S3 URI.',\n    },\n    [StorageValidationErrorCode.InvalidStorageBucket]: {\n        message: 'Unable to lookup bucket from provided name in Amplify configuration.',\n    },\n    [StorageValidationErrorCode.InvalidCopyOperationStorageBucket]: {\n        message: 'Missing bucket option in either source or destination.',\n    },\n    [StorageValidationErrorCode.InvalidCustomEndpoint]: {\n        message: 'Invalid S3 custom endpoint.',\n    },\n    [StorageValidationErrorCode.ForcePathStyleEndpointNotSupported]: {\n        message: 'Path style URLs are not supported with S3 Transfer Acceleration.',\n    },\n    [StorageValidationErrorCode.DnsIncompatibleBucketName]: {\n        message: `The bucket name isn't DNS compatible.`,\n    },\n};\n\nexport { StorageValidationErrorCode, validationErrorMap };\n//# sourceMappingURL=validation.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass AmplifyError extends Error {\n    /**\n     *  Constructs an AmplifyError.\n     *\n     * @param message text that describes the main problem.\n     * @param underlyingError the underlying cause of the error.\n     * @param recoverySuggestion suggestion to recover from the error.\n     *\n     */\n    constructor({ message, name, recoverySuggestion, underlyingError, }) {\n        super(message);\n        this.name = name;\n        this.underlyingError = underlyingError;\n        this.recoverySuggestion = recoverySuggestion;\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AmplifyError;\n        Object.setPrototypeOf(this, AmplifyError.prototype);\n    }\n}\n\nexport { AmplifyError };\n//# sourceMappingURL=AmplifyError.mjs.map\n","import { AmplifyError } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass StorageError extends AmplifyError {\n    constructor(params) {\n        super(params);\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = StorageError;\n        Object.setPrototypeOf(this, StorageError.prototype);\n    }\n}\n\nexport { StorageError };\n//# sourceMappingURL=StorageError.mjs.map\n","import { validationErrorMap } from '../types/validation.mjs';\nimport { StorageError } from '../StorageError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction assertValidationError(assertion, name) {\n    const { message, recoverySuggestion } = validationErrorMap[name];\n    if (!assertion) {\n        throw new StorageError({ name, message, recoverySuggestion });\n    }\n}\n\nexport { assertValidationError };\n//# sourceMappingURL=assertValidationError.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst LOCAL_TESTING_S3_ENDPOINT = 'localhost:4566';\nconst DEFAULT_ACCESS_LEVEL = 'guest';\nconst DEFAULT_PRESIGN_EXPIRATION = 900;\nconst MAX_URL_EXPIRATION = 7 * 24 * 60 * 60 * 1000;\nconst MiB = 1024 * 1024;\nconst GiB = 1024 * MiB;\nconst TiB = 1024 * GiB;\n/**\n * Default part size in MB that is used to determine if an upload task is single part or multi part.\n */\nconst DEFAULT_PART_SIZE = 5 * MiB;\nconst MAX_OBJECT_SIZE = 5 * TiB;\nconst MAX_PARTS_COUNT = 10000;\nconst DEFAULT_QUEUE_SIZE = 4;\nconst UPLOADS_STORAGE_KEY = '__uploadInProgress';\nconst STORAGE_INPUT_PREFIX = 'prefix';\nconst STORAGE_INPUT_KEY = 'key';\nconst STORAGE_INPUT_PATH = 'path';\nconst DEFAULT_DELIMITER = '/';\nconst CHECKSUM_ALGORITHM_CRC32 = 'crc-32';\n\nexport { CHECKSUM_ALGORITHM_CRC32, DEFAULT_ACCESS_LEVEL, DEFAULT_DELIMITER, DEFAULT_PART_SIZE, DEFAULT_PRESIGN_EXPIRATION, DEFAULT_QUEUE_SIZE, LOCAL_TESTING_S3_ENDPOINT, MAX_OBJECT_SIZE, MAX_PARTS_COUNT, MAX_URL_EXPIRATION, STORAGE_INPUT_KEY, STORAGE_INPUT_PATH, STORAGE_INPUT_PREFIX, UPLOADS_STORAGE_KEY };\n//# sourceMappingURL=constants.mjs.map\n","import { StorageError } from './StorageError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Internal-only class for CanceledError thrown by XHR handler or multipart upload when cancellation is invoked\n * without overwriting behavior.\n *\n * @internal\n */\nclass CanceledError extends StorageError {\n    constructor(params = {}) {\n        super({\n            name: 'CanceledError',\n            message: 'Upload is canceled by user',\n            ...params,\n        });\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = CanceledError;\n        Object.setPrototypeOf(this, CanceledError.prototype);\n    }\n}\n/**\n * Check if an error is caused by user calling `cancel()` on a upload/download task. If an overwriting error is\n * supplied to `task.cancel(errorOverwrite)`, this function will return `false`.\n * @param {unknown} error The unknown exception to be checked.\n * @returns - A boolean indicating if the error was from an upload cancellation\n */\nconst isCancelError = (error) => !!error && error instanceof CanceledError;\n\nexport { CanceledError, isCancelError };\n//# sourceMappingURL=CanceledError.mjs.map\n","import { ConsoleLogger } from '@aws-amplify/core';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('Storage');\n\nexport { logger };\n//# sourceMappingURL=logger.mjs.map\n","import { isCancelError } from '../../../errors/CanceledError.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '@aws-amplify/core/internals/utils';\nimport { logger } from '../../../utils/logger.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createCancellableTask = ({ job, onCancel, }) => {\n    const state = 'IN_PROGRESS';\n    let canceledErrorMessage;\n    const cancelableTask = {\n        cancel: (message) => {\n            const { state: taskState } = cancelableTask;\n            if (taskState === 'CANCELED' ||\n                taskState === 'ERROR' ||\n                taskState === 'SUCCESS') {\n                logger.debug(`This task cannot be canceled. State: ${taskState}`);\n                return;\n            }\n            cancelableTask.state = 'CANCELED';\n            canceledErrorMessage = message;\n            onCancel(canceledErrorMessage);\n        },\n        state,\n    };\n    const wrappedJobPromise = (async () => {\n        try {\n            const result = await job();\n            cancelableTask.state = 'SUCCESS';\n            return result;\n        }\n        catch (e) {\n            if (isCancelError(e)) {\n                cancelableTask.state = 'CANCELED';\n                e.message = canceledErrorMessage ?? e.message;\n            }\n            cancelableTask.state = 'ERROR';\n            throw e;\n        }\n    })();\n    return Object.assign(cancelableTask, {\n        result: wrappedJobPromise,\n    });\n};\nconst createDownloadTask = createCancellableTask;\nconst createUploadTask = ({ job, onCancel, onResume, onPause, isMultipartUpload, }) => {\n    const cancellableTask = createCancellableTask({\n        job,\n        onCancel,\n    });\n    const uploadTask = Object.assign(cancellableTask, {\n        pause: () => {\n            const { state } = uploadTask;\n            if (!isMultipartUpload || state !== 'IN_PROGRESS') {\n                logger.debug(`This task cannot be paused. State: ${state}`);\n                return;\n            }\n            // TODO(eslint): remove this linter suppression.\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            uploadTask.state = 'PAUSED';\n            onPause?.();\n        },\n        resume: () => {\n            const { state } = uploadTask;\n            if (!isMultipartUpload || state !== 'PAUSED') {\n                logger.debug(`This task cannot be resumed. State: ${state}`);\n                return;\n            }\n            // TODO(eslint): remove this linter suppression.\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            uploadTask.state = 'IN_PROGRESS';\n            onResume?.();\n        },\n    });\n    return uploadTask;\n};\n\nexport { createDownloadTask, createUploadTask };\n//# sourceMappingURL=transferTask.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar Framework;\n(function (Framework) {\n    // < 100 - Web frameworks\n    Framework[\"WebUnknown\"] = \"0\";\n    Framework[\"React\"] = \"1\";\n    Framework[\"NextJs\"] = \"2\";\n    Framework[\"Angular\"] = \"3\";\n    Framework[\"VueJs\"] = \"4\";\n    Framework[\"Nuxt\"] = \"5\";\n    Framework[\"Svelte\"] = \"6\";\n    // 100s - Server side frameworks\n    Framework[\"ServerSideUnknown\"] = \"100\";\n    Framework[\"ReactSSR\"] = \"101\";\n    Framework[\"NextJsSSR\"] = \"102\";\n    Framework[\"AngularSSR\"] = \"103\";\n    Framework[\"VueJsSSR\"] = \"104\";\n    Framework[\"NuxtSSR\"] = \"105\";\n    Framework[\"SvelteSSR\"] = \"106\";\n    // 200s - Mobile framework\n    Framework[\"ReactNative\"] = \"201\";\n    Framework[\"Expo\"] = \"202\";\n})(Framework || (Framework = {}));\nvar Category;\n(function (Category) {\n    Category[\"AI\"] = \"ai\";\n    Category[\"API\"] = \"api\";\n    Category[\"Auth\"] = \"auth\";\n    Category[\"Analytics\"] = \"analytics\";\n    Category[\"DataStore\"] = \"datastore\";\n    Category[\"Geo\"] = \"geo\";\n    Category[\"InAppMessaging\"] = \"inappmessaging\";\n    Category[\"Interactions\"] = \"interactions\";\n    Category[\"Predictions\"] = \"predictions\";\n    Category[\"PubSub\"] = \"pubsub\";\n    Category[\"PushNotification\"] = \"pushnotification\";\n    Category[\"Storage\"] = \"storage\";\n})(Category || (Category = {}));\nvar AiAction;\n(function (AiAction) {\n    AiAction[\"CreateConversation\"] = \"1\";\n    AiAction[\"GetConversation\"] = \"2\";\n    AiAction[\"ListConversations\"] = \"3\";\n    AiAction[\"DeleteConversation\"] = \"4\";\n    AiAction[\"SendMessage\"] = \"5\";\n    AiAction[\"ListMessages\"] = \"6\";\n    AiAction[\"OnMessage\"] = \"7\";\n    AiAction[\"Generation\"] = \"8\";\n    AiAction[\"UpdateConversation\"] = \"9\";\n})(AiAction || (AiAction = {}));\nvar AnalyticsAction;\n(function (AnalyticsAction) {\n    AnalyticsAction[\"Record\"] = \"1\";\n    AnalyticsAction[\"IdentifyUser\"] = \"2\";\n})(AnalyticsAction || (AnalyticsAction = {}));\nvar ApiAction;\n(function (ApiAction) {\n    ApiAction[\"GraphQl\"] = \"1\";\n    ApiAction[\"Get\"] = \"2\";\n    ApiAction[\"Post\"] = \"3\";\n    ApiAction[\"Put\"] = \"4\";\n    ApiAction[\"Patch\"] = \"5\";\n    ApiAction[\"Del\"] = \"6\";\n    ApiAction[\"Head\"] = \"7\";\n})(ApiAction || (ApiAction = {}));\nvar AuthAction;\n(function (AuthAction) {\n    AuthAction[\"SignUp\"] = \"1\";\n    AuthAction[\"ConfirmSignUp\"] = \"2\";\n    AuthAction[\"ResendSignUpCode\"] = \"3\";\n    AuthAction[\"SignIn\"] = \"4\";\n    AuthAction[\"FetchMFAPreference\"] = \"6\";\n    AuthAction[\"UpdateMFAPreference\"] = \"7\";\n    AuthAction[\"SetUpTOTP\"] = \"10\";\n    AuthAction[\"VerifyTOTPSetup\"] = \"11\";\n    AuthAction[\"ConfirmSignIn\"] = \"12\";\n    AuthAction[\"DeleteUserAttributes\"] = \"15\";\n    AuthAction[\"DeleteUser\"] = \"16\";\n    AuthAction[\"UpdateUserAttributes\"] = \"17\";\n    AuthAction[\"FetchUserAttributes\"] = \"18\";\n    AuthAction[\"ConfirmUserAttribute\"] = \"22\";\n    AuthAction[\"SignOut\"] = \"26\";\n    AuthAction[\"UpdatePassword\"] = \"27\";\n    AuthAction[\"ResetPassword\"] = \"28\";\n    AuthAction[\"ConfirmResetPassword\"] = \"29\";\n    AuthAction[\"FederatedSignIn\"] = \"30\";\n    AuthAction[\"RememberDevice\"] = \"32\";\n    AuthAction[\"ForgetDevice\"] = \"33\";\n    AuthAction[\"FetchDevices\"] = \"34\";\n    AuthAction[\"SendUserAttributeVerificationCode\"] = \"35\";\n    AuthAction[\"SignInWithRedirect\"] = \"36\";\n    AuthAction[\"StartWebAuthnRegistration\"] = \"37\";\n    AuthAction[\"CompleteWebAuthnRegistration\"] = \"38\";\n    AuthAction[\"ListWebAuthnCredentials\"] = \"39\";\n    AuthAction[\"DeleteWebAuthnCredential\"] = \"40\";\n})(AuthAction || (AuthAction = {}));\nvar DataStoreAction;\n(function (DataStoreAction) {\n    DataStoreAction[\"Subscribe\"] = \"1\";\n    DataStoreAction[\"GraphQl\"] = \"2\";\n})(DataStoreAction || (DataStoreAction = {}));\nvar GeoAction;\n(function (GeoAction) {\n    GeoAction[\"SearchByText\"] = \"0\";\n    GeoAction[\"SearchByCoordinates\"] = \"1\";\n    GeoAction[\"SearchForSuggestions\"] = \"2\";\n    GeoAction[\"SearchByPlaceId\"] = \"3\";\n    GeoAction[\"SaveGeofences\"] = \"4\";\n    GeoAction[\"GetGeofence\"] = \"5\";\n    GeoAction[\"ListGeofences\"] = \"6\";\n    GeoAction[\"DeleteGeofences\"] = \"7\";\n})(GeoAction || (GeoAction = {}));\nvar InAppMessagingAction;\n(function (InAppMessagingAction) {\n    InAppMessagingAction[\"SyncMessages\"] = \"1\";\n    InAppMessagingAction[\"IdentifyUser\"] = \"2\";\n    InAppMessagingAction[\"NotifyMessageInteraction\"] = \"3\";\n})(InAppMessagingAction || (InAppMessagingAction = {}));\nvar InteractionsAction;\n(function (InteractionsAction) {\n    InteractionsAction[\"None\"] = \"0\";\n})(InteractionsAction || (InteractionsAction = {}));\nvar PredictionsAction;\n(function (PredictionsAction) {\n    PredictionsAction[\"Convert\"] = \"1\";\n    PredictionsAction[\"Identify\"] = \"2\";\n    PredictionsAction[\"Interpret\"] = \"3\";\n})(PredictionsAction || (PredictionsAction = {}));\nvar PubSubAction;\n(function (PubSubAction) {\n    PubSubAction[\"Subscribe\"] = \"1\";\n})(PubSubAction || (PubSubAction = {}));\nvar PushNotificationAction;\n(function (PushNotificationAction) {\n    PushNotificationAction[\"InitializePushNotifications\"] = \"1\";\n    PushNotificationAction[\"IdentifyUser\"] = \"2\";\n})(PushNotificationAction || (PushNotificationAction = {}));\nvar StorageAction;\n(function (StorageAction) {\n    StorageAction[\"UploadData\"] = \"1\";\n    StorageAction[\"DownloadData\"] = \"2\";\n    StorageAction[\"List\"] = \"3\";\n    StorageAction[\"Copy\"] = \"4\";\n    StorageAction[\"Remove\"] = \"5\";\n    StorageAction[\"GetProperties\"] = \"6\";\n    StorageAction[\"GetUrl\"] = \"7\";\n    StorageAction[\"GetDataAccess\"] = \"8\";\n    StorageAction[\"ListCallerAccessGrants\"] = \"9\";\n})(StorageAction || (StorageAction = {}));\n\nexport { AiAction, AnalyticsAction, ApiAction, AuthAction, Category, DataStoreAction, Framework, GeoAction, InAppMessagingAction, InteractionsAction, PredictionsAction, PubSubAction, PushNotificationAction, StorageAction };\n//# sourceMappingURL=types.mjs.map\n","export const fromUtf8 = (input) => new TextEncoder().encode(input);\n","export const BLOCK_SIZE = 64;\nexport const DIGEST_LENGTH = 16;\nexport const INIT = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476];\n","import { fromUtf8 } from \"@smithy/util-utf8\";\nimport { BLOCK_SIZE, DIGEST_LENGTH, INIT } from \"./constants\";\nexport class Md5 {\n    constructor() {\n        this.reset();\n    }\n    update(sourceData) {\n        if (isEmptyData(sourceData)) {\n            return;\n        }\n        else if (this.finished) {\n            throw new Error(\"Attempted to update an already finished hash.\");\n        }\n        const data = convertToBuffer(sourceData);\n        let position = 0;\n        let { byteLength } = data;\n        this.bytesHashed += byteLength;\n        while (byteLength > 0) {\n            this.buffer.setUint8(this.bufferLength++, data[position++]);\n            byteLength--;\n            if (this.bufferLength === BLOCK_SIZE) {\n                this.hashBuffer();\n                this.bufferLength = 0;\n            }\n        }\n    }\n    async digest() {\n        if (!this.finished) {\n            const { buffer, bufferLength: undecoratedLength, bytesHashed } = this;\n            const bitsHashed = bytesHashed * 8;\n            buffer.setUint8(this.bufferLength++, 0b10000000);\n            if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n                for (let i = this.bufferLength; i < BLOCK_SIZE; i++) {\n                    buffer.setUint8(i, 0);\n                }\n                this.hashBuffer();\n                this.bufferLength = 0;\n            }\n            for (let i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n                buffer.setUint8(i, 0);\n            }\n            buffer.setUint32(BLOCK_SIZE - 8, bitsHashed >>> 0, true);\n            buffer.setUint32(BLOCK_SIZE - 4, Math.floor(bitsHashed / 0x100000000), true);\n            this.hashBuffer();\n            this.finished = true;\n        }\n        const out = new DataView(new ArrayBuffer(DIGEST_LENGTH));\n        for (let i = 0; i < 4; i++) {\n            out.setUint32(i * 4, this.state[i], true);\n        }\n        return new Uint8Array(out.buffer, out.byteOffset, out.byteLength);\n    }\n    hashBuffer() {\n        const { buffer, state } = this;\n        let a = state[0], b = state[1], c = state[2], d = state[3];\n        a = ff(a, b, c, d, buffer.getUint32(0, true), 7, 0xd76aa478);\n        d = ff(d, a, b, c, buffer.getUint32(4, true), 12, 0xe8c7b756);\n        c = ff(c, d, a, b, buffer.getUint32(8, true), 17, 0x242070db);\n        b = ff(b, c, d, a, buffer.getUint32(12, true), 22, 0xc1bdceee);\n        a = ff(a, b, c, d, buffer.getUint32(16, true), 7, 0xf57c0faf);\n        d = ff(d, a, b, c, buffer.getUint32(20, true), 12, 0x4787c62a);\n        c = ff(c, d, a, b, buffer.getUint32(24, true), 17, 0xa8304613);\n        b = ff(b, c, d, a, buffer.getUint32(28, true), 22, 0xfd469501);\n        a = ff(a, b, c, d, buffer.getUint32(32, true), 7, 0x698098d8);\n        d = ff(d, a, b, c, buffer.getUint32(36, true), 12, 0x8b44f7af);\n        c = ff(c, d, a, b, buffer.getUint32(40, true), 17, 0xffff5bb1);\n        b = ff(b, c, d, a, buffer.getUint32(44, true), 22, 0x895cd7be);\n        a = ff(a, b, c, d, buffer.getUint32(48, true), 7, 0x6b901122);\n        d = ff(d, a, b, c, buffer.getUint32(52, true), 12, 0xfd987193);\n        c = ff(c, d, a, b, buffer.getUint32(56, true), 17, 0xa679438e);\n        b = ff(b, c, d, a, buffer.getUint32(60, true), 22, 0x49b40821);\n        a = gg(a, b, c, d, buffer.getUint32(4, true), 5, 0xf61e2562);\n        d = gg(d, a, b, c, buffer.getUint32(24, true), 9, 0xc040b340);\n        c = gg(c, d, a, b, buffer.getUint32(44, true), 14, 0x265e5a51);\n        b = gg(b, c, d, a, buffer.getUint32(0, true), 20, 0xe9b6c7aa);\n        a = gg(a, b, c, d, buffer.getUint32(20, true), 5, 0xd62f105d);\n        d = gg(d, a, b, c, buffer.getUint32(40, true), 9, 0x02441453);\n        c = gg(c, d, a, b, buffer.getUint32(60, true), 14, 0xd8a1e681);\n        b = gg(b, c, d, a, buffer.getUint32(16, true), 20, 0xe7d3fbc8);\n        a = gg(a, b, c, d, buffer.getUint32(36, true), 5, 0x21e1cde6);\n        d = gg(d, a, b, c, buffer.getUint32(56, true), 9, 0xc33707d6);\n        c = gg(c, d, a, b, buffer.getUint32(12, true), 14, 0xf4d50d87);\n        b = gg(b, c, d, a, buffer.getUint32(32, true), 20, 0x455a14ed);\n        a = gg(a, b, c, d, buffer.getUint32(52, true), 5, 0xa9e3e905);\n        d = gg(d, a, b, c, buffer.getUint32(8, true), 9, 0xfcefa3f8);\n        c = gg(c, d, a, b, buffer.getUint32(28, true), 14, 0x676f02d9);\n        b = gg(b, c, d, a, buffer.getUint32(48, true), 20, 0x8d2a4c8a);\n        a = hh(a, b, c, d, buffer.getUint32(20, true), 4, 0xfffa3942);\n        d = hh(d, a, b, c, buffer.getUint32(32, true), 11, 0x8771f681);\n        c = hh(c, d, a, b, buffer.getUint32(44, true), 16, 0x6d9d6122);\n        b = hh(b, c, d, a, buffer.getUint32(56, true), 23, 0xfde5380c);\n        a = hh(a, b, c, d, buffer.getUint32(4, true), 4, 0xa4beea44);\n        d = hh(d, a, b, c, buffer.getUint32(16, true), 11, 0x4bdecfa9);\n        c = hh(c, d, a, b, buffer.getUint32(28, true), 16, 0xf6bb4b60);\n        b = hh(b, c, d, a, buffer.getUint32(40, true), 23, 0xbebfbc70);\n        a = hh(a, b, c, d, buffer.getUint32(52, true), 4, 0x289b7ec6);\n        d = hh(d, a, b, c, buffer.getUint32(0, true), 11, 0xeaa127fa);\n        c = hh(c, d, a, b, buffer.getUint32(12, true), 16, 0xd4ef3085);\n        b = hh(b, c, d, a, buffer.getUint32(24, true), 23, 0x04881d05);\n        a = hh(a, b, c, d, buffer.getUint32(36, true), 4, 0xd9d4d039);\n        d = hh(d, a, b, c, buffer.getUint32(48, true), 11, 0xe6db99e5);\n        c = hh(c, d, a, b, buffer.getUint32(60, true), 16, 0x1fa27cf8);\n        b = hh(b, c, d, a, buffer.getUint32(8, true), 23, 0xc4ac5665);\n        a = ii(a, b, c, d, buffer.getUint32(0, true), 6, 0xf4292244);\n        d = ii(d, a, b, c, buffer.getUint32(28, true), 10, 0x432aff97);\n        c = ii(c, d, a, b, buffer.getUint32(56, true), 15, 0xab9423a7);\n        b = ii(b, c, d, a, buffer.getUint32(20, true), 21, 0xfc93a039);\n        a = ii(a, b, c, d, buffer.getUint32(48, true), 6, 0x655b59c3);\n        d = ii(d, a, b, c, buffer.getUint32(12, true), 10, 0x8f0ccc92);\n        c = ii(c, d, a, b, buffer.getUint32(40, true), 15, 0xffeff47d);\n        b = ii(b, c, d, a, buffer.getUint32(4, true), 21, 0x85845dd1);\n        a = ii(a, b, c, d, buffer.getUint32(32, true), 6, 0x6fa87e4f);\n        d = ii(d, a, b, c, buffer.getUint32(60, true), 10, 0xfe2ce6e0);\n        c = ii(c, d, a, b, buffer.getUint32(24, true), 15, 0xa3014314);\n        b = ii(b, c, d, a, buffer.getUint32(52, true), 21, 0x4e0811a1);\n        a = ii(a, b, c, d, buffer.getUint32(16, true), 6, 0xf7537e82);\n        d = ii(d, a, b, c, buffer.getUint32(44, true), 10, 0xbd3af235);\n        c = ii(c, d, a, b, buffer.getUint32(8, true), 15, 0x2ad7d2bb);\n        b = ii(b, c, d, a, buffer.getUint32(36, true), 21, 0xeb86d391);\n        state[0] = (a + state[0]) & 0xffffffff;\n        state[1] = (b + state[1]) & 0xffffffff;\n        state[2] = (c + state[2]) & 0xffffffff;\n        state[3] = (d + state[3]) & 0xffffffff;\n    }\n    reset() {\n        this.state = Uint32Array.from(INIT);\n        this.buffer = new DataView(new ArrayBuffer(BLOCK_SIZE));\n        this.bufferLength = 0;\n        this.bytesHashed = 0;\n        this.finished = false;\n    }\n}\nfunction cmn(q, a, b, x, s, t) {\n    a = (((a + q) & 0xffffffff) + ((x + t) & 0xffffffff)) & 0xffffffff;\n    return (((a << s) | (a >>> (32 - s))) + b) & 0xffffffff;\n}\nfunction ff(a, b, c, d, x, s, t) {\n    return cmn((b & c) | (~b & d), a, b, x, s, t);\n}\nfunction gg(a, b, c, d, x, s, t) {\n    return cmn((b & d) | (c & ~d), a, b, x, s, t);\n}\nfunction hh(a, b, c, d, x, s, t) {\n    return cmn(b ^ c ^ d, a, b, x, s, t);\n}\nfunction ii(a, b, c, d, x, s, t) {\n    return cmn(c ^ (b | ~d), a, b, x, s, t);\n}\nfunction isEmptyData(data) {\n    if (typeof data === \"string\") {\n        return data.length === 0;\n    }\n    return data.byteLength === 0;\n}\nfunction convertToBuffer(data) {\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction bytesToBase64(bytes) {\n    const base64Str = Array.from(bytes, x => String.fromCodePoint(x)).join('');\n    return btoa(base64Str);\n}\nfunction toBase64(input) {\n    if (typeof input === 'string') {\n        return bytesToBase64(new TextEncoder().encode(input));\n    }\n    return bytesToBase64(new Uint8Array(input.buffer, input.byteOffset, input.byteLength));\n}\n\nexport { toBase64 };\n//# sourceMappingURL=index.browser.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst readFile = (file) => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n        resolve(reader.result);\n    };\n    reader.onabort = () => {\n        reject(new Error('Read aborted'));\n    };\n    reader.onerror = () => {\n        reject(reader.error);\n    };\n    reader.readAsArrayBuffer(file);\n});\n\nexport { readFile };\n//# sourceMappingURL=readFile.mjs.map\n","import { Md5 } from '@smithy/md5-js';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport './client/runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport './client/runtime/s3TransferHandler/xhr.mjs';\nimport { toBase64 } from './client/runtime/base64/index.native.mjs';\nimport '@aws-amplify/core/internals/utils';\nimport { readFile } from './readFile.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst calculateContentMd5 = async (content) => {\n    const hasher = new Md5();\n    const buffer = content instanceof Blob ? await readFile(content) : content;\n    hasher.update(buffer);\n    const digest = await hasher.digest();\n    return toBase64(digest);\n};\n\nexport { calculateContentMd5 };\n//# sourceMappingURL=md5.mjs.map\n","import { assertValidationError } from '../errors/utils/assertValidationError.mjs';\nimport { StorageValidationErrorCode } from '../errors/types/validation.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst resolvePrefix = ({ accessLevel, targetIdentityId, }) => {\n    if (accessLevel === 'private') {\n        assertValidationError(!!targetIdentityId, StorageValidationErrorCode.NoIdentityId);\n        return `private/${targetIdentityId}/`;\n    }\n    else if (accessLevel === 'protected') {\n        assertValidationError(!!targetIdentityId, StorageValidationErrorCode.NoIdentityId);\n        return `protected/${targetIdentityId}/`;\n    }\n    else {\n        return 'public/';\n    }\n};\n\nexport { resolvePrefix };\n//# sourceMappingURL=resolvePrefix.mjs.map\n","import { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { StorageValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { resolvePrefix } from '../../../utils/resolvePrefix.mjs';\nimport { StorageError } from '../../../errors/StorageError.mjs';\nimport { INVALID_STORAGE_INPUT } from '../../../errors/constants.mjs';\nimport { DEFAULT_ACCESS_LEVEL, LOCAL_TESTING_S3_ENDPOINT } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * resolve the common input options for S3 API handlers from Amplify configuration and library options.\n *\n * @param {AmplifyClassV6} amplify The Amplify instance.\n * @param {S3ApiOptions} apiOptions The input options for S3 provider.\n * @returns {Promise<ResolvedS3ConfigAndInput>} The resolved common input options for S3 API handlers.\n * @throws A `StorageError` with `error.name` from `StorageValidationErrorCode` indicating invalid\n *   configurations or Amplify library options.\n *\n * @internal\n */\nconst resolveS3ConfigAndInput = async (amplify, apiInput) => {\n    const { options: apiOptions } = apiInput ?? {};\n    /**\n     * IdentityId is always cached in memory so we can safely make calls here. It\n     * should be stable even for unauthenticated users, regardless of credentials.\n     */\n    const { identityId } = await amplify.Auth.fetchAuthSession();\n    /**\n     * A credentials provider function instead of a static credentials object is\n     * used because the long-running tasks like multipart upload may span over the\n     * credentials expiry. Auth.fetchAuthSession() automatically refreshes the\n     * credentials if they are expired.\n     *\n     * The optional forceRefresh option is set when the S3 service returns expired\n     * tokens error in the previous API call attempt.\n     */\n    const credentialsProvider = async (options) => {\n        if (isLocationCredentialsProvider(apiOptions)) {\n            assertStorageInput(apiInput);\n        }\n        // TODO: forceRefresh option of fetchAuthSession would refresh both tokens and\n        // AWS credentials. So we do not support forceRefreshing from the Auth until\n        // we support refreshing only the credentials.\n        const { credentials } = isLocationCredentialsProvider(apiOptions)\n            ? await apiOptions.locationCredentialsProvider(options)\n            : await amplify.Auth.fetchAuthSession();\n        assertValidationError(!!credentials, StorageValidationErrorCode.NoCredentials);\n        return credentials;\n    };\n    const { bucket: defaultBucket, region: defaultRegion, dangerouslyConnectToHttpEndpointForTesting, buckets, } = amplify.getConfig()?.Storage?.S3 ?? {};\n    const { bucket = defaultBucket, region = defaultRegion } = (apiOptions?.bucket && resolveBucketConfig(apiOptions, buckets)) || {};\n    assertValidationError(!!bucket, StorageValidationErrorCode.NoBucket);\n    assertValidationError(!!region, StorageValidationErrorCode.NoRegion);\n    const { defaultAccessLevel, prefixResolver = resolvePrefix, isObjectLockEnabled, } = amplify.libraryOptions?.Storage?.S3 ?? {};\n    const accessLevel = apiOptions?.accessLevel ?? defaultAccessLevel ?? DEFAULT_ACCESS_LEVEL;\n    const targetIdentityId = accessLevel === 'protected'\n        ? (apiOptions?.targetIdentityId ?? identityId)\n        : identityId;\n    const keyPrefix = await prefixResolver({ accessLevel, targetIdentityId });\n    return {\n        s3Config: {\n            credentials: credentialsProvider,\n            region,\n            useAccelerateEndpoint: apiOptions?.useAccelerateEndpoint,\n            ...(apiOptions?.customEndpoint\n                ? { customEndpoint: apiOptions.customEndpoint }\n                : {}),\n            ...(dangerouslyConnectToHttpEndpointForTesting\n                ? {\n                    customEndpoint: LOCAL_TESTING_S3_ENDPOINT,\n                    forcePathStyle: true,\n                }\n                : {}),\n        },\n        bucket,\n        keyPrefix,\n        identityId,\n        isObjectLockEnabled,\n    };\n};\nconst isLocationCredentialsProvider = (options) => {\n    return !!options?.locationCredentialsProvider;\n};\nconst isInputWithCallbackPath = (input) => {\n    return ((input?.path &&\n        typeof input.path === 'function') ||\n        (input?.destination?.path &&\n            typeof input.destination?.path === 'function') ||\n        (input?.source?.path &&\n            typeof input.source?.path === 'function'));\n};\nconst isDeprecatedInput = (input) => {\n    return (isInputWithKey(input) ||\n        isInputWithPrefix(input) ||\n        isInputWithCopySourceOrDestination(input));\n};\nconst assertStorageInput = (input) => {\n    if (isDeprecatedInput(input) || isInputWithCallbackPath(input)) {\n        throw new StorageError({\n            name: INVALID_STORAGE_INPUT,\n            message: 'The input needs to have a path as a string value.',\n            recoverySuggestion: 'Please provide a valid path as a string value for the input.',\n        });\n    }\n};\nconst isInputWithKey = (input) => {\n    return !!(typeof input.key === 'string');\n};\nconst isInputWithPrefix = (input) => {\n    return !!(typeof input.prefix === 'string');\n};\nconst isInputWithCopySourceOrDestination = (input) => {\n    return !!(typeof input.source?.key === 'string' ||\n        typeof input.destination?.key === 'string');\n};\nconst resolveBucketConfig = (apiOptions, buckets) => {\n    if (typeof apiOptions.bucket === 'string') {\n        const bucketConfig = buckets?.[apiOptions.bucket];\n        assertValidationError(!!bucketConfig, StorageValidationErrorCode.InvalidStorageBucket);\n        return { bucket: bucketConfig.bucketName, region: bucketConfig.region };\n    }\n    if (typeof apiOptions.bucket === 'object') {\n        return {\n            bucket: apiOptions.bucket.bucketName,\n            region: apiOptions.bucket.region,\n        };\n    }\n};\n\nexport { resolveS3ConfigAndInput };\n//# sourceMappingURL=resolveS3ConfigAndInput.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst INVALID_STORAGE_INPUT = 'InvalidStorageInput';\n\nexport { INVALID_STORAGE_INPUT };\n//# sourceMappingURL=constants.mjs.map\n","import { StorageValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst VALID_AWS_ACCOUNT_ID_PATTERN = /^\\d{12}/;\nconst validateBucketOwnerID = (accountID) => {\n    if (accountID === undefined) {\n        return;\n    }\n    assertValidationError(VALID_AWS_ACCOUNT_ID_PATTERN.test(accountID), StorageValidationErrorCode.InvalidAWSAccountID);\n};\n\nexport { validateBucketOwnerID };\n//# sourceMappingURL=validateBucketOwnerID.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst isInputWithPath = (input) => {\n    return input.path !== undefined;\n};\n\nexport { isInputWithPath };\n//# sourceMappingURL=isInputWithPath.mjs.map\n","import { StorageValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst resolveIdentityId = (identityId) => {\n    assertValidationError(!!identityId, StorageValidationErrorCode.NoIdentityId);\n    return identityId;\n};\n\nexport { resolveIdentityId };\n//# sourceMappingURL=resolveIdentityId.mjs.map\n","import { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { StorageValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { isInputWithPath } from './isInputWithPath.mjs';\nimport { STORAGE_INPUT_PATH, STORAGE_INPUT_KEY } from './constants.mjs';\nimport { resolveIdentityId } from './resolveIdentityId.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst validateStorageOperationInput = (input, identityId) => {\n    assertValidationError(\n    // Key present without a path\n    (!!input.key && !input.path) ||\n        // Path present without a key\n        (!input.key && !!input.path), StorageValidationErrorCode.InvalidStorageOperationInput);\n    if (isInputWithPath(input)) {\n        const { path } = input;\n        const objectKey = typeof path === 'string'\n            ? path\n            : path({ identityId: resolveIdentityId(identityId) });\n        assertValidationError(!objectKey.startsWith('/'), StorageValidationErrorCode.InvalidStoragePathInput);\n        return {\n            inputType: STORAGE_INPUT_PATH,\n            objectKey,\n        };\n    }\n    else {\n        return { inputType: STORAGE_INPUT_KEY, objectKey: input.key };\n    }\n};\n\nexport { validateStorageOperationInput };\n//# sourceMappingURL=validateStorageOperationInput.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst parseMetadata = (response) => {\n    const { headers, statusCode } = response;\n    return {\n        ...(isMetadataBearer(response) ? response.$metadata : {}),\n        httpStatusCode: statusCode,\n        requestId: headers['x-amzn-requestid'] ??\n            headers['x-amzn-request-id'] ??\n            headers['x-amz-request-id'],\n        extendedRequestId: headers['x-amz-id-2'],\n        cfId: headers['x-amz-cf-id'],\n    };\n};\nconst isMetadataBearer = (response) => typeof response?.$metadata === 'object';\n\nexport { parseMetadata };\n//# sourceMappingURL=responseInfo.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst AmplifyUrl = URL;\nconst AmplifyUrlSearchParams = URLSearchParams;\n\nexport { AmplifyUrl, AmplifyUrlSearchParams };\n//# sourceMappingURL=index.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Compose a service API handler that accepts input as defined shape and responds conforming to defined output shape.\n * A service API handler is composed with:\n * * A transfer handler\n * * A serializer function\n * * A deserializer function\n * * A default config object\n *\n * The returned service API handler, when called, will trigger the following workflow:\n * 1. When calling the service API handler function, the default config object is merged into the input config\n * object to assign the default values of some omitted configs, resulting to a resolved config object.\n * 2. The `endpointResolver` function from the default config object will be invoked with the resolved config object and\n * API input object resulting to an endpoint instance.\n * 3. The serializer function is invoked with API input object and the endpoint instance resulting to an HTTP request\n * instance.\n * 4. The HTTP request instance and the resolved config object is passed to the transfer handler function.\n * 5. The transfer handler function resolves to an HTTP response instance(can be either successful or failed status code).\n * 6. The deserializer function is invoked with the HTTP response instance resulting to the API output object, and\n * return to the caller.\n *\n *\n * @param transferHandler Async function for dispatching HTTP requests and returning HTTP response.\n * @param serializer  Async function for converting object in defined input shape into HTTP request targeting a given\n * \tendpoint.\n * @param deserializer Async function for converting HTTP response into output object in defined output shape, or error\n * \tshape.\n * @param defaultConfig  object containing default options to be consumed by transfer handler, serializer and\n *  deserializer.\n * @returns a async service API handler function that accepts a config object and input object in defined shape, returns\n * \tan output object in defined shape. It may also throw error instance in defined shape in deserializer. The config\n *  object type is composed with options type of transferHandler, endpointResolver function as well as endpointResolver\n *  function's input options type, region string. The config object property will be marked as optional if it's also\n * \tdefined in defaultConfig.\n *\n * @internal\n */\nconst composeServiceApi = (transferHandler, serializer, deserializer, defaultConfig) => {\n    return async (config, input) => {\n        const resolvedConfig = {\n            ...defaultConfig,\n            ...config,\n        };\n        // We need to allow different endpoints based on both given config(other than region) and input.\n        // However for most of non-S3 services, region is the only input for endpoint resolver.\n        const endpoint = await resolvedConfig.endpointResolver(resolvedConfig, input);\n        // Unlike AWS SDK clients, a serializer should NOT populate the `host` or `content-length` headers.\n        // Both of these headers are prohibited per Spec(https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name).\n        // They will be populated automatically by browser, or node-fetch polyfill.\n        const request = await serializer(input, endpoint);\n        const response = await transferHandler(request, {\n            ...resolvedConfig,\n        });\n        return deserializer(response);\n    };\n};\n\nexport { composeServiceApi };\n//# sourceMappingURL=composeServiceApi.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst DEFAULT_RETRY_ATTEMPTS = 3;\n/**\n * Retry middleware\n */\nconst retryMiddlewareFactory = ({ maxAttempts = DEFAULT_RETRY_ATTEMPTS, retryDecider, computeDelay, abortSignal, }) => {\n    if (maxAttempts < 1) {\n        throw new Error('maxAttempts must be greater than 0');\n    }\n    return (next, context) => async function retryMiddleware(request) {\n        let error;\n        let attemptsCount = context.attemptsCount ?? 0;\n        let response;\n        // When retry is not needed or max attempts is reached, either error or response will be set. This function handles either cases.\n        const handleTerminalErrorOrResponse = () => {\n            if (response) {\n                addOrIncrementMetadataAttempts(response, attemptsCount);\n                return response;\n            }\n            else {\n                addOrIncrementMetadataAttempts(error, attemptsCount);\n                throw error;\n            }\n        };\n        while (!abortSignal?.aborted && attemptsCount < maxAttempts) {\n            try {\n                response = await next(request);\n                error = undefined;\n            }\n            catch (e) {\n                error = e;\n                response = undefined;\n            }\n            // context.attemptsCount may be updated after calling next handler which may retry the request by itself.\n            attemptsCount =\n                (context.attemptsCount ?? 0) > attemptsCount\n                    ? (context.attemptsCount ?? 0)\n                    : attemptsCount + 1;\n            context.attemptsCount = attemptsCount;\n            const { isCredentialsExpiredError, retryable } = await retryDecider(response, error, context);\n            if (retryable) {\n                // Setting isCredentialsInvalid flag to notify signing middleware to forceRefresh credentials provider.\n                context.isCredentialsExpired = !!isCredentialsExpiredError;\n                if (!abortSignal?.aborted && attemptsCount < maxAttempts) {\n                    // prevent sleep for last attempt or cancelled request;\n                    const delay = computeDelay(attemptsCount);\n                    await cancellableSleep(delay, abortSignal);\n                }\n                continue;\n            }\n            else {\n                return handleTerminalErrorOrResponse();\n            }\n        }\n        if (abortSignal?.aborted) {\n            throw new Error('Request aborted.');\n        }\n        else {\n            return handleTerminalErrorOrResponse();\n        }\n    };\n};\nconst cancellableSleep = (timeoutMs, abortSignal) => {\n    if (abortSignal?.aborted) {\n        return Promise.resolve();\n    }\n    let timeoutId;\n    let sleepPromiseResolveFn;\n    const sleepPromise = new Promise(resolve => {\n        sleepPromiseResolveFn = resolve;\n        timeoutId = setTimeout(resolve, timeoutMs);\n    });\n    abortSignal?.addEventListener('abort', function cancelSleep(_) {\n        clearTimeout(timeoutId);\n        abortSignal?.removeEventListener('abort', cancelSleep);\n        sleepPromiseResolveFn();\n    });\n    return sleepPromise;\n};\nconst addOrIncrementMetadataAttempts = (nextHandlerOutput, attempts) => {\n    if (Object.prototype.toString.call(nextHandlerOutput) !== '[object Object]') {\n        return;\n    }\n    nextHandlerOutput.$metadata = {\n        ...(nextHandlerOutput.$metadata ?? {}),\n        attempts,\n    };\n};\n\nexport { retryMiddlewareFactory };\n//# sourceMappingURL=middleware.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns signed headers.\n *\n * @param headers `headers` from the request.\n * @returns List of headers included in canonical headers, separated by semicolons (;). This indicates which headers\n * are part of the signing process. Header names must use lowercase characters and must appear in alphabetical order.\n *\n * @internal\n */\nconst getSignedHeaders = (headers) => Object.keys(headers)\n    .map(key => key.toLowerCase())\n    .sort()\n    .join(';');\n\nexport { getSignedHeaders };\n//# sourceMappingURL=getSignedHeaders.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// query params\nconst ALGORITHM_QUERY_PARAM = 'X-Amz-Algorithm';\nconst AMZ_DATE_QUERY_PARAM = 'X-Amz-Date';\nconst CREDENTIAL_QUERY_PARAM = 'X-Amz-Credential';\nconst EXPIRES_QUERY_PARAM = 'X-Amz-Expires';\nconst REGION_SET_PARAM = 'X-Amz-Region-Set';\nconst SIGNATURE_QUERY_PARAM = 'X-Amz-Signature';\nconst SIGNED_HEADERS_QUERY_PARAM = 'X-Amz-SignedHeaders';\nconst TOKEN_QUERY_PARAM = 'X-Amz-Security-Token';\n// headers\nconst AUTH_HEADER = 'authorization';\nconst HOST_HEADER = 'host';\nconst AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\nconst TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\n// identifiers\nconst KEY_TYPE_IDENTIFIER = 'aws4_request';\nconst SHA256_ALGORITHM_IDENTIFIER = 'AWS4-HMAC-SHA256';\nconst SIGNATURE_IDENTIFIER = 'AWS4';\n// preset values\nconst EMPTY_HASH = 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855';\nconst UNSIGNED_PAYLOAD = 'UNSIGNED-PAYLOAD';\n\nexport { ALGORITHM_QUERY_PARAM, AMZ_DATE_HEADER, AMZ_DATE_QUERY_PARAM, AUTH_HEADER, CREDENTIAL_QUERY_PARAM, EMPTY_HASH, EXPIRES_QUERY_PARAM, HOST_HEADER, KEY_TYPE_IDENTIFIER, REGION_SET_PARAM, SHA256_ALGORITHM_IDENTIFIER, SIGNATURE_IDENTIFIER, SIGNATURE_QUERY_PARAM, SIGNED_HEADERS_QUERY_PARAM, TOKEN_HEADER, TOKEN_QUERY_PARAM, UNSIGNED_PAYLOAD };\n//# sourceMappingURL=constants.mjs.map\n","import { getCredentialScope } from './getCredentialScope.mjs';\nimport { getFormattedDates } from './getFormattedDates.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Extracts common values used for signing both requests and urls.\n *\n * @param options `SignRequestOptions` object containing values used to construct the signature.\n * @returns Common `SigningValues` used for signing.\n *\n * @internal\n */\nconst getSigningValues = ({ credentials, signingDate = new Date(), signingRegion, signingService, uriEscapePath = true, }) => {\n    // get properties from credentials\n    const { accessKeyId, secretAccessKey, sessionToken } = credentials;\n    // get formatted dates for signing\n    const { longDate, shortDate } = getFormattedDates(signingDate);\n    // copy header and set signing properties\n    const credentialScope = getCredentialScope(shortDate, signingRegion, signingService);\n    return {\n        accessKeyId,\n        credentialScope,\n        longDate,\n        secretAccessKey,\n        sessionToken,\n        shortDate,\n        signingRegion,\n        signingService,\n        uriEscapePath,\n    };\n};\n\nexport { getSigningValues };\n//# sourceMappingURL=getSigningValues.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns expected date strings to be used in signing.\n *\n * @param date JavaScript `Date` object.\n * @returns `FormattedDates` object containing the following:\n * - longDate: A date string in 'YYYYMMDDThhmmssZ' format\n * - shortDate: A date string in 'YYYYMMDD' format\n *\n * @internal\n */\nconst getFormattedDates = (date) => {\n    const longDate = date.toISOString().replace(/[:-]|\\.\\d{3}/g, '');\n    return {\n        longDate,\n        shortDate: longDate.slice(0, 8),\n    };\n};\n\nexport { getFormattedDates };\n//# sourceMappingURL=getFormattedDates.mjs.map\n","import { KEY_TYPE_IDENTIFIER } from '../constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns the credential scope which restricts the resulting signature to the specified region and service.\n *\n * @param date Current date in the format 'YYYYMMDD'.\n * @param region AWS region in which the service resides.\n * @param service Service to which the signed request is being sent.\n *\n * @returns  A string representing the credential scope with format 'YYYYMMDD/region/service/aws4_request'.\n *\n * @internal\n */\nconst getCredentialScope = (date, region, service) => `${date}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;\n\nexport { getCredentialScope };\n//# sourceMappingURL=getCredentialScope.mjs.map\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","/**\n * @internal\n */\nexport var BLOCK_SIZE = 64;\n/**\n * @internal\n */\nexport var DIGEST_LENGTH = 32;\n/**\n * @internal\n */\nexport var KEY = new Uint32Array([\n    0x428a2f98,\n    0x71374491,\n    0xb5c0fbcf,\n    0xe9b5dba5,\n    0x3956c25b,\n    0x59f111f1,\n    0x923f82a4,\n    0xab1c5ed5,\n    0xd807aa98,\n    0x12835b01,\n    0x243185be,\n    0x550c7dc3,\n    0x72be5d74,\n    0x80deb1fe,\n    0x9bdc06a7,\n    0xc19bf174,\n    0xe49b69c1,\n    0xefbe4786,\n    0x0fc19dc6,\n    0x240ca1cc,\n    0x2de92c6f,\n    0x4a7484aa,\n    0x5cb0a9dc,\n    0x76f988da,\n    0x983e5152,\n    0xa831c66d,\n    0xb00327c8,\n    0xbf597fc7,\n    0xc6e00bf3,\n    0xd5a79147,\n    0x06ca6351,\n    0x14292967,\n    0x27b70a85,\n    0x2e1b2138,\n    0x4d2c6dfc,\n    0x53380d13,\n    0x650a7354,\n    0x766a0abb,\n    0x81c2c92e,\n    0x92722c85,\n    0xa2bfe8a1,\n    0xa81a664b,\n    0xc24b8b70,\n    0xc76c51a3,\n    0xd192e819,\n    0xd6990624,\n    0xf40e3585,\n    0x106aa070,\n    0x19a4c116,\n    0x1e376c08,\n    0x2748774c,\n    0x34b0bcb5,\n    0x391c0cb3,\n    0x4ed8aa4a,\n    0x5b9cca4f,\n    0x682e6ff3,\n    0x748f82ee,\n    0x78a5636f,\n    0x84c87814,\n    0x8cc70208,\n    0x90befffa,\n    0xa4506ceb,\n    0xbef9a3f7,\n    0xc67178f2\n]);\n/**\n * @internal\n */\nexport var INIT = [\n    0x6a09e667,\n    0xbb67ae85,\n    0x3c6ef372,\n    0xa54ff53a,\n    0x510e527f,\n    0x9b05688c,\n    0x1f83d9ab,\n    0x5be0cd19\n];\n/**\n * @internal\n */\nexport var MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1;\n//# sourceMappingURL=constants.js.map","import { BLOCK_SIZE, DIGEST_LENGTH, INIT, KEY, MAX_HASHABLE_LENGTH } from \"./constants\";\n/**\n * @internal\n */\nvar RawSha256 = /** @class */ (function () {\n    function RawSha256() {\n        this.state = Int32Array.from(INIT);\n        this.temp = new Int32Array(64);\n        this.buffer = new Uint8Array(64);\n        this.bufferLength = 0;\n        this.bytesHashed = 0;\n        /**\n         * @internal\n         */\n        this.finished = false;\n    }\n    RawSha256.prototype.update = function (data) {\n        if (this.finished) {\n            throw new Error(\"Attempted to update an already finished hash.\");\n        }\n        var position = 0;\n        var byteLength = data.byteLength;\n        this.bytesHashed += byteLength;\n        if (this.bytesHashed * 8 > MAX_HASHABLE_LENGTH) {\n            throw new Error(\"Cannot hash more than 2^53 - 1 bits\");\n        }\n        while (byteLength > 0) {\n            this.buffer[this.bufferLength++] = data[position++];\n            byteLength--;\n            if (this.bufferLength === BLOCK_SIZE) {\n                this.hashBuffer();\n                this.bufferLength = 0;\n            }\n        }\n    };\n    RawSha256.prototype.digest = function () {\n        if (!this.finished) {\n            var bitsHashed = this.bytesHashed * 8;\n            var bufferView = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);\n            var undecoratedLength = this.bufferLength;\n            bufferView.setUint8(this.bufferLength++, 0x80);\n            // Ensure the final block has enough room for the hashed length\n            if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n                for (var i = this.bufferLength; i < BLOCK_SIZE; i++) {\n                    bufferView.setUint8(i, 0);\n                }\n                this.hashBuffer();\n                this.bufferLength = 0;\n            }\n            for (var i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n                bufferView.setUint8(i, 0);\n            }\n            bufferView.setUint32(BLOCK_SIZE - 8, Math.floor(bitsHashed / 0x100000000), true);\n            bufferView.setUint32(BLOCK_SIZE - 4, bitsHashed);\n            this.hashBuffer();\n            this.finished = true;\n        }\n        // The value in state is little-endian rather than big-endian, so flip\n        // each word into a new Uint8Array\n        var out = new Uint8Array(DIGEST_LENGTH);\n        for (var i = 0; i < 8; i++) {\n            out[i * 4] = (this.state[i] >>> 24) & 0xff;\n            out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n            out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n            out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n        }\n        return out;\n    };\n    RawSha256.prototype.hashBuffer = function () {\n        var _a = this, buffer = _a.buffer, state = _a.state;\n        var state0 = state[0], state1 = state[1], state2 = state[2], state3 = state[3], state4 = state[4], state5 = state[5], state6 = state[6], state7 = state[7];\n        for (var i = 0; i < BLOCK_SIZE; i++) {\n            if (i < 16) {\n                this.temp[i] =\n                    ((buffer[i * 4] & 0xff) << 24) |\n                        ((buffer[i * 4 + 1] & 0xff) << 16) |\n                        ((buffer[i * 4 + 2] & 0xff) << 8) |\n                        (buffer[i * 4 + 3] & 0xff);\n            }\n            else {\n                var u = this.temp[i - 2];\n                var t1_1 = ((u >>> 17) | (u << 15)) ^ ((u >>> 19) | (u << 13)) ^ (u >>> 10);\n                u = this.temp[i - 15];\n                var t2_1 = ((u >>> 7) | (u << 25)) ^ ((u >>> 18) | (u << 14)) ^ (u >>> 3);\n                this.temp[i] =\n                    ((t1_1 + this.temp[i - 7]) | 0) + ((t2_1 + this.temp[i - 16]) | 0);\n            }\n            var t1 = ((((((state4 >>> 6) | (state4 << 26)) ^\n                ((state4 >>> 11) | (state4 << 21)) ^\n                ((state4 >>> 25) | (state4 << 7))) +\n                ((state4 & state5) ^ (~state4 & state6))) |\n                0) +\n                ((state7 + ((KEY[i] + this.temp[i]) | 0)) | 0)) |\n                0;\n            var t2 = ((((state0 >>> 2) | (state0 << 30)) ^\n                ((state0 >>> 13) | (state0 << 19)) ^\n                ((state0 >>> 22) | (state0 << 10))) +\n                ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) |\n                0;\n            state7 = state6;\n            state6 = state5;\n            state5 = state4;\n            state4 = (state3 + t1) | 0;\n            state3 = state2;\n            state2 = state1;\n            state1 = state0;\n            state0 = (t1 + t2) | 0;\n        }\n        state[0] += state0;\n        state[1] += state1;\n        state[2] += state2;\n        state[3] += state3;\n        state[4] += state4;\n        state[5] += state5;\n        state[6] += state6;\n        state[7] += state7;\n    };\n    return RawSha256;\n}());\nexport { RawSha256 };\n//# sourceMappingURL=RawSha256.js.map","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { fromUtf8 as fromUtf8Browser } from \"@smithy/util-utf8\";\n// Quick polyfill\nvar fromUtf8 = typeof Buffer !== \"undefined\" && Buffer.from\n    ? function (input) { return Buffer.from(input, \"utf8\"); }\n    : fromUtf8Browser;\nexport function convertToBuffer(data) {\n    // Already a Uint8, do nothing\n    if (data instanceof Uint8Array)\n        return data;\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n}\n//# sourceMappingURL=convertToBuffer.js.map","export const fromUtf8 = (input) => new TextEncoder().encode(input);\n","import { __awaiter, __generator } from \"tslib\";\nimport { BLOCK_SIZE } from \"./constants\";\nimport { RawSha256 } from \"./RawSha256\";\nimport { isEmptyData, convertToBuffer } from \"@aws-crypto/util\";\nvar Sha256 = /** @class */ (function () {\n    function Sha256(secret) {\n        this.secret = secret;\n        this.hash = new RawSha256();\n        this.reset();\n    }\n    Sha256.prototype.update = function (toHash) {\n        if (isEmptyData(toHash) || this.error) {\n            return;\n        }\n        try {\n            this.hash.update(convertToBuffer(toHash));\n        }\n        catch (e) {\n            this.error = e;\n        }\n    };\n    /* This synchronous method keeps compatibility\n     * with the v2 aws-sdk.\n     */\n    Sha256.prototype.digestSync = function () {\n        if (this.error) {\n            throw this.error;\n        }\n        if (this.outer) {\n            if (!this.outer.finished) {\n                this.outer.update(this.hash.digest());\n            }\n            return this.outer.digest();\n        }\n        return this.hash.digest();\n    };\n    /* The underlying digest method here is synchronous.\n     * To keep the same interface with the other hash functions\n     * the default is to expose this as an async method.\n     * However, it can sometimes be useful to have a sync method.\n     */\n    Sha256.prototype.digest = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.digestSync()];\n            });\n        });\n    };\n    Sha256.prototype.reset = function () {\n        this.hash = new RawSha256();\n        if (this.secret) {\n            this.outer = new RawSha256();\n            var inner = bufferFromSecret(this.secret);\n            var outer = new Uint8Array(BLOCK_SIZE);\n            outer.set(inner);\n            for (var i = 0; i < BLOCK_SIZE; i++) {\n                inner[i] ^= 0x36;\n                outer[i] ^= 0x5c;\n            }\n            this.hash.update(inner);\n            this.outer.update(outer);\n            // overwrite the copied key in memory\n            for (var i = 0; i < inner.byteLength; i++) {\n                inner[i] = 0;\n            }\n        }\n    };\n    return Sha256;\n}());\nexport { Sha256 };\nfunction bufferFromSecret(secret) {\n    var input = convertToBuffer(secret);\n    if (input.byteLength > BLOCK_SIZE) {\n        var bufferHash = new RawSha256();\n        bufferHash.update(input);\n        input = bufferHash.digest();\n    }\n    var buffer = new Uint8Array(BLOCK_SIZE);\n    buffer.set(input);\n    return buffer;\n}\n//# sourceMappingURL=jsSha256.js.map","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function isEmptyData(data) {\n    if (typeof data === \"string\") {\n        return data.length === 0;\n    }\n    return data.byteLength === 0;\n}\n//# sourceMappingURL=isEmptyData.js.map","const SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nexport function fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexport function toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\n","import { Sha256 } from '@aws-crypto/sha256-js';\nimport { toHex } from '@smithy/util-hex-encoding';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO: V6 update to different crypto dependency?\n/**\n * Returns the hashed data a `Uint8Array`.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns `Uint8Array` created from the data as input to a hash function.\n */\nconst getHashedData = (key, data) => {\n    const sha256 = new Sha256(key ?? undefined);\n    sha256.update(data);\n    // TODO: V6 flip to async digest\n    const hashedData = sha256.digestSync();\n    return hashedData;\n};\n/**\n * Returns the hashed data as a hex string.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns String using lowercase hexadecimal characters created from the data as input to a hash function.\n *\n * @internal\n */\nconst getHashedDataAsHex = (key, data) => {\n    const hashedData = getHashedData(key, data);\n    return toHex(hashedData);\n};\n\nexport { getHashedData, getHashedDataAsHex };\n//# sourceMappingURL=dataHashHelpers.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns canonical headers.\n *\n * @param headers Headers from the request.\n * @returns Request headers that will be signed, and their values, separated by newline characters. Header names must\n * use lowercase characters, must appear in alphabetical order, and must be followed by a colon (:). For the values,\n * trim any leading or trailing spaces, convert sequential spaces to a single space, and separate the values\n * for a multi-value header using commas.\n *\n * @internal\n */\nconst getCanonicalHeaders = (headers) => Object.entries(headers)\n    .map(([key, value]) => ({\n    key: key.toLowerCase(),\n    value: value?.trim().replace(/\\s+/g, ' ') ?? '',\n}))\n    .sort((a, b) => (a.key < b.key ? -1 : 1))\n    .map(entry => `${entry.key}:${entry.value}\\n`)\n    .join('');\n\nexport { getCanonicalHeaders };\n//# sourceMappingURL=getCanonicalHeaders.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a canonical query string.\n *\n * @param searchParams `searchParams` from the request url.\n * @returns URL-encoded query string parameters, separated by ampersands (&). Percent-encode reserved characters,\n * including the space character. Encode names and values separately. If there are empty parameters, append the equals\n * sign to the parameter name before encoding. After encoding, sort the parameters alphabetically by key name. If there\n * is no query string, use an empty string (\"\").\n *\n * @internal\n */\nconst getCanonicalQueryString = (searchParams) => Array.from(searchParams)\n    .sort(([keyA, valA], [keyB, valB]) => {\n    if (keyA === keyB) {\n        return valA < valB ? -1 : 1;\n    }\n    return keyA < keyB ? -1 : 1;\n})\n    .map(([key, val]) => `${escapeUri(key)}=${escapeUri(val)}`)\n    .join('&');\nconst escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n\nexport { getCanonicalQueryString };\n//# sourceMappingURL=getCanonicalQueryString.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a canonical uri.\n *\n * @param pathname `pathname` from request url.\n * @param uriEscapePath Whether to uri encode the path as part of canonical uri. It's used for S3 only where the\n *   pathname is already uri encoded, and the signing process is not expected to uri encode it again. Defaults to true.\n * @returns URI-encoded version of the absolute path component URL (everything between the host and the question mark\n * character (?) that starts the query string parameters). If the absolute path is empty, a forward slash character (/).\n *\n * @internal\n */\nconst getCanonicalUri = (pathname, uriEscapePath = true) => pathname\n    ? uriEscapePath\n        ? encodeURIComponent(pathname).replace(/%2F/g, '/')\n        : pathname\n    : '/';\n\nexport { getCanonicalUri };\n//# sourceMappingURL=getCanonicalUri.mjs.map\n","import { EMPTY_HASH, UNSIGNED_PAYLOAD } from '../constants.mjs';\nimport { getHashedDataAsHex } from './dataHashHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns the hashed payload.\n *\n * @param body `body` (payload) from the request.\n * @returns String created using the payload in the body of the HTTP request as input to a hash function. This string\n * uses lowercase hexadecimal characters. If the payload is empty, return precalculated result of an empty hash.\n *\n * @internal\n */\nconst getHashedPayload = (body) => {\n    // return precalculated empty hash if body is undefined or null\n    if (body == null) {\n        return EMPTY_HASH;\n    }\n    if (isSourceData(body)) {\n        const hashedData = getHashedDataAsHex(null, body);\n        return hashedData;\n    }\n    // Defined body is not signable. Return unsigned payload which may or may not be accepted by the service.\n    return UNSIGNED_PAYLOAD;\n};\nconst isSourceData = (body) => typeof body === 'string' || ArrayBuffer.isView(body) || isArrayBuffer(body);\nconst isArrayBuffer = (arg) => (typeof ArrayBuffer === 'function' && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === '[object ArrayBuffer]';\n\nexport { getHashedPayload };\n//# sourceMappingURL=getHashedPayload.mjs.map\n","import { getHashedDataAsHex } from './dataHashHelpers.mjs';\nimport { getCanonicalRequest } from './getCanonicalRequest.mjs';\nimport { getSigningKey } from './getSigningKey.mjs';\nimport { getStringToSign } from './getStringToSign.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Calculates and returns an AWS API Signature.\n * https://docs.aws.amazon.com/IAM/latest/UserGuide/create-signed-request.html\n *\n * @param request `HttpRequest` to be signed.\n * @param signRequestOptions `SignRequestOptions` object containing values used to construct the signature.\n * @returns AWS API Signature to sign a request or url with.\n *\n * @internal\n */\nconst getSignature = (request, { credentialScope, longDate, secretAccessKey, shortDate, signingRegion, signingService, uriEscapePath, }) => {\n    // step 1: create a canonical request\n    const canonicalRequest = getCanonicalRequest(request, uriEscapePath);\n    // step 2: create a hash of the canonical request\n    const hashedRequest = getHashedDataAsHex(null, canonicalRequest);\n    // step 3: create a string to sign\n    const stringToSign = getStringToSign(longDate, credentialScope, hashedRequest);\n    // step 4: calculate the signature\n    const signature = getHashedDataAsHex(getSigningKey(secretAccessKey, shortDate, signingRegion, signingService), stringToSign);\n    return signature;\n};\n\nexport { getSignature };\n//# sourceMappingURL=getSignature.mjs.map\n","import { getCanonicalHeaders } from './getCanonicalHeaders.mjs';\nimport { getCanonicalQueryString } from './getCanonicalQueryString.mjs';\nimport { getCanonicalUri } from './getCanonicalUri.mjs';\nimport { getHashedPayload } from './getHashedPayload.mjs';\nimport { getSignedHeaders } from './getSignedHeaders.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a canonical request.\n *\n * @param request `HttpRequest` from which to create the canonical request from.\n * @param uriEscapePath Whether to uri encode the path as part of canonical uri. It's used for S3 only where the\n *   pathname is already uri encoded, and the signing process is not expected to uri encode it again. Defaults to true.\n * @returns String created by by concatenating the following strings, separated by newline characters:\n * - HTTPMethod\n * - CanonicalUri\n * - CanonicalQueryString\n * - CanonicalHeaders\n * - SignedHeaders\n * - HashedPayload\n *\n * @internal\n */\nconst getCanonicalRequest = ({ body, headers, method, url }, uriEscapePath = true) => [\n    method,\n    getCanonicalUri(url.pathname, uriEscapePath),\n    getCanonicalQueryString(url.searchParams),\n    getCanonicalHeaders(headers),\n    getSignedHeaders(headers),\n    getHashedPayload(body),\n].join('\\n');\n\nexport { getCanonicalRequest };\n//# sourceMappingURL=getCanonicalRequest.mjs.map\n","import { SHA256_ALGORITHM_IDENTIFIER } from '../constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a string to be signed.\n *\n * @param date Current date in the format 'YYYYMMDDThhmmssZ'.\n * @param credentialScope String representing the credential scope with format 'YYYYMMDD/region/service/aws4_request'.\n * @param hashedRequest Hashed canonical request.\n *\n * @returns A string created by by concatenating the following strings, separated by newline characters:\n * - Algorithm\n * - RequestDateTime\n * - CredentialScope\n * - HashedCanonicalRequest\n *\n * @internal\n */\nconst getStringToSign = (date, credentialScope, hashedRequest) => [SHA256_ALGORITHM_IDENTIFIER, date, credentialScope, hashedRequest].join('\\n');\n\nexport { getStringToSign };\n//# sourceMappingURL=getStringToSign.mjs.map\n","import { KEY_TYPE_IDENTIFIER, SIGNATURE_IDENTIFIER } from '../constants.mjs';\nimport { getHashedData } from './dataHashHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a signing key to be used for signing requests.\n *\n * @param secretAccessKey AWS secret access key from credentials.\n * @param date Current date in the format 'YYYYMMDD'.\n * @param region AWS region in which the service resides.\n * @param service Service to which the signed request is being sent.\n *\n * @returns `Uint8Array` calculated from its composite parts.\n *\n * @internal\n */\nconst getSigningKey = (secretAccessKey, date, region, service) => {\n    const key = `${SIGNATURE_IDENTIFIER}${secretAccessKey}`;\n    const dateKey = getHashedData(key, date);\n    const regionKey = getHashedData(dateKey, region);\n    const serviceKey = getHashedData(regionKey, service);\n    const signingKey = getHashedData(serviceKey, KEY_TYPE_IDENTIFIER);\n    return signingKey;\n};\n\nexport { getSigningKey };\n//# sourceMappingURL=getSigningKey.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a `Date` that is corrected for clock skew.\n *\n * @param systemClockOffset The offset of the system clock in milliseconds.\n *\n * @returns `Date` representing the current time adjusted by the system clock offset.\n *\n * @internal\n */\nconst getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\n\nexport { getSkewCorrectedDate };\n//# sourceMappingURL=getSkewCorrectedDate.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst SEND_UPLOAD_PROGRESS_EVENT = 'sendUploadProgress';\nconst SEND_DOWNLOAD_PROGRESS_EVENT = 'sendDownloadProgress';\nconst NETWORK_ERROR_MESSAGE = 'Network Error';\nconst NETWORK_ERROR_CODE = 'ERR_NETWORK';\nconst ABORT_ERROR_MESSAGE = 'Request aborted';\nconst ABORT_ERROR_CODE = 'ERR_ABORTED';\nconst CANCELED_ERROR_MESSAGE = 'canceled';\nconst CANCELED_ERROR_CODE = 'ERR_CANCELED';\nconst CONTENT_SHA256_HEADER = 'x-amz-content-sha256';\n\nexport { ABORT_ERROR_CODE, ABORT_ERROR_MESSAGE, CANCELED_ERROR_CODE, CANCELED_ERROR_MESSAGE, CONTENT_SHA256_HEADER, NETWORK_ERROR_CODE, NETWORK_ERROR_MESSAGE, SEND_DOWNLOAD_PROGRESS_EVENT, SEND_UPLOAD_PROGRESS_EVENT };\n//# sourceMappingURL=constants.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Cache the payload of a response body. It allows multiple calls to the body,\n * for example, when reading the body in both retry decider and error deserializer.\n * Caching body is allowed here because we call the body accessor(blob(), json(),\n * etc.) when body is small or streaming implementation is not available(RN).\n *\n * @internal\n */\nconst withMemoization = (payloadAccessor) => {\n    let cached;\n    return () => {\n        if (!cached) {\n            // Explicitly not awaiting. Intermediate await would add overhead and\n            // introduce a possible race in the event that this wrapper is called\n            // again before the first `payloadAccessor` call resolves.\n            cached = payloadAccessor();\n        }\n        return cached;\n    };\n};\n\nexport { withMemoization };\n//# sourceMappingURL=memoization.mjs.map\n","import { withMemoization } from '@aws-amplify/core/internals/aws-client-utils';\nimport { ConsoleLogger } from '@aws-amplify/core';\nimport { CanceledError } from '../../../../../errors/CanceledError.mjs';\nimport { StorageError } from '../../../../../errors/StorageError.mjs';\nimport { NETWORK_ERROR_MESSAGE, NETWORK_ERROR_CODE, ABORT_ERROR_MESSAGE, ABORT_ERROR_CODE, CANCELED_ERROR_CODE, CANCELED_ERROR_MESSAGE } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('xhr-http-handler');\n/**\n * Base transfer handler implementation using XMLHttpRequest to support upload and download progress events.\n *\n * @param request - The request object.\n * @param options - The request options.\n * @returns A promise that will be resolved with the response object.\n *\n * @internal\n */\nconst xhrTransferHandler = (request, options) => {\n    const { url, method, headers, body } = request;\n    const { onDownloadProgress, onUploadProgress, responseType, abortSignal } = options;\n    return new Promise((resolve, reject) => {\n        let xhr = new XMLHttpRequest();\n        xhr.open(method.toUpperCase(), url.toString());\n        Object.entries(headers)\n            .filter(([header]) => !FORBIDDEN_HEADERS.includes(header))\n            .forEach(([header, value]) => {\n            xhr.setRequestHeader(header, value);\n        });\n        xhr.responseType = responseType;\n        if (onDownloadProgress) {\n            xhr.addEventListener('progress', event => {\n                onDownloadProgress(convertToTransferProgressEvent(event));\n                logger.debug(event);\n            });\n        }\n        if (onUploadProgress) {\n            xhr.upload.addEventListener('progress', event => {\n                onUploadProgress(convertToTransferProgressEvent(event));\n                logger.debug(event);\n            });\n        }\n        xhr.addEventListener('error', () => {\n            const networkError = new StorageError({\n                message: NETWORK_ERROR_MESSAGE,\n                name: NETWORK_ERROR_CODE,\n            });\n            logger.error(NETWORK_ERROR_MESSAGE);\n            reject(networkError);\n            xhr = null; // clean up request\n        });\n        // Handle browser request cancellation (as opposed to a manual cancellation)\n        xhr.addEventListener('abort', () => {\n            // The abort event can be triggered after the error or load event. So we need to check if the xhr is null.\n            // When request is aborted by AbortSignal, the promise is rejected in the abortSignal's 'abort' event listener.\n            if (!xhr || abortSignal?.aborted)\n                return;\n            // Handle abort request caused by browser instead of AbortController\n            // see: https://github.com/axios/axios/issues/537\n            const error = buildHandlerError(ABORT_ERROR_MESSAGE, ABORT_ERROR_CODE);\n            logger.error(ABORT_ERROR_MESSAGE);\n            reject(error);\n            xhr = null; // clean up request\n        });\n        // Skip handling timeout error since we don't have a timeout\n        xhr.addEventListener('readystatechange', () => {\n            if (!xhr || xhr.readyState !== xhr.DONE) {\n                return;\n            }\n            const onloadend = () => {\n                // The load event is triggered after the error/abort/load event. So we need to check if the xhr is null.\n                if (!xhr)\n                    return;\n                const responseHeaders = convertResponseHeaders(xhr.getAllResponseHeaders());\n                const { responseType: loadEndResponseType } = xhr;\n                const responseBlob = xhr.response;\n                const responseText = loadEndResponseType === 'text' ? xhr.responseText : '';\n                const bodyMixIn = {\n                    blob: () => Promise.resolve(responseBlob),\n                    text: withMemoization(() => loadEndResponseType === 'blob'\n                        ? readBlobAsText(responseBlob)\n                        : Promise.resolve(responseText)),\n                    json: () => Promise.reject(\n                    // S3 does not support JSON response. So fail-fast here with nicer error message.\n                    new Error('Parsing response to JSON is not implemented. Please use response.text() instead.')),\n                };\n                const response = {\n                    statusCode: xhr.status,\n                    headers: responseHeaders,\n                    // The xhr.responseType is only set to 'blob' for streaming binary S3 object data. The streaming data is\n                    // exposed via public interface of Storage.get(). So we need to return the response as a Blob object for\n                    // backward compatibility. In other cases, the response payload is only used internally, we return it is\n                    // {@link ResponseBodyMixin}\n                    body: (xhr.responseType === 'blob'\n                        ? Object.assign(responseBlob, bodyMixIn)\n                        : bodyMixIn),\n                };\n                resolve(response);\n                xhr = null; // clean up request\n            };\n            // readystate handler is calling before onerror or ontimeout handlers,\n            // so we should call onloadend on the next 'tick'\n            // @see https://github.com/axios/axios/blob/9588fcdec8aca45c3ba2f7968988a5d03f23168c/lib/adapters/xhr.js#L98-L99\n            setTimeout(onloadend);\n        });\n        if (abortSignal) {\n            const onCanceled = () => {\n                // The abort event is triggered after the error or load event. So we need to check if the xhr is null.\n                if (!xhr) {\n                    return;\n                }\n                const canceledError = new CanceledError({\n                    name: CANCELED_ERROR_CODE,\n                    message: CANCELED_ERROR_MESSAGE,\n                });\n                reject(canceledError);\n                xhr.abort();\n                xhr = null;\n            };\n            abortSignal.aborted\n                ? onCanceled()\n                : abortSignal.addEventListener('abort', onCanceled);\n        }\n        if (typeof ReadableStream === 'function' &&\n            body instanceof ReadableStream) {\n            // This does not matter as previous implementation uses Axios which does not support ReadableStream anyway.\n            throw new Error('ReadableStream request payload is not supported.');\n        }\n        xhr.send(body ?? null);\n    });\n};\nconst convertToTransferProgressEvent = (event) => ({\n    transferredBytes: event.loaded,\n    totalBytes: event.lengthComputable ? event.total : undefined,\n});\nconst buildHandlerError = (message, name) => {\n    const error = new Error(message);\n    error.name = name;\n    return error;\n};\n/**\n * Convert xhr.getAllResponseHeaders() string to a Record<string, string>. Note that modern browser already returns\n * header names in lowercase.\n * @param xhrHeaders - string of headers returned from xhr.getAllResponseHeaders()\n */\nconst convertResponseHeaders = (xhrHeaders) => {\n    if (!xhrHeaders) {\n        return {};\n    }\n    return xhrHeaders\n        .split('\\r\\n')\n        .reduce((headerMap, line) => {\n        const parts = line.split(': ');\n        const header = parts.shift();\n        const value = parts.join(': ');\n        headerMap[header.toLowerCase()] = value;\n        return headerMap;\n    }, {});\n};\nconst readBlobAsText = (blob) => {\n    const reader = new FileReader();\n    return new Promise((resolve, reject) => {\n        reader.onloadend = () => {\n            if (reader.readyState !== FileReader.DONE) {\n                return;\n            }\n            resolve(reader.result);\n        };\n        reader.onerror = () => {\n            reject(reader.error);\n        };\n        reader.readAsText(blob);\n    });\n};\n// To add more forbidden headers as found set by S3. Intentionally NOT list all of them here to save bundle size.\n// https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name\nconst FORBIDDEN_HEADERS = ['host'];\n\nexport { xhrTransferHandler };\n//# sourceMappingURL=xhrTransferHandler.mjs.map\n","import { userAgentMiddlewareFactory, retryMiddlewareFactory, signingMiddlewareFactory } from '@aws-amplify/core/internals/aws-client-utils';\nimport { composeTransferHandler } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { contentSha256MiddlewareFactory } from '../contentSha256middleware.mjs';\nimport { xhrTransferHandler } from '../xhrTransferHandler.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * S3 transfer handler for browser and React Native based on XHR. On top of basic transfer handler, it also supports\n * x-amz-content-sha256 header, and request&response process tracking.\n *\n * @internal\n */\nconst s3TransferHandler = composeTransferHandler(xhrTransferHandler, [\n    contentSha256MiddlewareFactory,\n    userAgentMiddlewareFactory,\n    retryMiddlewareFactory,\n    signingMiddlewareFactory,\n]);\n\nexport { s3TransferHandler };\n//# sourceMappingURL=xhr.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Compose a transfer handler with a core transfer handler and a list of middleware.\n * @param coreHandler Core transfer handler\n * @param middleware\tList of middleware\n * @returns A transfer handler whose option type is the union of the core\n * \ttransfer handler's option type and the middleware's option type.\n * @internal\n */\nconst composeTransferHandler = (coreHandler, middleware) => (request, options) => {\n    const context = {};\n    let composedHandler = (composeHandlerRequest) => coreHandler(composeHandlerRequest, options);\n    for (let i = middleware.length - 1; i >= 0; i--) {\n        const m = middleware[i];\n        const resolvedMiddleware = m(options);\n        composedHandler = resolvedMiddleware(composedHandler, context);\n    }\n    return composedHandler(request);\n};\n\nexport { composeTransferHandler };\n//# sourceMappingURL=composeTransferHandler.mjs.map\n","import { getHashedPayload } from '@aws-amplify/core/internals/aws-client-utils';\nimport { CONTENT_SHA256_HEADER } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * A middleware that adds the x-amz-content-sha256 header to the request if it is not already present.\n * It's required for S3 requests in browsers where the request body is sent in 1 chunk.\n * @see https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-header-based-auth.html\n *\n * @internal\n */\nconst contentSha256MiddlewareFactory = () => (next) => async function contentSha256Middleware(request) {\n    if (request.headers[CONTENT_SHA256_HEADER]) {\n        return next(request);\n    }\n    else {\n        const hash = await getHashedPayload(request.body);\n        request.headers[CONTENT_SHA256_HEADER] = hash;\n        return next(request);\n    }\n};\n\nexport { contentSha256MiddlewareFactory };\n//# sourceMappingURL=contentSha256middleware.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Middleware injects user agent string to specified header(default to 'x-amz-user-agent'),\n * if the header is not set already.\n *\n * TODO: incorporate new user agent design\n */\nconst userAgentMiddlewareFactory = ({ userAgentHeader = 'x-amz-user-agent', userAgentValue = '', }) => next => {\n    return async function userAgentMiddleware(request) {\n        if (userAgentValue.trim().length === 0) {\n            const result = await next(request);\n            return result;\n        }\n        else {\n            const headerName = userAgentHeader.toLowerCase();\n            request.headers[headerName] = request.headers[headerName]\n                ? `${request.headers[headerName]} ${userAgentValue}`\n                : userAgentValue;\n            const response = await next(request);\n            return response;\n        }\n    };\n};\n\nexport { userAgentMiddlewareFactory };\n//# sourceMappingURL=middleware.mjs.map\n","import { signRequest } from './signer/signatureV4/signRequest.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport { getSkewCorrectedDate } from './utils/getSkewCorrectedDate.mjs';\nimport { getUpdatedSystemClockOffset } from './utils/getUpdatedSystemClockOffset.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Middleware that SigV4 signs request with AWS credentials, and correct system clock offset.\n * This middleware is expected to be placed after retry middleware.\n */\nconst signingMiddlewareFactory = ({ credentials, region, service, uriEscapePath = true, }) => {\n    let currentSystemClockOffset;\n    return (next, context) => async function signingMiddleware(request) {\n        currentSystemClockOffset = currentSystemClockOffset ?? 0;\n        const signRequestOptions = {\n            credentials: typeof credentials === 'function'\n                ? await credentials({\n                    forceRefresh: !!context?.isCredentialsExpired,\n                })\n                : credentials,\n            signingDate: getSkewCorrectedDate(currentSystemClockOffset),\n            signingRegion: region,\n            signingService: service,\n            uriEscapePath,\n        };\n        const signedRequest = await signRequest(request, signRequestOptions);\n        const response = await next(signedRequest);\n        // Update system clock offset if response contains date header, regardless of the status code.\n        // non-2xx response will still be returned from next handler instead of thrown, because it's\n        // only thrown by the retry middleware.\n        const dateString = getDateHeader(response);\n        if (dateString) {\n            currentSystemClockOffset = getUpdatedSystemClockOffset(Date.parse(dateString), currentSystemClockOffset);\n        }\n        return response;\n    };\n};\nconst getDateHeader = ({ headers } = {}) => headers?.date ?? headers?.Date ?? headers?.['x-amz-date'];\n\nexport { signingMiddlewareFactory };\n//# sourceMappingURL=middleware.mjs.map\n","import { getSignedHeaders } from './utils/getSignedHeaders.mjs';\nimport { getSigningValues } from './utils/getSigningValues.mjs';\nimport { HOST_HEADER, AMZ_DATE_HEADER, TOKEN_HEADER, AUTH_HEADER, SHA256_ALGORITHM_IDENTIFIER } from './constants.mjs';\nimport { getSignature } from './utils/getSignature.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Given a `HttpRequest`, returns a Signature Version 4 signed `HttpRequest`.\n *\n * @param request `HttpRequest` to be signed.\n * @param signRequestOptions `SignRequestOptions` object containing values used to construct the signature.\n * @returns A `HttpRequest` with authentication headers which can grant temporary access to AWS resources.\n */\nconst signRequest = (request, options) => {\n    const signingValues = getSigningValues(options);\n    const { accessKeyId, credentialScope, longDate, sessionToken } = signingValues;\n    // create the request to sign\n    const headers = { ...request.headers };\n    headers[HOST_HEADER] = request.url.host;\n    headers[AMZ_DATE_HEADER] = longDate;\n    if (sessionToken) {\n        headers[TOKEN_HEADER] = sessionToken;\n    }\n    const requestToSign = { ...request, headers };\n    // calculate and add the signature to the request\n    const signature = getSignature(requestToSign, signingValues);\n    const credentialEntry = `Credential=${accessKeyId}/${credentialScope}`;\n    const signedHeadersEntry = `SignedHeaders=${getSignedHeaders(headers)}`;\n    const signatureEntry = `Signature=${signature}`;\n    headers[AUTH_HEADER] =\n        `${SHA256_ALGORITHM_IDENTIFIER} ${credentialEntry}, ${signedHeadersEntry}, ${signatureEntry}`;\n    return requestToSign;\n};\n\nexport { signRequest };\n//# sourceMappingURL=signRequest.mjs.map\n","import { isClockSkewed } from './isClockSkewed.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns the difference between clock time and the current system time if clock is skewed.\n *\n * @param clockTimeInMilliseconds Clock time in milliseconds.\n * @param currentSystemClockOffset Current system clock offset in milliseconds.\n *\n * @internal\n */\nconst getUpdatedSystemClockOffset = (clockTimeInMilliseconds, currentSystemClockOffset) => {\n    if (isClockSkewed(clockTimeInMilliseconds, currentSystemClockOffset)) {\n        return clockTimeInMilliseconds - Date.now();\n    }\n    return currentSystemClockOffset;\n};\n\nexport { getUpdatedSystemClockOffset };\n//# sourceMappingURL=getUpdatedSystemClockOffset.mjs.map\n","import { getSkewCorrectedDate } from './getSkewCorrectedDate.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// 5 mins in milliseconds. Ref: https://github.com/aws/aws-sdk-js-v3/blob/6c0f44fab30a1bb2134af47362a31332abc3666b/packages/middleware-signing/src/utils/isClockSkewed.ts#L10\nconst SKEW_WINDOW = 5 * 60 * 1000;\n/**\n * Checks if the provided date is within the skew window of 5 minutes.\n *\n * @param clockTimeInMilliseconds Time to check for skew in milliseconds.\n * @param clockOffsetInMilliseconds Offset to check clock against in milliseconds.\n *\n * @returns True if skewed. False otherwise.\n *\n * @internal\n */\nconst isClockSkewed = (clockTimeInMilliseconds, clockOffsetInMilliseconds) => Math.abs(getSkewCorrectedDate(clockOffsetInMilliseconds).getTime() -\n    clockTimeInMilliseconds) >= SKEW_WINDOW;\n\nexport { isClockSkewed };\n//# sourceMappingURL=isClockSkewed.mjs.map\n","import { StorageError } from '../../../../../errors/StorageError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Maps an object to a new object using the provided instructions.\n * The instructions are a map of the returning mapped object's property names to a single instruction of how to map the\n * value from the original object to the new object. There are two types of instructions:\n *\n * 1. A string representing the property name of the original object to map to the new object. The value mapped from\n * the original object will be the same as the value in the new object, and it can ONLY be string.\n *\n * 2. An array of two elements. The first element is the property name of the original object to map to the new object.\n * The second element is a function that takes the value from the original object and returns the value to be mapped to\n * the new object. The function can return any type.\n *\n * Example:\n * ```typescript\n * const input = {\n *   Foo: 'foo',\n *   BarList: [{value: 'bar1'}, {value: 'bar2'}]\n * }\n * const output = map(input, {\n *   someFoo: 'Foo',\n *   bar: ['BarList', (barList) => barList.map(bar => bar.value)]\n *   baz: 'Baz' // Baz does not exist in input, so it will not be in the output.\n * });\n * // output = { someFoo: 'foo', bar: ['bar1', 'bar2'] }\n * ```\n *\n * @param obj The object containing the data to compose mapped object.\n * @param instructions The instructions mapping the object values to the new object.\n * @returns A new object with the mapped values.\n *\n * @internal\n */\nconst map = (obj, instructions) => {\n    const result = {};\n    for (const [key, instruction] of Object.entries(instructions)) {\n        const [accessor, deserializer] = Array.isArray(instruction)\n            ? instruction\n            : [instruction];\n        if (Object.prototype.hasOwnProperty.call(obj, accessor)) {\n            result[key] = deserializer\n                ? deserializer(obj[accessor])\n                : String(obj[accessor]);\n        }\n    }\n    return result;\n};\n/**\n * Deserializes a string to a number. Returns undefined if input is undefined.\n *\n * @internal\n */\nconst deserializeNumber = (value) => value ? Number(value) : undefined;\n/**\n * Deserializes a string to a boolean. Returns undefined if input is undefined. Returns true if input is 'true',\n * otherwise false.\n *\n * @internal\n */\nconst deserializeBoolean = (value) => {\n    return value ? value === 'true' : undefined;\n};\n/**\n * Deserializes a string to a Date. Returns undefined if input is undefined.\n * It supports epoch timestamp; rfc3339(cannot have a UTC, fractional precision supported); rfc7231(section 7.1.1.1)\n *\n * @see https://www.epoch101.com/\n * @see https://datatracker.ietf.org/doc/html/rfc3339.html#section-5.6\n * @see https://datatracker.ietf.org/doc/html/rfc7231.html#section-7.1.1.1\n *\n * @note For bundle size consideration, we use Date constructor to parse the timestamp string. There might be slight\n * difference among browsers.\n *\n * @internal\n */\nconst deserializeTimestamp = (value) => {\n    return value ? new Date(value) : undefined;\n};\n/**\n * Create a function deserializing a string to an enum value. If the string is not a valid enum value, it throws a\n * StorageError.\n *\n * @example\n * ```typescript\n * const deserializeStringEnum = createStringEnumDeserializer(['a', 'b', 'c'] as const, 'FieldName');\n * const deserializedArray = ['a', 'b', 'c'].map(deserializeStringEnum);\n * // deserializedArray = ['a', 'b', 'c']\n *\n * const invalidValue = deserializeStringEnum('d');\n * // Throws InvalidFieldName: Invalid FieldName: d\n * ```\n *\n * @internal\n */\nconst createStringEnumDeserializer = (enumValues, fieldName) => {\n    const deserializeStringEnum = (value) => {\n        const parsedEnumValue = value\n            ? enumValues.find(enumValue => enumValue === value)\n            : undefined;\n        if (!parsedEnumValue) {\n            throw new StorageError({\n                name: `Invalid${fieldName}`,\n                message: `Invalid ${fieldName}: ${value}`,\n                recoverySuggestion: 'This is likely to be a bug. Please reach out to library authors.',\n            });\n        }\n        return parsedEnumValue;\n    };\n    return deserializeStringEnum;\n};\n/**\n * Function that makes sure the deserializer receives non-empty array.\n *\n * @internal\n */\nconst emptyArrayGuard = (value, deserializer) => {\n    if (value === '') {\n        return [];\n    }\n    const valueArray = (Array.isArray(value) ? value : [value]).filter(e => e != null);\n    return deserializer(valueArray);\n};\n/**\n * @internal\n */\nconst deserializeMetadata = (headers) => {\n    const objectMetadataHeaderPrefix = 'x-amz-meta-';\n    const deserialized = Object.keys(headers)\n        .filter(header => header.startsWith(objectMetadataHeaderPrefix))\n        .reduce((acc, header) => {\n        acc[header.replace(objectMetadataHeaderPrefix, '')] = headers[header];\n        return acc;\n    }, {});\n    return Object.keys(deserialized).length > 0 ? deserialized : undefined;\n};\n/**\n * Internal-only method to create a new StorageError from a service error.\n *\n * @internal\n */\nconst buildStorageServiceError = (error, statusCode) => {\n    const storageError = new StorageError({\n        name: error.name,\n        message: error.message,\n    });\n    if (statusCode === 404) {\n        storageError.recoverySuggestion =\n            'Please add the object with this key to the bucket as the key is not found.';\n    }\n    return storageError;\n};\n/**\n * Internal-only method used for deserializing the parts of a multipart upload.\n *\n * @internal\n */\nconst deserializeCompletedPartList = (input) => input.map(item => map(item, {\n    PartNumber: ['PartNumber', deserializeNumber],\n    ETag: 'ETag',\n    ChecksumCRC32: 'ChecksumCRC32',\n}));\n\nexport { buildStorageServiceError, createStringEnumDeserializer, deserializeBoolean, deserializeCompletedPartList, deserializeMetadata, deserializeNumber, deserializeTimestamp, emptyArrayGuard, map };\n//# sourceMappingURL=deserializeHelpers.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Wraps encodeURIComponent to encode additional characters to fully adhere to RFC 3986.\n * @see https://github.com/aws/aws-sdk-js-v3/blob/86b432c464150069678b25ff88d57c2ca26e75a2/packages/smithy-client/src/extended-encode-uri-component.ts#L7\n *\n * @param uri URI string to encode\n * @returns RFC 3986 encoded string\n *\n * @internal\n */\nconst extendedEncodeURIComponent = (uri) => {\n    // Match characters normally not encoded by `encodeURIComponent`\n    const extendedCharacters = /[!'()*]/g;\n    return encodeURIComponent(uri).replace(extendedCharacters, hexEncode);\n};\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n\nexport { extendedEncodeURIComponent };\n//# sourceMappingURL=extendedEncodeURIComponent.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar AmplifyErrorCode;\n(function (AmplifyErrorCode) {\n    AmplifyErrorCode[\"NoEndpointId\"] = \"NoEndpointId\";\n    AmplifyErrorCode[\"PlatformNotSupported\"] = \"PlatformNotSupported\";\n    AmplifyErrorCode[\"Unknown\"] = \"Unknown\";\n    AmplifyErrorCode[\"NetworkError\"] = \"NetworkError\";\n})(AmplifyErrorCode || (AmplifyErrorCode = {}));\n\nexport { AmplifyErrorCode };\n//# sourceMappingURL=errors.mjs.map\n","import { extendedEncodeURIComponent } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyErrorCode } from '@aws-amplify/core/internals/utils';\nimport { StorageError } from '../../../../../errors/StorageError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nconst assignStringVariables = (values) => {\n    const queryParams = {};\n    for (const [key, value] of Object.entries(values)) {\n        if (value != null) {\n            queryParams[key] = value.toString();\n        }\n    }\n    return queryParams;\n};\n/**\n * Serailize the parameters for configuring the S3 object. Currently used by\n * `putObject` and `createMultipartUpload` API.\n *\n * @internal\n */\nconst serializeObjectConfigsToHeaders = async (input) => ({\n    ...assignStringVariables({\n        'x-amz-acl': input.ACL,\n        'cache-control': input.CacheControl,\n        'content-disposition': input.ContentDisposition,\n        'content-language': input.ContentLanguage,\n        'content-encoding': input.ContentEncoding,\n        'content-type': input.ContentType,\n        expires: input.Expires?.toUTCString(),\n        'x-amz-tagging': input.Tagging,\n        ...serializeMetadata(input.Metadata),\n    }),\n});\nconst serializeMetadata = (metadata = {}) => Object.keys(metadata).reduce((acc, suffix) => {\n    acc[`x-amz-meta-${suffix.toLowerCase()}`] = metadata[suffix];\n    return acc;\n}, {});\n/**\n * Serialize the object key to a URL pathname.\n * @see https://github.com/aws/aws-sdk-js-v3/blob/7ed7101dcc4e81038b6c7f581162b959e6b33a04/clients/client-s3/src/protocols/Aws_restXml.ts#L1108\n *\n * @internal\n */\nconst serializePathnameObjectKey = (url, key) => {\n    return (url.pathname.replace(/\\/$/, '') +\n        `/${key.split('/').map(extendedEncodeURIComponent).join('/')}`);\n};\nfunction validateS3RequiredParameter(assertion, paramName) {\n    if (!assertion) {\n        throw new StorageError({\n            name: AmplifyErrorCode.Unknown,\n            message: 'An unknown error has occurred.',\n            underlyingError: new TypeError(`Expected a non-null value for S3 parameter ${paramName}`),\n            recoverySuggestion: 'This is likely to be a bug. Please reach out to library authors.',\n        });\n    }\n}\n\nexport { assignStringVariables, serializeObjectConfigsToHeaders, serializePathnameObjectKey, validateS3RequiredParameter };\n//# sourceMappingURL=serializeHelpers.mjs.map\n","import { AmplifyErrorCode } from '@aws-amplify/core/internals/utils';\nimport { StorageError } from './StorageError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass IntegrityError extends StorageError {\n    constructor(params = {\n        name: AmplifyErrorCode.Unknown,\n        message: 'An unknown error has occurred.',\n        recoverySuggestion: 'This may be a bug. Please reach out to library authors.',\n    }) {\n        super(params);\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = IntegrityError;\n        Object.setPrototypeOf(this, IntegrityError.prototype);\n    }\n}\n\nexport { IntegrityError };\n//# sourceMappingURL=IntegrityError.mjs.map\n","import { extendedEncodeURIComponent } from '@aws-amplify/core/internals/aws-client-utils';\nimport { IntegrityError } from '../../../errors/IntegrityError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction validateObjectUrl({ bucketName, key, objectURL, }) {\n    if (!bucketName || !key || !objectURL) {\n        throw new IntegrityError();\n    }\n    const bucketWithDots = bucketName.includes('.');\n    const encodedBucketName = extendedEncodeURIComponent(bucketName);\n    const encodedKey = key.split('/').map(extendedEncodeURIComponent).join('/');\n    const isPathStyleUrl = objectURL.pathname === `/${encodedBucketName}/${encodedKey}`;\n    const isSubdomainUrl = objectURL.hostname.startsWith(`${encodedBucketName}.`) &&\n        objectURL.pathname === `/${encodedKey}`;\n    if (!(isPathStyleUrl || (!bucketWithDots && isSubdomainUrl))) {\n        throw new IntegrityError();\n    }\n}\n\nexport { validateObjectUrl };\n//# sourceMappingURL=validateObjectUrl.mjs.map\n","// generated by genversion\nconst version = '6.10.2';\n\nexport { version };\n//# sourceMappingURL=version.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst globalExists = () => {\n    return typeof global !== 'undefined';\n};\nconst globalThisExists = () => {\n    return typeof globalThis !== 'undefined';\n};\nconst windowExists = () => {\n    return typeof window !== 'undefined';\n};\nconst documentExists = () => {\n    return typeof document !== 'undefined';\n};\nconst processExists = () => {\n    return typeof process !== 'undefined';\n};\nconst keyPrefixMatch = (object, prefix) => {\n    return !!Object.keys(object).find(key => key.startsWith(prefix));\n};\n\nexport { documentExists, globalExists, globalThisExists, keyPrefixMatch, processExists, windowExists };\n//# sourceMappingURL=helpers.mjs.map\n","import { Framework } from '../types.mjs';\nimport { reactWebDetect, reactSSRDetect } from './React.mjs';\nimport { vueWebDetect, vueSSRDetect } from './Vue.mjs';\nimport { svelteWebDetect, svelteSSRDetect } from './Svelte.mjs';\nimport { nextWebDetect, nextSSRDetect } from './Next.mjs';\nimport { nuxtWebDetect, nuxtSSRDetect } from './Nuxt.mjs';\nimport { angularWebDetect, angularSSRDetect } from './Angular.mjs';\nimport { reactNativeDetect } from './ReactNative.mjs';\nimport { expoDetect } from './Expo.mjs';\nimport { webDetect } from './Web.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// These are in the order of detection where when both are detectable, the early Framework will be reported\nconst detectionMap = [\n    // First, detect mobile\n    { platform: Framework.Expo, detectionMethod: expoDetect },\n    { platform: Framework.ReactNative, detectionMethod: reactNativeDetect },\n    // Next, detect web frameworks\n    { platform: Framework.NextJs, detectionMethod: nextWebDetect },\n    { platform: Framework.Nuxt, detectionMethod: nuxtWebDetect },\n    { platform: Framework.Angular, detectionMethod: angularWebDetect },\n    { platform: Framework.React, detectionMethod: reactWebDetect },\n    { platform: Framework.VueJs, detectionMethod: vueWebDetect },\n    { platform: Framework.Svelte, detectionMethod: svelteWebDetect },\n    { platform: Framework.WebUnknown, detectionMethod: webDetect },\n    // Last, detect ssr frameworks\n    { platform: Framework.NextJsSSR, detectionMethod: nextSSRDetect },\n    { platform: Framework.NuxtSSR, detectionMethod: nuxtSSRDetect },\n    { platform: Framework.ReactSSR, detectionMethod: reactSSRDetect },\n    { platform: Framework.VueJsSSR, detectionMethod: vueSSRDetect },\n    { platform: Framework.AngularSSR, detectionMethod: angularSSRDetect },\n    { platform: Framework.SvelteSSR, detectionMethod: svelteSSRDetect },\n];\nfunction detect() {\n    return (detectionMap.find(detectionEntry => detectionEntry.detectionMethod())\n        ?.platform || Framework.ServerSideUnknown);\n}\n\nexport { detect };\n//# sourceMappingURL=index.mjs.map\n","import { globalExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with expo 48 / react-native 0.71.3\nfunction expoDetect() {\n    return globalExists() && typeof global.expo !== 'undefined';\n}\n\nexport { expoDetect };\n//# sourceMappingURL=Expo.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with react-native 0.17.7\nfunction reactNativeDetect() {\n    return (typeof navigator !== 'undefined' &&\n        typeof navigator.product !== 'undefined' &&\n        navigator.product === 'ReactNative');\n}\n\nexport { reactNativeDetect };\n//# sourceMappingURL=ReactNative.mjs.map\n","import { windowExists, globalExists, keyPrefixMatch } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with next 13.4 / react 18.2\nfunction nextWebDetect() {\n    return (windowExists() &&\n        window.next &&\n        typeof window.next === 'object');\n}\nfunction nextSSRDetect() {\n    return (globalExists() &&\n        (keyPrefixMatch(global, '__next') || keyPrefixMatch(global, '__NEXT')));\n}\n\nexport { nextSSRDetect, nextWebDetect };\n//# sourceMappingURL=Next.mjs.map\n","import { windowExists, globalExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with nuxt 2.15 / vue 2.7\nfunction nuxtWebDetect() {\n    return (windowExists() &&\n        (window.__NUXT__ !== undefined ||\n            window.$nuxt !== undefined));\n}\nfunction nuxtSSRDetect() {\n    return (globalExists() && typeof global.__NUXT_PATHS__ !== 'undefined');\n}\n\nexport { nuxtSSRDetect, nuxtWebDetect };\n//# sourceMappingURL=Nuxt.mjs.map\n","import { documentExists, processExists, windowExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with @angular/core 16.0.0\nfunction angularWebDetect() {\n    const angularVersionSetInDocument = Boolean(documentExists() && document.querySelector('[ng-version]'));\n    const angularContentSetInWindow = Boolean(windowExists() && typeof window.ng !== 'undefined');\n    return angularVersionSetInDocument || angularContentSetInWindow;\n}\nfunction angularSSRDetect() {\n    return ((processExists() &&\n        typeof process.env === 'object' &&\n        process.env.npm_lifecycle_script?.startsWith('ng ')) ||\n        false);\n}\n\nexport { angularSSRDetect, angularWebDetect };\n//# sourceMappingURL=Angular.mjs.map\n","import { documentExists, processExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with react 18.2 - built using Vite\nfunction reactWebDetect() {\n    const elementKeyPrefixedWithReact = (key) => {\n        return key.startsWith('_react') || key.startsWith('__react');\n    };\n    const elementIsReactEnabled = (element) => {\n        return Object.keys(element).find(elementKeyPrefixedWithReact);\n    };\n    const allElementsWithId = () => Array.from(document.querySelectorAll('[id]'));\n    return documentExists() && allElementsWithId().some(elementIsReactEnabled);\n}\nfunction reactSSRDetect() {\n    return (processExists() &&\n        typeof process.env !== 'undefined' &&\n        !!Object.keys(process.env).find(key => key.includes('react')));\n}\n// use the some\n\nexport { reactSSRDetect, reactWebDetect };\n//# sourceMappingURL=React.mjs.map\n","import { windowExists, keyPrefixMatch, globalExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with vue 3.3.2\nfunction vueWebDetect() {\n    return windowExists() && keyPrefixMatch(window, '__VUE');\n}\nfunction vueSSRDetect() {\n    return globalExists() && keyPrefixMatch(global, '__VUE');\n}\n\nexport { vueSSRDetect, vueWebDetect };\n//# sourceMappingURL=Vue.mjs.map\n","import { windowExists, keyPrefixMatch, processExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with svelte 3.59\nfunction svelteWebDetect() {\n    return windowExists() && keyPrefixMatch(window, '__SVELTE');\n}\nfunction svelteSSRDetect() {\n    return (processExists() &&\n        typeof process.env !== 'undefined' &&\n        !!Object.keys(process.env).find(key => key.includes('svelte')));\n}\n\nexport { svelteSSRDetect, svelteWebDetect };\n//# sourceMappingURL=Svelte.mjs.map\n","import { windowExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction webDetect() {\n    return windowExists();\n}\n\nexport { webDetect };\n//# sourceMappingURL=Web.mjs.map\n","import { Framework } from './types.mjs';\nimport { detect } from './detection/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// We want to cache detection since the framework won't change\nlet frameworkCache;\nconst frameworkChangeObservers = [];\n// Setup the detection reset tracking / timeout delays\nlet resetTriggered = false;\nconst SSR_RESET_TIMEOUT = 10; // ms\nconst WEB_RESET_TIMEOUT = 10; // ms\nconst PRIME_FRAMEWORK_DELAY = 1000; // ms\nconst detectFramework = () => {\n    if (!frameworkCache) {\n        frameworkCache = detect();\n        if (resetTriggered) {\n            // The final run of detectFramework:\n            // Starting from this point, the `frameworkCache` becomes \"final\".\n            // So we don't need to notify the observers again so the observer\n            // can be removed after the final notice.\n            while (frameworkChangeObservers.length) {\n                frameworkChangeObservers.pop()?.();\n            }\n        }\n        else {\n            // The first run of detectFramework:\n            // Every time we update the cache, call each observer function\n            frameworkChangeObservers.forEach(fcn => {\n                fcn();\n            });\n        }\n        // Retry once for either Unknown type after a delay (explained below)\n        resetTimeout(Framework.ServerSideUnknown, SSR_RESET_TIMEOUT);\n        resetTimeout(Framework.WebUnknown, WEB_RESET_TIMEOUT);\n    }\n    return frameworkCache;\n};\n/**\n * @internal Setup observer callback that will be called everytime the framework changes\n */\nconst observeFrameworkChanges = (fcn) => {\n    // When the `frameworkCache` won't be updated again, we ignore all incoming\n    // observers.\n    if (resetTriggered) {\n        return;\n    }\n    frameworkChangeObservers.push(fcn);\n};\nfunction clearCache() {\n    frameworkCache = undefined;\n}\n// For a framework type and a delay amount, setup the event to re-detect\n//   During the runtime boot, it is possible that framework detection will\n//   be triggered before the framework has made modifications to the\n//   global/window/etc needed for detection. When no framework is detected\n//   we will reset and try again to ensure we don't use a cached\n//   non-framework detection result for all requests.\nfunction resetTimeout(framework, delay) {\n    if (frameworkCache === framework && !resetTriggered) {\n        setTimeout(() => {\n            clearCache();\n            resetTriggered = true;\n            setTimeout(detectFramework, PRIME_FRAMEWORK_DELAY);\n        }, delay);\n    }\n}\n\nexport { clearCache, detectFramework, frameworkChangeObservers, observeFrameworkChanges };\n//# sourceMappingURL=detectFramework.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Maintains custom user-agent state set by external consumers.\nconst customUserAgentState = {};\n/**\n * Sets custom user agent state which will be appended to applicable requests. Returns a function that can be used to\n * clean up any custom state set with this API.\n *\n * @note\n * This API operates globally. Calling this API multiple times will result in the most recently set values for a\n * particular API being used.\n *\n * @note\n * This utility IS NOT compatible with SSR.\n *\n * @param input - SetCustomUserAgentInput that defines custom state to apply to the specified APIs.\n */\nconst setCustomUserAgent = (input) => {\n    // Save custom user-agent state & increment reference counter\n    // TODO Remove `any` when we upgrade to TypeScript 5.2, see: https://github.com/microsoft/TypeScript/issues/44373\n    customUserAgentState[input.category] = input.apis.reduce((acc, api) => ({\n        ...acc,\n        [api]: {\n            refCount: acc[api]?.refCount ? acc[api].refCount + 1 : 1,\n            additionalDetails: input.additionalDetails,\n        },\n    }), customUserAgentState[input.category] ?? {});\n    // Callback that cleans up state for APIs recorded by this call\n    let cleanUpCallbackCalled = false;\n    const cleanUpCallback = () => {\n        // Only allow the cleanup callback to be called once\n        if (cleanUpCallbackCalled) {\n            return;\n        }\n        cleanUpCallbackCalled = true;\n        input.apis.forEach(api => {\n            const apiRefCount = customUserAgentState[input.category][api].refCount;\n            if (apiRefCount > 1) {\n                customUserAgentState[input.category][api].refCount = apiRefCount - 1;\n            }\n            else {\n                delete customUserAgentState[input.category][api];\n                // Clean up category if no more APIs set\n                if (!Object.keys(customUserAgentState[input.category]).length) {\n                    delete customUserAgentState[input.category];\n                }\n            }\n        });\n    };\n    return cleanUpCallback;\n};\nconst getCustomUserAgent = (category, api) => customUserAgentState[category]?.[api]?.additionalDetails;\n\nexport { getCustomUserAgent, setCustomUserAgent };\n//# sourceMappingURL=customUserAgent.mjs.map\n","import { Framework } from './types.mjs';\nimport { version } from './version.mjs';\nimport { detectFramework, observeFrameworkChanges } from './detectFramework.mjs';\nimport { getCustomUserAgent } from './customUserAgent.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst BASE_USER_AGENT = `aws-amplify`;\n/** Sanitize Amplify version string be removing special character + and character post the special character  */\nconst sanitizeAmplifyVersion = (amplifyVersion) => amplifyVersion.replace(/\\+.*/, '');\nclass PlatformBuilder {\n    constructor() {\n        this.userAgent = `${BASE_USER_AGENT}/${sanitizeAmplifyVersion(version)}`;\n    }\n    get framework() {\n        return detectFramework();\n    }\n    get isReactNative() {\n        return (this.framework === Framework.ReactNative ||\n            this.framework === Framework.Expo);\n    }\n    observeFrameworkChanges(fcn) {\n        observeFrameworkChanges(fcn);\n    }\n}\nconst Platform = new PlatformBuilder();\nconst getAmplifyUserAgentObject = ({ category, action, } = {}) => {\n    const userAgent = [\n        [BASE_USER_AGENT, sanitizeAmplifyVersion(version)],\n    ];\n    if (category) {\n        userAgent.push([category, action]);\n    }\n    userAgent.push(['framework', detectFramework()]);\n    if (category && action) {\n        const customState = getCustomUserAgent(category, action);\n        if (customState) {\n            customState.forEach(state => {\n                userAgent.push(state);\n            });\n        }\n    }\n    return userAgent;\n};\nconst getAmplifyUserAgent = (customUserAgentDetails) => {\n    const userAgent = getAmplifyUserAgentObject(customUserAgentDetails);\n    const userAgentString = userAgent\n        .map(([agentKey, agentValue]) => agentKey && agentValue ? `${agentKey}/${agentValue}` : agentKey)\n        .join(' ');\n    return userAgentString;\n};\n\nexport { Platform, getAmplifyUserAgent, getAmplifyUserAgentObject, sanitizeAmplifyVersion };\n//# sourceMappingURL=index.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Default partition for AWS services. This is used when the region is not provided or the region is not recognized.\n *\n * @internal\n */\nconst defaultPartition = {\n    id: 'aws',\n    outputs: {\n        dnsSuffix: 'amazonaws.com',\n    },\n    regionRegex: '^(us|eu|ap|sa|ca|me|af)\\\\-\\\\w+\\\\-\\\\d+$',\n    regions: ['aws-global'],\n};\n/**\n * This data is adapted from the partition file from AWS SDK shared utilities but remove some contents for bundle size\n * concern. Information removed are `dualStackDnsSuffix`, `supportDualStack`, `supportFIPS`, restricted partitions, and\n * list of regions for each partition other than global regions.\n *\n * * Ref: https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints\n * * Ref: https://github.com/aws/aws-sdk-js-v3/blob/0201baef03c2379f1f6f7150b9d401d4b230d488/packages/util-endpoints/src/lib/aws/partitions.json#L1\n *\n * @internal\n */\nconst partitionsInfo = {\n    partitions: [\n        defaultPartition,\n        {\n            id: 'aws-cn',\n            outputs: {\n                dnsSuffix: 'amazonaws.com.cn',\n            },\n            regionRegex: '^cn\\\\-\\\\w+\\\\-\\\\d+$',\n            regions: ['aws-cn-global'],\n        },\n    ],\n};\n\nexport { defaultPartition, partitionsInfo };\n//# sourceMappingURL=partitions.mjs.map\n","import { defaultPartition, partitionsInfo } from './partitions.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Get the AWS Services endpoint URL's DNS suffix for a given region. A typical AWS regional service endpoint URL will\n * follow this pattern: {endpointPrefix}.{region}.{dnsSuffix}. For example, the endpoint URL for Cognito Identity in\n * us-east-1 will be cognito-identity.us-east-1.amazonaws.com. Here the DnsSuffix is `amazonaws.com`.\n *\n * @param region\n * @returns The DNS suffix\n *\n * @internal\n */\nconst getDnsSuffix = (region) => {\n    const { partitions } = partitionsInfo;\n    for (const { regions, outputs, regionRegex } of partitions) {\n        const regex = new RegExp(regionRegex);\n        if (regions.includes(region) || regex.test(region)) {\n            return outputs.dnsSuffix;\n        }\n    }\n    return defaultPartition.outputs.dnsSuffix;\n};\n\nexport { getDnsSuffix };\n//# sourceMappingURL=getDnsSuffix.mjs.map\n","import '../../../utils/getClientInfo/getClientInfo.mjs';\nimport { jitteredBackoff as jitteredBackoff$1 } from '../../../utils/retry/jitteredBackoff.mjs';\nimport '../../../utils/retry/retry.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO: [v6] The separate retry utility is used by Data packages now and will replaced by retry middleware.\nconst DEFAULT_MAX_DELAY_MS = 5 * 60 * 1000;\nconst jitteredBackoff = attempt => {\n    const delayFunction = jitteredBackoff$1(DEFAULT_MAX_DELAY_MS);\n    const delay = delayFunction(attempt);\n    // The delayFunction returns false when the delay is greater than the max delay(5 mins).\n    // In this case, the retry middleware will delay 5 mins instead, as a ceiling of the delay.\n    return delay === false ? DEFAULT_MAX_DELAY_MS : delay;\n};\n\nexport { jitteredBackoff };\n//# sourceMappingURL=jitteredBackoff.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Drop-in replacement for fast-xml-parser's XmlParser class used in the AWS SDK S3 client XML deserializer. This\n * implementation is not tested against the full xml conformance test suite. It is only tested against the XML responses\n * from S3. This implementation requires the `DOMParser` class in the runtime.\n */\nconst parser = {\n    parse: (xmlStr) => {\n        const domParser = new DOMParser();\n        const xml = domParser.parseFromString(xmlStr, 'text/xml');\n        const parsedObj = parseXmlNode(xml);\n        const rootKey = Object.keys(parsedObj)[0];\n        return parsedObj[rootKey];\n    },\n};\nconst parseXmlNode = (node) => {\n    if (isDocumentNode(node)) {\n        return {\n            [node.documentElement.nodeName]: parseXmlNode(node.documentElement),\n        };\n    }\n    if (node.nodeType === Node.TEXT_NODE) {\n        return node.nodeValue?.trim();\n    }\n    if (isElementNode(node)) {\n        // Node like <Location>foo</Location> will be converted to { Location: 'foo' }\n        // instead of { Location: { '#text': 'foo' } }.\n        if (isTextOnlyElementNode(node)) {\n            return node.childNodes[0].nodeValue;\n        }\n        const nodeValue = {};\n        // convert attributes\n        for (const attr of node.attributes) {\n            if (!isNamespaceAttributeName(attr.nodeName)) {\n                nodeValue[attr.nodeName] = attr.nodeValue;\n            }\n        }\n        // convert child nodes\n        if (node.children.length > 0) {\n            for (const child of node.children) {\n                const childValue = parseXmlNode(child);\n                if (childValue === undefined) {\n                    continue;\n                }\n                const childName = child.nodeName;\n                if (nodeValue[childName] === undefined) {\n                    nodeValue[childName] = childValue;\n                }\n                else if (Array.isArray(nodeValue[childName])) {\n                    nodeValue[childName].push(childValue);\n                }\n                else {\n                    nodeValue[childName] = [nodeValue[childName], childValue];\n                }\n            }\n        }\n        // Return empty element node as empty string instead of `{}`, which is the default behavior of fast-xml-parser.\n        return Object.keys(nodeValue).length === 0 ? '' : nodeValue;\n    }\n};\nconst isElementNode = (node) => node.nodeType === Node.ELEMENT_NODE;\nconst isDocumentNode = (node) => node.nodeType === Node.DOCUMENT_NODE;\nconst isTextOnlyElementNode = (node) => hasOnlyNamespaceAttributes(node) &&\n    node.children.length === 0 &&\n    node.firstChild?.nodeType === Node.TEXT_NODE;\nconst hasOnlyNamespaceAttributes = (node) => {\n    for (const attr of node.attributes) {\n        if (!isNamespaceAttributeName(attr.nodeName)) {\n            return false;\n        }\n    }\n    return true;\n};\nconst isNamespaceAttributeName = (name) => name === 'xmlns' || name.startsWith('xmlns:');\n\nexport { parser };\n//# sourceMappingURL=dom.mjs.map\n","import { parseMetadata } from '@aws-amplify/core/internals/aws-client-utils';\nimport '../runtime/s3TransferHandler/fetch.mjs';\nimport { parser } from '../runtime/xmlParser/pureJs.mjs';\nimport '../runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Factory creating a parser that parses the JS Error object from the XML\n * response payload.\n *\n * @param input Input object\n * @param input.noErrorWrapping Whether the error code and message are located\n *   directly in the root XML element, or in a nested `<Error>` element.\n *   See: https://smithy.io/2.0/aws/protocols/aws-restxml-protocol.html#restxml-errors\n *\n *   Default to false.\n *\n * @internal\n */\nconst createXmlErrorParser = ({ noErrorWrapping = false, } = {}) => async (response) => {\n    if (!response || response.statusCode < 300) {\n        return;\n    }\n    const { statusCode } = response;\n    const body = await parseXmlBody(response);\n    const errorLocation = noErrorWrapping ? body : body.Error;\n    const code = errorLocation?.Code\n        ? errorLocation.Code\n        : statusCode === 404\n            ? 'NotFound'\n            : statusCode.toString();\n    const message = errorLocation?.message ?? errorLocation?.Message ?? code;\n    const error = new Error(message);\n    return Object.assign(error, {\n        name: code,\n        $metadata: parseMetadata(response),\n    });\n};\nconst parseXmlBody = async (response) => {\n    if (!response.body) {\n        // S3 can return 200 without a body indicating failure.\n        throw new Error('S3 aborted request.');\n    }\n    const data = await response.body.text();\n    if (data?.length > 0) {\n        try {\n            return parser.parse(data);\n        }\n        catch (error) {\n            throw new Error(`Failed to parse XML response: ${error}`);\n        }\n    }\n    return {};\n};\n\nexport { createXmlErrorParser, parseXmlBody };\n//# sourceMappingURL=parsePayload.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// via https://github.com/aws/aws-sdk-js-v3/blob/ab0e7be36e7e7f8a0c04834357aaad643c7912c3/packages/service-error-classification/src/constants.ts#L8\nconst CLOCK_SKEW_ERROR_CODES = [\n    'AuthFailure',\n    'InvalidSignatureException',\n    'RequestExpired',\n    'RequestInTheFuture',\n    'RequestTimeTooSkewed',\n    'SignatureDoesNotMatch',\n    'BadRequestException', // API Gateway\n];\n/**\n * Given an error code, returns true if it is related to a clock skew error.\n *\n * @param errorCode String representation of some error.\n * @returns True if given error is present in `CLOCK_SKEW_ERROR_CODES`, false otherwise.\n *\n * @internal\n */\nconst isClockSkewError = (errorCode) => !!errorCode && CLOCK_SKEW_ERROR_CODES.includes(errorCode);\n\nexport { isClockSkewError };\n//# sourceMappingURL=isClockSkewError.mjs.map\n","import { AmplifyErrorCode } from '../../../types/errors.mjs';\nimport { isClockSkewError } from './isClockSkewError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Get retry decider function\n * @param errorParser Function to load JavaScript error from HTTP response\n */\nconst getRetryDecider = (errorParser) => async (response, error) => {\n    const parsedError = error ??\n        (await errorParser(response)) ??\n        undefined;\n    const errorCode = parsedError?.code || parsedError?.name;\n    const statusCode = response?.statusCode;\n    const isRetryable = isConnectionError(error) ||\n        isThrottlingError(statusCode, errorCode) ||\n        isClockSkewError(errorCode) ||\n        isServerSideError(statusCode, errorCode);\n    return {\n        retryable: isRetryable,\n    };\n};\n// reference: https://github.com/aws/aws-sdk-js-v3/blob/ab0e7be36e7e7f8a0c04834357aaad643c7912c3/packages/service-error-classification/src/constants.ts#L22-L37\nconst THROTTLING_ERROR_CODES = [\n    'BandwidthLimitExceeded',\n    'EC2ThrottledException',\n    'LimitExceededException',\n    'PriorRequestNotComplete',\n    'ProvisionedThroughputExceededException',\n    'RequestLimitExceeded',\n    'RequestThrottled',\n    'RequestThrottledException',\n    'SlowDown',\n    'ThrottledException',\n    'Throttling',\n    'ThrottlingException',\n    'TooManyRequestsException',\n];\nconst TIMEOUT_ERROR_CODES = [\n    'TimeoutError',\n    'RequestTimeout',\n    'RequestTimeoutException',\n];\nconst isThrottlingError = (statusCode, errorCode) => statusCode === 429 ||\n    (!!errorCode && THROTTLING_ERROR_CODES.includes(errorCode));\nconst isConnectionError = (error) => [\n    AmplifyErrorCode.NetworkError,\n    // TODO(vNext): unify the error code `ERR_NETWORK` used by the Storage XHR handler\n    'ERR_NETWORK',\n].includes(error?.name);\nconst isServerSideError = (statusCode, errorCode) => (!!statusCode && [500, 502, 503, 504].includes(statusCode)) ||\n    (!!errorCode && TIMEOUT_ERROR_CODES.includes(errorCode));\n\nexport { getRetryDecider };\n//# sourceMappingURL=defaultRetryDecider.mjs.map\n","import { getRetryDecider } from '@aws-amplify/core/internals/aws-client-utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Factory of a {@link RetryDecider} function.\n *\n * @param errorParser function to parse HTTP response wth XML payload to JS\n * \tError instance.\n * @returns A structure indicating if the response is retryable; And if it is a\n * \tCredentialsExpiredError\n */\nconst createRetryDecider = (errorParser) => async (response, error, middlewareContext) => {\n    const defaultRetryDecider = getRetryDecider(errorParser);\n    const defaultRetryDecision = await defaultRetryDecider(response, error);\n    if (!response) {\n        return { retryable: defaultRetryDecision.retryable };\n    }\n    const parsedError = await errorParser(response);\n    const errorCode = parsedError?.name;\n    const errorMessage = parsedError?.message;\n    const isCredentialsExpired = isCredentialsExpiredError(errorCode, errorMessage);\n    return {\n        retryable: defaultRetryDecision.retryable ||\n            // If we know the previous retry attempt sets isCredentialsExpired in the\n            // middleware context, we don't want to retry anymore.\n            !!(isCredentialsExpired && !middlewareContext?.isCredentialsExpired),\n        isCredentialsExpiredError: isCredentialsExpired,\n    };\n};\n// Ref: https://github.com/aws/aws-sdk-js/blob/54829e341181b41573c419bd870dd0e0f8f10632/lib/event_listeners.js#L522-L541\nconst INVALID_TOKEN_ERROR_CODES = [\n    'RequestExpired',\n    'ExpiredTokenException',\n    'ExpiredToken',\n];\n/**\n * Given an error code, returns true if it is related to invalid credentials.\n *\n * @param errorCode String representation of some error.\n * @returns True if given error indicates the credentials used to authorize request\n * are invalid.\n */\nconst isCredentialsExpiredError = (errorCode, errorMessage) => {\n    const isExpiredTokenError = !!errorCode && INVALID_TOKEN_ERROR_CODES.includes(errorCode);\n    // Ref: https://github.com/aws/aws-sdk-js/blob/54829e341181b41573c419bd870dd0e0f8f10632/lib/event_listeners.js#L536-L539\n    const isExpiredSignatureError = !!errorCode &&\n        !!errorMessage &&\n        errorCode.includes('Signature') &&\n        errorMessage.includes('expired');\n    return isExpiredTokenError || isExpiredSignatureError;\n};\n\nexport { createRetryDecider };\n//# sourceMappingURL=createRetryDecider.mjs.map\n","import { getAmplifyUserAgent, AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { jitteredBackoff, getDnsSuffix } from '@aws-amplify/core/internals/aws-client-utils';\nimport { createXmlErrorParser } from '../utils/parsePayload.mjs';\nimport '../runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { createRetryDecider } from '../utils/createRetryDecider.mjs';\nimport { LOCAL_TESTING_S3_ENDPOINT } from '../../constants.mjs';\nimport { assertValidationError } from '../../../../../errors/utils/assertValidationError.mjs';\nimport { StorageValidationErrorCode } from '../../../../../errors/types/validation.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst DOMAIN_PATTERN = /^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$/;\nconst IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nconst DOTS_PATTERN = /\\.\\./;\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nconst SERVICE_NAME = 's3';\n/**\n * The endpoint resolver function that returns the endpoint URL for a given region, and input parameters.\n */\nconst endpointResolver = (options, apiInput) => {\n    const { region, useAccelerateEndpoint, customEndpoint, forcePathStyle } = options;\n    let endpoint;\n    // 1. get base endpoint\n    if (customEndpoint) {\n        if (customEndpoint === LOCAL_TESTING_S3_ENDPOINT) {\n            endpoint = new AmplifyUrl(customEndpoint);\n        }\n        assertValidationError(!customEndpoint.includes('://'), StorageValidationErrorCode.InvalidCustomEndpoint);\n        endpoint = new AmplifyUrl(`http://${customEndpoint}`);\n    }\n    else if (useAccelerateEndpoint) {\n        // this ErrorCode isn't expose yet since forcePathStyle param isn't publicly exposed\n        assertValidationError(!forcePathStyle, StorageValidationErrorCode.ForcePathStyleEndpointNotSupported);\n        endpoint = new AmplifyUrl(`https://s3-accelerate.${getDnsSuffix(region)}`);\n    }\n    else {\n        endpoint = new AmplifyUrl(`https://s3.${region}.${getDnsSuffix(region)}`);\n    }\n    // 2. inject bucket name\n    if (apiInput?.Bucket) {\n        assertValidationError(isDnsCompatibleBucketName(apiInput.Bucket), StorageValidationErrorCode.DnsIncompatibleBucketName);\n        if (forcePathStyle || apiInput.Bucket.includes('.')) {\n            endpoint.pathname = `/${apiInput.Bucket}`;\n        }\n        else {\n            endpoint.host = `${apiInput.Bucket}.${endpoint.host}`;\n        }\n    }\n    return { url: endpoint };\n};\n/**\n * Determines whether a given string is DNS compliant per the rules outlined by\n * S3. Length, capitaization, and leading dot restrictions are enforced by the\n * DOMAIN_PATTERN regular expression.\n * @internal\n *\n * @see https://github.com/aws/aws-sdk-js-v3/blob/f2da6182298d4d6b02e84fb723492c07c27469a8/packages/middleware-bucket-endpoint/src/bucketHostnameUtils.ts#L39-L48\n * @see https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html\n */\nconst isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) &&\n    !IP_ADDRESS_PATTERN.test(bucketName) &&\n    !DOTS_PATTERN.test(bucketName);\n/**\n * Error parser for the XML payload of S3 data plane error response. The error's\n * `Code` and `Message` locates directly at the XML root element.\n *\n * @example\n * ```\n * <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n * \t<Error>\n * \t\t<Code>NoSuchKey</Code>\n * \t\t<Message>The resource you requested does not exist</Message>\n * \t\t<Resource>/mybucket/myfoto.jpg</Resource>\n * \t\t<RequestId>4442587FB7D0A2F9</RequestId>\n * \t</Error>\n * \t```\n *\n * @internal\n */\nconst parseXmlError = createXmlErrorParser({ noErrorWrapping: true });\n/**\n * @internal\n */\nconst retryDecider = createRetryDecider(parseXmlError);\n/**\n * @internal\n */\nconst defaultConfig = {\n    service: SERVICE_NAME,\n    endpointResolver,\n    retryDecider,\n    computeDelay: jitteredBackoff,\n    userAgentValue: getAmplifyUserAgent(),\n    useAccelerateEndpoint: false,\n    uriEscapePath: false, // Required by S3. See https://github.com/aws/aws-sdk-js-v3/blob/9ba012dfa3a3429aa2db0f90b3b0b3a7a31f9bc3/packages/signature-v4/src/SignatureV4.ts#L76-L83\n};\n\nexport { SERVICE_NAME, defaultConfig, isDnsCompatibleBucketName, parseXmlError, retryDecider };\n//# sourceMappingURL=base.mjs.map\n","import { MAX_DELAY_MS } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @private\n * Internal use of Amplify only\n */\nfunction jitteredBackoff(maxDelayMs = MAX_DELAY_MS) {\n    const BASE_TIME_MS = 100;\n    const JITTER_FACTOR = 100;\n    return attempt => {\n        const delay = 2 ** attempt * BASE_TIME_MS + JITTER_FACTOR * Math.random();\n        return delay > maxDelayMs ? false : delay;\n    };\n}\n\nexport { jitteredBackoff };\n//# sourceMappingURL=jitteredBackoff.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst MAX_DELAY_MS = 5 * 60 * 1000;\n\nexport { MAX_DELAY_MS };\n//# sourceMappingURL=constants.mjs.map\n","import { parseMetadata } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { s3TransferHandler } from '../runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { buildStorageServiceError, map } from '../utils/deserializeHelpers.mjs';\nimport { serializeObjectConfigsToHeaders, assignStringVariables, validateS3RequiredParameter, serializePathnameObjectKey } from '../utils/serializeHelpers.mjs';\nimport { validateObjectUrl } from '../../validateObjectUrl.mjs';\nimport { defaultConfig, parseXmlError } from './base.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst putObjectSerializer = async (input, endpoint) => {\n    const headers = {\n        ...(await serializeObjectConfigsToHeaders({\n            ...input,\n            ContentType: input.ContentType ?? 'application/octet-stream',\n        })),\n        ...assignStringVariables({\n            'content-md5': input.ContentMD5,\n            'x-amz-checksum-crc32': input.ChecksumCRC32,\n            'x-amz-expected-bucket-owner': input.ExpectedBucketOwner,\n            'If-None-Match': input.IfNoneMatch,\n        }),\n    };\n    const url = new AmplifyUrl(endpoint.url.toString());\n    validateS3RequiredParameter(!!input.Key, 'Key');\n    url.pathname = serializePathnameObjectKey(url, input.Key);\n    validateObjectUrl({\n        bucketName: input.Bucket,\n        key: input.Key,\n        objectURL: url,\n    });\n    return {\n        method: 'PUT',\n        headers,\n        url,\n        body: input.Body,\n    };\n};\nconst putObjectDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = (await parseXmlError(response));\n        throw buildStorageServiceError(error, response.statusCode);\n    }\n    else {\n        return {\n            ...map(response.headers, {\n                ETag: 'etag',\n                VersionId: 'x-amz-version-id',\n            }),\n            $metadata: parseMetadata(response),\n        };\n    }\n};\nconst putObject = composeServiceApi(s3TransferHandler, putObjectSerializer, putObjectDeserializer, { ...defaultConfig, responseType: 'text' });\n\nexport { putObject };\n//# sourceMappingURL=putObject.mjs.map\n","import { getAmplifyUserAgent, Category } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction getStorageUserAgentValue(action) {\n    return getAmplifyUserAgent({\n        category: Category.Storage,\n        action,\n    });\n}\n\nexport { getStorageUserAgentValue };\n//# sourceMappingURL=userAgent.mjs.map\n","import './client/runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport './client/runtime/s3TransferHandler/xhr.mjs';\nimport { toBase64 } from './client/runtime/base64/index.native.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst hexToUint8Array = (hexString) => new Uint8Array((hexString.match(/\\w{2}/g) ?? []).map(h => parseInt(h, 16)));\nconst hexToArrayBuffer = (hexString) => hexToUint8Array(hexString).buffer;\nconst hexToBase64 = (hexString) => toBase64(hexToUint8Array(hexString));\n\nexport { hexToArrayBuffer, hexToBase64, hexToUint8Array };\n//# sourceMappingURL=hexUtils.mjs.map\n","import crc32 from 'crc-32';\nimport { hexToArrayBuffer, hexToBase64 } from './hexUtils.mjs';\nimport { readFile } from './readFile.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst CHUNK_SIZE = 1024 * 1024; // 1MB chunks\nconst calculateContentCRC32 = async (content, seed = 0) => {\n    let internalSeed = seed;\n    if (content instanceof ArrayBuffer || ArrayBuffer.isView(content)) {\n        let uint8Array;\n        if (content instanceof ArrayBuffer) {\n            uint8Array = new Uint8Array(content);\n        }\n        else {\n            uint8Array = new Uint8Array(content.buffer, content.byteOffset, content.byteLength);\n        }\n        let offset = 0;\n        while (offset < uint8Array.length) {\n            const end = Math.min(offset + CHUNK_SIZE, uint8Array.length);\n            const chunk = uint8Array.slice(offset, end);\n            internalSeed = crc32.buf(chunk, internalSeed) >>> 0;\n            offset = end;\n        }\n    }\n    else {\n        let blob;\n        if (content instanceof Blob) {\n            blob = content;\n        }\n        else {\n            blob = new Blob([content]);\n        }\n        let offset = 0;\n        while (offset < blob.size) {\n            const end = Math.min(offset + CHUNK_SIZE, blob.size);\n            const chunk = blob.slice(offset, end);\n            const arrayBuffer = await readFile(chunk);\n            const uint8Array = new Uint8Array(arrayBuffer);\n            internalSeed = crc32.buf(uint8Array, internalSeed) >>> 0;\n            offset = end;\n        }\n    }\n    const hex = internalSeed.toString(16).padStart(8, '0');\n    return {\n        checksumArrayBuffer: hexToArrayBuffer(hex),\n        checksum: hexToBase64(hex),\n        seed: internalSeed,\n    };\n};\n\nexport { calculateContentCRC32 };\n//# sourceMappingURL=crc32.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst constructContentDisposition = (contentDisposition) => {\n    if (!contentDisposition)\n        return undefined;\n    if (typeof contentDisposition === 'string')\n        return contentDisposition;\n    const { type, filename } = contentDisposition;\n    return filename !== undefined ? `${type}; filename=\"${filename}\"` : type;\n};\n\nexport { constructContentDisposition };\n//# sourceMappingURL=constructContentDisposition.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst isNil = (value) => {\n    return value === undefined || value === null;\n};\nconst bothNilOrEqual = (original, output) => {\n    return (isNil(original) && isNil(output)) || original === output;\n};\n/**\n * This function is used to determine if a value is an object.\n * It excludes arrays and null values.\n *\n * @param value\n * @returns\n */\nconst isObject = (value) => {\n    return value != null && typeof value === 'object' && !Array.isArray(value);\n};\n/**\n * This function is used to compare two objects and determine if they are equal.\n * It handles nested objects and arrays as well.\n * Array order is not taken into account.\n *\n * @param object\n * @param other\n * @returns\n */\nconst isEqual = (object, other) => {\n    if (Array.isArray(object) && !Array.isArray(other)) {\n        return false;\n    }\n    if (!Array.isArray(object) && Array.isArray(other)) {\n        return false;\n    }\n    if (Array.isArray(object) && Array.isArray(other)) {\n        return (object.length === other.length &&\n            object.every((val, ix) => isEqual(val, other[ix])));\n    }\n    if (!isObject(object) || !isObject(other)) {\n        return object === other;\n    }\n    const objectKeys = Object.keys(object);\n    const otherKeys = Object.keys(other);\n    if (objectKeys.length !== otherKeys.length) {\n        return false;\n    }\n    return objectKeys.every(key => {\n        return (otherKeys.includes(key) &&\n            isEqual(object[key], other[key]));\n    });\n};\n\nexport { bothNilOrEqual, isEqual, isNil, isObject };\n//# sourceMappingURL=integrityHelpers.mjs.map\n","import { parseMetadata } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyUrl, AmplifyUrlSearchParams } from '@aws-amplify/core/internals/utils';\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { parseXmlBody } from '../utils/parsePayload.mjs';\nimport { s3TransferHandler } from '../runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { buildStorageServiceError, map } from '../utils/deserializeHelpers.mjs';\nimport { assignStringVariables, validateS3RequiredParameter, serializePathnameObjectKey } from '../utils/serializeHelpers.mjs';\nimport { validateObjectUrl } from '../../validateObjectUrl.mjs';\nimport { validateMultipartUploadXML } from '../../validateMultipartUploadXML.mjs';\nimport { defaultConfig, parseXmlError, retryDecider } from './base.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst INVALID_PARAMETER_ERROR_MSG = 'Invalid parameter for ComplteMultipartUpload API';\nconst completeMultipartUploadSerializer = async (input, endpoint) => {\n    const headers = {\n        'content-type': 'application/xml',\n        ...assignStringVariables({\n            'x-amz-checksum-crc32': input.ChecksumCRC32,\n            'x-amz-expected-bucket-owner': input.ExpectedBucketOwner,\n            'If-None-Match': input.IfNoneMatch,\n        }),\n    };\n    const url = new AmplifyUrl(endpoint.url.toString());\n    validateS3RequiredParameter(!!input.Key, 'Key');\n    url.pathname = serializePathnameObjectKey(url, input.Key);\n    validateS3RequiredParameter(!!input.UploadId, 'UploadId');\n    url.search = new AmplifyUrlSearchParams({\n        uploadId: input.UploadId,\n    }).toString();\n    validateS3RequiredParameter(!!input.MultipartUpload, 'MultipartUpload');\n    validateObjectUrl({\n        bucketName: input.Bucket,\n        key: input.Key,\n        objectURL: url,\n    });\n    const xml = serializeCompletedMultipartUpload(input.MultipartUpload);\n    validateMultipartUploadXML(input.MultipartUpload, xml);\n    return {\n        method: 'POST',\n        headers,\n        url,\n        body: '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' + xml,\n    };\n};\nconst serializeCompletedMultipartUpload = (input) => {\n    if (!input.Parts?.length) {\n        throw new Error(`${INVALID_PARAMETER_ERROR_MSG}: ${input}`);\n    }\n    return `<CompleteMultipartUpload xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">${input.Parts.map(serializeCompletedPartList).join('')}</CompleteMultipartUpload>`;\n};\nconst serializeCompletedPartList = (input) => {\n    if (!input.ETag || input.PartNumber == null) {\n        throw new Error(`${INVALID_PARAMETER_ERROR_MSG}: ${input}`);\n    }\n    const eTag = `<ETag>${input.ETag}</ETag>`;\n    const partNumber = `<PartNumber>${input.PartNumber}</PartNumber>`;\n    const checksumCRC32 = input.ChecksumCRC32\n        ? `<ChecksumCRC32>${input.ChecksumCRC32}</ChecksumCRC32>`\n        : '';\n    return `<Part>${eTag}${partNumber}${checksumCRC32}</Part>`;\n};\n/**\n * Parse CompleteMultipartUpload API response payload, which may be empty or error indicating internal\n * server error, even when the status code is 200.\n *\n * Ref: https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html#API_CompleteMultipartUpload_Example_4\n */\nconst parseXmlBodyOrThrow = async (response) => {\n    const parsed = await parseXmlBody(response); // Handles empty body case\n    if (parsed.Code !== undefined && parsed.Message !== undefined) {\n        const error = (await parseXmlError({\n            ...response,\n            statusCode: 500, // To workaround the >=300 status code check common to other APIs.\n        }));\n        throw buildStorageServiceError(error, response.statusCode);\n    }\n    return parsed;\n};\nconst completeMultipartUploadDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = (await parseXmlError(response));\n        throw buildStorageServiceError(error, response.statusCode);\n    }\n    else {\n        const parsed = await parseXmlBodyOrThrow(response);\n        const contents = map(parsed, {\n            ETag: 'ETag',\n            Key: 'Key',\n            Location: 'Location',\n        });\n        return {\n            $metadata: parseMetadata(response),\n            ...contents,\n        };\n    }\n};\n// CompleteMultiPartUpload API returns 200 status code with empty body or error message.\n// This indicates internal server error after the response has been sent to the client.\n// Ref: https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html#API_CompleteMultipartUpload_Example_4\nconst retryWhenErrorWith200StatusCode = async (response, error, middlewareContext) => {\n    if (!response) {\n        return { retryable: false };\n    }\n    if (response.statusCode === 200) {\n        if (!response.body) {\n            return { retryable: true };\n        }\n        const parsed = await parseXmlBody(response);\n        if (parsed.Code !== undefined && parsed.Message !== undefined) {\n            return { retryable: true };\n        }\n        return { retryable: false };\n    }\n    return retryDecider(response, error, middlewareContext);\n};\nconst completeMultipartUpload = composeServiceApi(s3TransferHandler, completeMultipartUploadSerializer, completeMultipartUploadDeserializer, {\n    ...defaultConfig,\n    responseType: 'text',\n    retryDecider: retryWhenErrorWith200StatusCode,\n});\n\nexport { completeMultipartUpload };\n//# sourceMappingURL=completeMultipartUpload.mjs.map\n","import { IntegrityError } from '../../../errors/IntegrityError.mjs';\nimport './client/runtime/s3TransferHandler/fetch.mjs';\nimport { parser } from './client/runtime/xmlParser/pureJs.mjs';\nimport './client/runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport { map, emptyArrayGuard, deserializeCompletedPartList } from './client/utils/deserializeHelpers.mjs';\nimport '@aws-amplify/core/internals/utils';\nimport { isEqual } from './client/utils/integrityHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction validateMultipartUploadXML(input, xml) {\n    if (!input.Parts) {\n        throw new IntegrityError();\n    }\n    const parsedXML = parser.parse(xml);\n    const mappedCompletedMultipartUpload = map(parsedXML, {\n        Parts: [\n            'Part',\n            value => emptyArrayGuard(value, deserializeCompletedPartList),\n        ],\n    });\n    if (!isEqual(input, mappedCompletedMultipartUpload)) {\n        throw new IntegrityError();\n    }\n}\n\nexport { validateMultipartUploadXML };\n//# sourceMappingURL=validateMultipartUploadXML.mjs.map\n","import { parseMetadata } from '@aws-amplify/core/internals/aws-client-utils';\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { AmplifyUrl, AmplifyUrlSearchParams } from '@aws-amplify/core/internals/utils';\nimport { s3TransferHandler } from '../runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { buildStorageServiceError } from '../utils/deserializeHelpers.mjs';\nimport { validateS3RequiredParameter, serializePathnameObjectKey, assignStringVariables } from '../utils/serializeHelpers.mjs';\nimport { validateObjectUrl } from '../../validateObjectUrl.mjs';\nimport { defaultConfig, parseXmlError } from './base.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst abortMultipartUploadSerializer = (input, endpoint) => {\n    const url = new AmplifyUrl(endpoint.url.toString());\n    validateS3RequiredParameter(!!input.Key, 'Key');\n    url.pathname = serializePathnameObjectKey(url, input.Key);\n    validateS3RequiredParameter(!!input.UploadId, 'UploadId');\n    url.search = new AmplifyUrlSearchParams({\n        uploadId: input.UploadId,\n    }).toString();\n    validateObjectUrl({\n        bucketName: input.Bucket,\n        key: input.Key,\n        objectURL: url,\n    });\n    const headers = {\n        ...assignStringVariables({\n            'x-amz-expected-bucket-owner': input.ExpectedBucketOwner,\n        }),\n    };\n    return {\n        method: 'DELETE',\n        headers,\n        url,\n    };\n};\nconst abortMultipartUploadDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = (await parseXmlError(response));\n        throw buildStorageServiceError(error, response.statusCode);\n    }\n    else {\n        return {\n            $metadata: parseMetadata(response),\n        };\n    }\n};\nconst abortMultipartUpload = composeServiceApi(s3TransferHandler, abortMultipartUploadSerializer, abortMultipartUploadDeserializer, { ...defaultConfig, responseType: 'text' });\n\nexport { abortMultipartUpload };\n//# sourceMappingURL=abortMultipartUpload.mjs.map\n","import { parseMetadata } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { s3TransferHandler } from '../runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { buildStorageServiceError, map, deserializeNumber, deserializeTimestamp, deserializeMetadata } from '../utils/deserializeHelpers.mjs';\nimport { validateS3RequiredParameter, serializePathnameObjectKey, assignStringVariables } from '../utils/serializeHelpers.mjs';\nimport { validateObjectUrl } from '../../validateObjectUrl.mjs';\nimport { defaultConfig, parseXmlError } from './base.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst headObjectSerializer = async (input, endpoint) => {\n    const url = new AmplifyUrl(endpoint.url.toString());\n    validateS3RequiredParameter(!!input.Key, 'Key');\n    url.pathname = serializePathnameObjectKey(url, input.Key);\n    validateObjectUrl({\n        bucketName: input.Bucket,\n        key: input.Key,\n        objectURL: url,\n    });\n    const headers = assignStringVariables({\n        'x-amz-expected-bucket-owner': input.ExpectedBucketOwner,\n    });\n    return {\n        method: 'HEAD',\n        headers,\n        url,\n    };\n};\nconst headObjectDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        // error is always set when statusCode >= 300\n        const error = (await parseXmlError(response));\n        throw buildStorageServiceError(error, response.statusCode);\n    }\n    else {\n        const contents = {\n            ...map(response.headers, {\n                ContentLength: ['content-length', deserializeNumber],\n                ContentType: 'content-type',\n                ETag: 'etag',\n                LastModified: ['last-modified', deserializeTimestamp],\n                VersionId: 'x-amz-version-id',\n            }),\n            Metadata: deserializeMetadata(response.headers),\n        };\n        return {\n            $metadata: parseMetadata(response),\n            ...contents,\n        };\n    }\n};\nconst headObject = composeServiceApi(s3TransferHandler, headObjectSerializer, headObjectDeserializer, { ...defaultConfig, responseType: 'text' });\n\nexport { headObject };\n//# sourceMappingURL=headObject.mjs.map\n","import { parseMetadata } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyUrl, AmplifyUrlSearchParams } from '@aws-amplify/core/internals/utils';\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { s3TransferHandler } from '../runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { buildStorageServiceError, map } from '../utils/deserializeHelpers.mjs';\nimport { assignStringVariables, validateS3RequiredParameter, serializePathnameObjectKey } from '../utils/serializeHelpers.mjs';\nimport { validateObjectUrl } from '../../validateObjectUrl.mjs';\nimport { defaultConfig, parseXmlError } from './base.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst uploadPartSerializer = async (input, endpoint) => {\n    const headers = {\n        ...assignStringVariables({\n            'x-amz-checksum-crc32': input.ChecksumCRC32,\n            'content-md5': input.ContentMD5,\n            'x-amz-expected-bucket-owner': input.ExpectedBucketOwner,\n        }),\n        'content-type': 'application/octet-stream',\n    };\n    const url = new AmplifyUrl(endpoint.url.toString());\n    validateS3RequiredParameter(!!input.Key, 'Key');\n    url.pathname = serializePathnameObjectKey(url, input.Key);\n    validateS3RequiredParameter(!!input.PartNumber, 'PartNumber');\n    validateS3RequiredParameter(!!input.UploadId, 'UploadId');\n    url.search = new AmplifyUrlSearchParams({\n        partNumber: input.PartNumber + '',\n        uploadId: input.UploadId,\n    }).toString();\n    validateObjectUrl({\n        bucketName: input.Bucket,\n        key: input.Key,\n        objectURL: url,\n    });\n    return {\n        method: 'PUT',\n        headers,\n        url,\n        body: input.Body,\n    };\n};\nconst uploadPartDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = (await parseXmlError(response));\n        throw buildStorageServiceError(error, response.statusCode);\n    }\n    else {\n        return {\n            ...map(response.headers, {\n                ETag: 'etag',\n            }),\n            $metadata: parseMetadata(response),\n        };\n    }\n};\nconst uploadPart = composeServiceApi(s3TransferHandler, uploadPartSerializer, uploadPartDeserializer, { ...defaultConfig, responseType: 'text' });\n\nexport { uploadPart };\n//# sourceMappingURL=uploadPart.mjs.map\n","import '../../../../utils/client/s3data/base.mjs';\nimport '../../../../utils/client/s3data/getObject.mjs';\nimport '../../../../utils/client/s3data/listObjectsV2.mjs';\nimport '../../../../utils/client/s3data/putObject.mjs';\nimport '../../../../utils/client/s3data/createMultipartUpload.mjs';\nimport { uploadPart } from '../../../../utils/client/s3data/uploadPart.mjs';\nimport '../../../../utils/client/s3data/completeMultipartUpload.mjs';\nimport '../../../../utils/client/s3data/listParts.mjs';\nimport '../../../../utils/client/s3data/abortMultipartUpload.mjs';\nimport '../../../../utils/client/s3data/copyObject.mjs';\nimport '../../../../utils/client/s3data/headObject.mjs';\nimport '../../../../utils/client/s3data/deleteObject.mjs';\nimport '../../../../../../errors/types/validation.mjs';\nimport '@aws-amplify/core/internals/utils';\nimport { logger } from '../../../../../../utils/logger.mjs';\nimport { calculateContentCRC32 } from '../../../../utils/crc32.mjs';\nimport { calculateContentMd5 } from '../../../../utils/md5.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst uploadPartExecutor = async ({ dataChunkerGenerator, completedPartNumberSet, s3Config, abortSignal, bucket, finalKey, uploadId, onPartUploadCompletion, onProgress, isObjectLockEnabled, useCRC32Checksum, expectedBucketOwner, }) => {\n    let transferredBytes = 0;\n    for (const { data, partNumber, size } of dataChunkerGenerator) {\n        if (abortSignal.aborted) {\n            logger.debug('upload executor aborted.');\n            break;\n        }\n        if (completedPartNumberSet.has(partNumber)) {\n            logger.debug(`part ${partNumber} already uploaded.`);\n            transferredBytes += size;\n            onProgress?.({\n                transferredBytes,\n            });\n        }\n        else {\n            // handle cancel error\n            let checksumCRC32;\n            if (useCRC32Checksum) {\n                checksumCRC32 = await calculateContentCRC32(data);\n            }\n            const contentMD5 = \n            // check if checksum exists. ex: should not exist in react native\n            !checksumCRC32 && isObjectLockEnabled\n                ? await calculateContentMd5(data)\n                : undefined;\n            const { ETag: eTag } = await uploadPart({\n                ...s3Config,\n                abortSignal,\n                onUploadProgress: (event) => {\n                    const { transferredBytes: currentPartTransferredBytes } = event;\n                    onProgress?.({\n                        transferredBytes: transferredBytes + currentPartTransferredBytes,\n                    });\n                },\n            }, {\n                Bucket: bucket,\n                Key: finalKey,\n                UploadId: uploadId,\n                Body: data,\n                PartNumber: partNumber,\n                ChecksumCRC32: checksumCRC32?.checksum,\n                ContentMD5: contentMD5,\n                ExpectedBucketOwner: expectedBucketOwner,\n            });\n            transferredBytes += size;\n            // eTag will always be set even the S3 model interface marks it as optional.\n            onPartUploadCompletion(partNumber, eTag, checksumCRC32?.checksum);\n        }\n    }\n};\n\nexport { uploadPartExecutor };\n//# sourceMappingURL=uploadPartExecutor.mjs.map\n","import { parseMetadata } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyUrl, AmplifyUrlSearchParams } from '@aws-amplify/core/internals/utils';\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { parseXmlBody } from '../utils/parsePayload.mjs';\nimport { s3TransferHandler } from '../runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { buildStorageServiceError, map, emptyArrayGuard, deserializeCompletedPartList } from '../utils/deserializeHelpers.mjs';\nimport { validateS3RequiredParameter, serializePathnameObjectKey } from '../utils/serializeHelpers.mjs';\nimport { defaultConfig, parseXmlError } from './base.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst listPartsSerializer = async (input, endpoint) => {\n    const headers = {};\n    const url = new AmplifyUrl(endpoint.url.toString());\n    validateS3RequiredParameter(!!input.Key, 'Key');\n    url.pathname = serializePathnameObjectKey(url, input.Key);\n    validateS3RequiredParameter(!!input.UploadId, 'UploadId');\n    url.search = new AmplifyUrlSearchParams({\n        uploadId: input.UploadId,\n    }).toString();\n    return {\n        method: 'GET',\n        headers,\n        url,\n    };\n};\nconst listPartsDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = (await parseXmlError(response));\n        throw buildStorageServiceError(error, response.statusCode);\n    }\n    else {\n        const parsed = await parseXmlBody(response);\n        const contents = map(parsed, {\n            UploadId: 'UploadId',\n            Parts: [\n                'Part',\n                value => emptyArrayGuard(value, deserializeCompletedPartList),\n            ],\n        });\n        return {\n            $metadata: parseMetadata(response),\n            ...contents,\n        };\n    }\n};\nconst listParts = composeServiceApi(s3TransferHandler, listPartsSerializer, listPartsDeserializer, { ...defaultConfig, responseType: 'text' });\n\nexport { listParts };\n//# sourceMappingURL=listParts.mjs.map\n","import { UPLOADS_STORAGE_KEY } from '../../../../utils/constants.mjs';\nimport '../../../../utils/client/s3data/base.mjs';\nimport '../../../../utils/client/s3data/getObject.mjs';\nimport '../../../../utils/client/s3data/listObjectsV2.mjs';\nimport '../../../../utils/client/s3data/putObject.mjs';\nimport '../../../../utils/client/s3data/createMultipartUpload.mjs';\nimport '../../../../utils/client/s3data/uploadPart.mjs';\nimport '../../../../utils/client/s3data/completeMultipartUpload.mjs';\nimport { listParts } from '../../../../utils/client/s3data/listParts.mjs';\nimport '../../../../utils/client/s3data/abortMultipartUpload.mjs';\nimport '../../../../utils/client/s3data/copyObject.mjs';\nimport '../../../../utils/client/s3data/headObject.mjs';\nimport '../../../../utils/client/s3data/deleteObject.mjs';\nimport '../../../../../../errors/types/validation.mjs';\nimport '@aws-amplify/core/internals/utils';\nimport { logger } from '../../../../../../utils/logger.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst ONE_HOUR = 1000 * 60 * 60;\n/**\n * Find the cached multipart upload id and get the parts that have been uploaded\n * with ListParts API. If the cached upload is expired(1 hour), return null.\n */\nconst findCachedUploadParts = async ({ resumableUploadsCache, cacheKey, s3Config, bucket, finalKey, }) => {\n    const cachedUploads = await listCachedUploadTasks(resumableUploadsCache);\n    if (!cachedUploads[cacheKey] ||\n        cachedUploads[cacheKey].lastTouched < Date.now() - ONE_HOUR // Uploads are cached for 1 hour\n    ) {\n        return null;\n    }\n    const cachedUpload = cachedUploads[cacheKey];\n    cachedUpload.lastTouched = Date.now();\n    await resumableUploadsCache.setItem(UPLOADS_STORAGE_KEY, JSON.stringify(cachedUploads));\n    try {\n        const { Parts = [] } = await listParts(s3Config, {\n            Bucket: bucket,\n            Key: finalKey,\n            UploadId: cachedUpload.uploadId,\n        });\n        return {\n            parts: Parts,\n            uploadId: cachedUpload.uploadId,\n            finalCrc32: cachedUpload.finalCrc32,\n        };\n    }\n    catch (e) {\n        logger.debug('failed to list cached parts, removing cached upload.');\n        await removeCachedUpload(resumableUploadsCache, cacheKey);\n        return null;\n    }\n};\nconst listCachedUploadTasks = async (resumableUploadsCache) => {\n    try {\n        return JSON.parse((await resumableUploadsCache.getItem(UPLOADS_STORAGE_KEY)) ?? '{}');\n    }\n    catch (e) {\n        logger.debug('failed to parse cached uploads record.');\n        return {};\n    }\n};\n/**\n * Get the cache key of a multipart upload. Data source cached by different: size, content type, bucket, access level,\n * key. If the data source is a File instance, the upload is additionally indexed by file name and last modified time.\n * So the library always created a new multipart upload if the file is modified.\n */\nconst getUploadsCacheKey = ({ file, size, contentType, bucket, accessLevel, key, optionsHash, }) => {\n    let levelStr;\n    const resolvedContentType = contentType ?? file?.type ?? 'application/octet-stream';\n    // If no access level is defined, we're using custom gen2 access rules\n    if (accessLevel === undefined) {\n        levelStr = 'custom';\n    }\n    else {\n        levelStr = accessLevel === 'guest' ? 'public' : accessLevel;\n    }\n    const baseId = `${optionsHash}_${size}_${resolvedContentType}_${bucket}_${levelStr}_${key}`;\n    if (file) {\n        return `${file.name}_${file.lastModified}_${baseId}`;\n    }\n    else {\n        return baseId;\n    }\n};\nconst cacheMultipartUpload = async (resumableUploadsCache, cacheKey, fileMetadata) => {\n    const cachedUploads = await listCachedUploadTasks(resumableUploadsCache);\n    cachedUploads[cacheKey] = {\n        ...fileMetadata,\n        lastTouched: Date.now(),\n    };\n    await resumableUploadsCache.setItem(UPLOADS_STORAGE_KEY, JSON.stringify(cachedUploads));\n};\nconst removeCachedUpload = async (resumableUploadsCache, cacheKey) => {\n    const cachedUploads = await listCachedUploadTasks(resumableUploadsCache);\n    delete cachedUploads[cacheKey];\n    await resumableUploadsCache.setItem(UPLOADS_STORAGE_KEY, JSON.stringify(cachedUploads));\n};\n\nexport { cacheMultipartUpload, findCachedUploadParts, getUploadsCacheKey, removeCachedUpload };\n//# sourceMappingURL=uploadCache.mjs.map\n","import { parseMetadata } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { parseXmlBody } from '../utils/parsePayload.mjs';\nimport { s3TransferHandler } from '../runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { buildStorageServiceError, map } from '../utils/deserializeHelpers.mjs';\nimport { serializeObjectConfigsToHeaders, assignStringVariables, validateS3RequiredParameter, serializePathnameObjectKey } from '../utils/serializeHelpers.mjs';\nimport { validateObjectUrl } from '../../validateObjectUrl.mjs';\nimport { defaultConfig, parseXmlError } from './base.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createMultipartUploadSerializer = async (input, endpoint) => {\n    const headers = {\n        ...(await serializeObjectConfigsToHeaders(input)),\n        ...assignStringVariables({\n            'x-amz-checksum-algorithm': input.ChecksumAlgorithm,\n            'x-amz-expected-bucket-owner': input.ExpectedBucketOwner,\n        }),\n    };\n    const url = new AmplifyUrl(endpoint.url.toString());\n    validateS3RequiredParameter(!!input.Key, 'Key');\n    url.pathname = serializePathnameObjectKey(url, input.Key);\n    url.search = 'uploads';\n    validateObjectUrl({\n        bucketName: input.Bucket,\n        key: input.Key,\n        objectURL: url,\n    });\n    return {\n        method: 'POST',\n        headers,\n        url,\n    };\n};\nconst createMultipartUploadDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = (await parseXmlError(response));\n        throw buildStorageServiceError(error, response.statusCode);\n    }\n    else {\n        const parsed = await parseXmlBody(response);\n        const contents = map(parsed, {\n            UploadId: 'UploadId',\n        });\n        return {\n            $metadata: parseMetadata(response),\n            ...contents,\n        };\n    }\n};\nconst createMultipartUpload = composeServiceApi(s3TransferHandler, createMultipartUploadSerializer, createMultipartUploadDeserializer, { ...defaultConfig, responseType: 'text' });\n\nexport { createMultipartUpload };\n//# sourceMappingURL=createMultipartUpload.mjs.map\n","import { DEFAULT_PART_SIZE, MAX_PARTS_COUNT } from '../../../../utils/constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst calculatePartSize = (totalSize) => {\n    if (!totalSize) {\n        return DEFAULT_PART_SIZE;\n    }\n    let partSize = DEFAULT_PART_SIZE;\n    let partsCount = Math.ceil(totalSize / partSize);\n    while (partsCount > MAX_PARTS_COUNT) {\n        partSize *= 2;\n        partsCount = Math.ceil(totalSize / partSize);\n    }\n    return partSize;\n};\n\nexport { calculatePartSize };\n//# sourceMappingURL=calculatePartSize.mjs.map\n","import { StorageValidationErrorCode, validationErrorMap } from '../../../../../../errors/types/validation.mjs';\nimport { StorageError } from '../../../../../../errors/StorageError.mjs';\nimport { calculatePartSize } from './calculatePartSize.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getDataChunker = (data, totalSize) => {\n    const partSize = calculatePartSize(totalSize);\n    if (data instanceof Blob) {\n        return helper(data, 0, data.size, partSize);\n    }\n    else if (ArrayBuffer.isView(data)) {\n        return helper(data.buffer, data.byteOffset, data.byteLength, partSize);\n    }\n    else if (data instanceof ArrayBuffer) {\n        return helper(data, 0, data.byteLength, partSize);\n    }\n    else if (typeof data === 'string') {\n        const blob = new Blob([data]);\n        return getDataChunker(blob, blob.size);\n    }\n    else {\n        throw new StorageError({\n            name: StorageValidationErrorCode.InvalidUploadSource,\n            ...validationErrorMap[StorageValidationErrorCode.InvalidUploadSource],\n        });\n    }\n};\nconst helper = function* (buffer, byteOffset, byteLength, partSize) {\n    let partNumber = 1;\n    let startByte = byteOffset;\n    let endByte = byteOffset + Math.min(partSize, byteLength);\n    while (endByte < byteLength + byteOffset) {\n        yield {\n            partNumber,\n            data: buffer.slice(startByte, endByte),\n            size: partSize,\n        };\n        partNumber += 1;\n        startByte = endByte;\n        endByte = startByte + partSize;\n    }\n    yield {\n        partNumber,\n        data: buffer.slice(startByte, byteLength + byteOffset),\n        size: byteLength + byteOffset - startByte,\n    };\n};\n\nexport { getDataChunker };\n//# sourceMappingURL=getDataChunker.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { StorageAction } from '@aws-amplify/core/internals/utils';\nimport '@smithy/md5-js';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../../utils/client/runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../../../../utils/client/runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { StorageError } from '../../../../../../errors/StorageError.mjs';\nimport { resolveS3ConfigAndInput } from '../../../../utils/resolveS3ConfigAndInput.mjs';\nimport { CanceledError } from '../../../../../../errors/CanceledError.mjs';\nimport '../../../../../../errors/types/validation.mjs';\nimport { logger } from '../../../../../../utils/logger.mjs';\nimport { validateStorageOperationInput } from '../../../../utils/validateStorageOperationInput.mjs';\nimport { STORAGE_INPUT_KEY, DEFAULT_QUEUE_SIZE, DEFAULT_ACCESS_LEVEL } from '../../../../utils/constants.mjs';\nimport '../../../../utils/client/s3data/base.mjs';\nimport '../../../../utils/client/s3data/getObject.mjs';\nimport '../../../../utils/client/s3data/listObjectsV2.mjs';\nimport '../../../../utils/client/s3data/putObject.mjs';\nimport '../../../../utils/client/s3data/createMultipartUpload.mjs';\nimport '../../../../utils/client/s3data/uploadPart.mjs';\nimport { completeMultipartUpload } from '../../../../utils/client/s3data/completeMultipartUpload.mjs';\nimport '../../../../utils/client/s3data/listParts.mjs';\nimport { abortMultipartUpload } from '../../../../utils/client/s3data/abortMultipartUpload.mjs';\nimport '../../../../utils/client/s3data/copyObject.mjs';\nimport { headObject } from '../../../../utils/client/s3data/headObject.mjs';\nimport '../../../../utils/client/s3data/deleteObject.mjs';\nimport { getStorageUserAgentValue } from '../../../../utils/userAgent.mjs';\nimport { calculateContentCRC32 } from '../../../../utils/crc32.mjs';\nimport { IntegrityError } from '../../../../../../errors/IntegrityError.mjs';\nimport { uploadPartExecutor } from './uploadPartExecutor.mjs';\nimport { getUploadsCacheKey, removeCachedUpload } from './uploadCache.mjs';\nimport { getConcurrentUploadsProgressTracker } from './progressTracker.mjs';\nimport { loadOrCreateMultipartUpload } from './initialUpload.mjs';\nimport { getDataChunker } from './getDataChunker.mjs';\nimport { calculatePartSize } from './calculatePartSize.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Create closure hiding the multipart upload implementation details and expose the upload job and control functions(\n * onPause, onResume, onCancel).\n *\n * @internal\n */\nconst getMultipartUploadHandlers = (uploadDataInput, size) => {\n    let resolveCallback;\n    let rejectCallback;\n    let inProgressUpload;\n    let resolvedS3Config;\n    let abortController;\n    let resolvedAccessLevel;\n    let resolvedBucket;\n    let resolvedKeyPrefix;\n    let resolvedIdentityId;\n    let uploadCacheKey;\n    let finalKey;\n    let expectedBucketOwner;\n    // Special flag that differentiates HTTP requests abort error caused by pause() from ones caused by cancel().\n    // The former one should NOT cause the upload job to throw, but cancels any pending HTTP requests.\n    // This should be replaced by a special abort reason. However,the support of this API is lagged behind.\n    let isAbortSignalFromPause = false;\n    const { resumableUploadsCache } = uploadDataInput.options ?? {};\n    const startUpload = async () => {\n        const { options: uploadDataOptions, data } = uploadDataInput;\n        const resolvedS3Options = await resolveS3ConfigAndInput(Amplify, uploadDataInput);\n        abortController = new AbortController();\n        isAbortSignalFromPause = false;\n        resolvedS3Config = resolvedS3Options.s3Config;\n        resolvedBucket = resolvedS3Options.bucket;\n        resolvedIdentityId = resolvedS3Options.identityId;\n        expectedBucketOwner = uploadDataOptions?.expectedBucketOwner;\n        const { inputType, objectKey } = validateStorageOperationInput(uploadDataInput, resolvedIdentityId);\n        const { contentDisposition, contentEncoding, contentType = 'application/octet-stream', metadata, preventOverwrite, onProgress, } = uploadDataOptions ?? {};\n        finalKey = objectKey;\n        // Resolve \"key\" specific options\n        if (inputType === STORAGE_INPUT_KEY) {\n            const accessLevel = uploadDataOptions\n                ?.accessLevel;\n            resolvedKeyPrefix = resolvedS3Options.keyPrefix;\n            finalKey = resolvedKeyPrefix + objectKey;\n            resolvedAccessLevel = resolveAccessLevel(accessLevel);\n        }\n        const optionsHash = (await calculateContentCRC32(JSON.stringify(uploadDataOptions))).checksum;\n        if (!inProgressUpload) {\n            const { uploadId, cachedParts, finalCrc32 } = await loadOrCreateMultipartUpload({\n                s3Config: resolvedS3Config,\n                accessLevel: resolvedAccessLevel,\n                bucket: resolvedBucket,\n                keyPrefix: resolvedKeyPrefix,\n                key: objectKey,\n                contentType,\n                contentDisposition,\n                contentEncoding,\n                metadata,\n                data,\n                size,\n                abortSignal: abortController.signal,\n                checksumAlgorithm: uploadDataOptions?.checksumAlgorithm,\n                optionsHash,\n                resumableUploadsCache,\n                expectedBucketOwner,\n            });\n            inProgressUpload = {\n                uploadId,\n                completedParts: cachedParts,\n                finalCrc32,\n            };\n        }\n        uploadCacheKey = size\n            ? getUploadsCacheKey({\n                file: data instanceof File ? data : undefined,\n                accessLevel: resolvedAccessLevel,\n                contentType: uploadDataOptions?.contentType,\n                bucket: resolvedBucket,\n                size,\n                key: objectKey,\n                optionsHash,\n            })\n            : undefined;\n        const dataChunker = getDataChunker(data, size);\n        const completedPartNumberSet = new Set(inProgressUpload.completedParts.map(({ PartNumber }) => PartNumber));\n        const onPartUploadCompletion = (partNumber, eTag, crc32) => {\n            inProgressUpload?.completedParts.push({\n                PartNumber: partNumber,\n                ETag: eTag,\n                // TODO: crc32 can always be added once RN also has an implementation\n                ...(crc32 ? { ChecksumCRC32: crc32 } : {}),\n            });\n        };\n        const concurrentUploadsProgressTracker = getConcurrentUploadsProgressTracker({\n            size,\n            onProgress,\n        });\n        const concurrentUploadPartExecutors = [];\n        for (let index = 0; index < DEFAULT_QUEUE_SIZE; index++) {\n            concurrentUploadPartExecutors.push(uploadPartExecutor({\n                dataChunkerGenerator: dataChunker,\n                completedPartNumberSet,\n                s3Config: resolvedS3Config,\n                abortSignal: abortController.signal,\n                bucket: resolvedBucket,\n                finalKey,\n                uploadId: inProgressUpload.uploadId,\n                onPartUploadCompletion,\n                onProgress: concurrentUploadsProgressTracker.getOnProgressListener(),\n                isObjectLockEnabled: resolvedS3Options.isObjectLockEnabled,\n                useCRC32Checksum: Boolean(inProgressUpload.finalCrc32),\n                expectedBucketOwner,\n            }));\n        }\n        await Promise.all(concurrentUploadPartExecutors);\n        validateCompletedParts(inProgressUpload.completedParts, size);\n        const { ETag: eTag } = await completeMultipartUpload({\n            ...resolvedS3Config,\n            abortSignal: abortController.signal,\n            userAgentValue: getStorageUserAgentValue(StorageAction.UploadData),\n        }, {\n            Bucket: resolvedBucket,\n            Key: finalKey,\n            UploadId: inProgressUpload.uploadId,\n            ChecksumCRC32: inProgressUpload.finalCrc32,\n            IfNoneMatch: preventOverwrite ? '*' : undefined,\n            MultipartUpload: {\n                Parts: sortUploadParts(inProgressUpload.completedParts),\n            },\n            ExpectedBucketOwner: expectedBucketOwner,\n        });\n        if (size) {\n            const { ContentLength: uploadedObjectSize } = await headObject(resolvedS3Config, {\n                Bucket: resolvedBucket,\n                Key: finalKey,\n                ExpectedBucketOwner: expectedBucketOwner,\n            });\n            if (uploadedObjectSize && uploadedObjectSize !== size) {\n                throw new StorageError({\n                    name: 'Error',\n                    message: `Upload failed. Expected object size ${size}, but got ${uploadedObjectSize}.`,\n                });\n            }\n        }\n        if (resumableUploadsCache && uploadCacheKey) {\n            await removeCachedUpload(resumableUploadsCache, uploadCacheKey);\n        }\n        const result = {\n            eTag,\n            contentType,\n            metadata,\n        };\n        return inputType === STORAGE_INPUT_KEY\n            ? { key: objectKey, ...result }\n            : { path: objectKey, ...result };\n    };\n    const startUploadWithResumability = () => startUpload()\n        .then(resolveCallback)\n        .catch(error => {\n        const abortSignal = abortController?.signal;\n        if (abortSignal?.aborted && isAbortSignalFromPause) {\n            logger.debug('upload paused.');\n        }\n        else {\n            // Uncaught errors should be exposed to the users.\n            rejectCallback(error);\n        }\n    });\n    const multipartUploadJob = () => new Promise((resolve, reject) => {\n        resolveCallback = resolve;\n        rejectCallback = reject;\n        startUploadWithResumability();\n    });\n    const onPause = () => {\n        isAbortSignalFromPause = true;\n        abortController?.abort();\n    };\n    const onResume = () => {\n        startUploadWithResumability();\n    };\n    const onCancel = (message) => {\n        // 1. abort in-flight API requests\n        abortController?.abort(message);\n        const cancelUpload = async () => {\n            // 2. clear upload cache.\n            if (uploadCacheKey && resumableUploadsCache) {\n                await removeCachedUpload(resumableUploadsCache, uploadCacheKey);\n            }\n            // 3. clear multipart upload on server side.\n            await abortMultipartUpload(resolvedS3Config, {\n                Bucket: resolvedBucket,\n                Key: finalKey,\n                UploadId: inProgressUpload?.uploadId,\n                ExpectedBucketOwner: expectedBucketOwner,\n            });\n        };\n        cancelUpload().catch(e => {\n            logger.debug('error when cancelling upload task.', e);\n        });\n        rejectCallback(\n        // Internal error that should not be exposed to the users. They should use isCancelError() to check if\n        // the error is caused by cancel().\n        new CanceledError(message ? { message } : undefined));\n    };\n    return {\n        multipartUploadJob,\n        onPause,\n        onResume,\n        onCancel,\n    };\n};\nconst resolveAccessLevel = (accessLevel) => accessLevel ??\n    Amplify.libraryOptions.Storage?.S3?.defaultAccessLevel ??\n    DEFAULT_ACCESS_LEVEL;\nconst validateCompletedParts = (completedParts, size) => {\n    const partsExpected = Math.ceil(size / calculatePartSize(size));\n    const validPartCount = completedParts.length === partsExpected;\n    const sorted = sortUploadParts(completedParts);\n    const validPartNumbers = sorted.every((part, index) => part.PartNumber === index + 1);\n    if (!validPartCount || !validPartNumbers) {\n        throw new IntegrityError();\n    }\n};\nconst sortUploadParts = (parts) => {\n    return [...parts].sort((partA, partB) => partA.PartNumber - partB.PartNumber);\n};\n\nexport { getMultipartUploadHandlers };\n//# sourceMappingURL=uploadHandlers.mjs.map\n","import '../../../../utils/client/s3data/base.mjs';\nimport '../../../../utils/client/s3data/getObject.mjs';\nimport '../../../../utils/client/s3data/listObjectsV2.mjs';\nimport '../../../../utils/client/s3data/putObject.mjs';\nimport { createMultipartUpload } from '../../../../utils/client/s3data/createMultipartUpload.mjs';\nimport '../../../../utils/client/s3data/uploadPart.mjs';\nimport '../../../../utils/client/s3data/completeMultipartUpload.mjs';\nimport '../../../../utils/client/s3data/listParts.mjs';\nimport '../../../../utils/client/s3data/abortMultipartUpload.mjs';\nimport '../../../../utils/client/s3data/copyObject.mjs';\nimport '../../../../utils/client/s3data/headObject.mjs';\nimport '../../../../utils/client/s3data/deleteObject.mjs';\nimport '../../../../../../errors/types/validation.mjs';\nimport '@aws-amplify/core/internals/utils';\nimport { logger } from '../../../../../../utils/logger.mjs';\nimport { constructContentDisposition } from '../../../../utils/constructContentDisposition.mjs';\nimport { CHECKSUM_ALGORITHM_CRC32 } from '../../../../utils/constants.mjs';\nimport { getCombinedCrc32 } from '../../../../utils/getCombinedCrc32.native.mjs';\nimport { getUploadsCacheKey, findCachedUploadParts, cacheMultipartUpload } from './uploadCache.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Load the in-progress multipart upload from local storage or async storage(RN) if it exists, or create a new multipart\n * upload.\n *\n * @internal\n */\nconst loadOrCreateMultipartUpload = async ({ s3Config, data, size, contentType, bucket, accessLevel, keyPrefix, key, contentDisposition, contentEncoding, metadata, abortSignal, checksumAlgorithm, optionsHash, resumableUploadsCache, expectedBucketOwner, }) => {\n    const finalKey = keyPrefix !== undefined ? keyPrefix + key : key;\n    let cachedUpload;\n    if (!resumableUploadsCache) {\n        logger.debug('uploaded cache instance cannot be determined, skipping cache.');\n        cachedUpload = undefined;\n    }\n    else {\n        const uploadCacheKey = getUploadsCacheKey({\n            size,\n            contentType,\n            file: data instanceof File ? data : undefined,\n            bucket,\n            accessLevel,\n            key,\n            optionsHash,\n        });\n        const cachedUploadParts = await findCachedUploadParts({\n            s3Config,\n            cacheKey: uploadCacheKey,\n            bucket,\n            finalKey,\n            resumableUploadsCache,\n        });\n        cachedUpload = cachedUploadParts\n            ? { ...cachedUploadParts, uploadCacheKey }\n            : undefined;\n    }\n    if (cachedUpload) {\n        return {\n            uploadId: cachedUpload.uploadId,\n            cachedParts: cachedUpload.parts,\n            finalCrc32: cachedUpload.finalCrc32,\n        };\n    }\n    else {\n        const finalCrc32 = checksumAlgorithm === CHECKSUM_ALGORITHM_CRC32\n            ? await getCombinedCrc32(data, size)\n            : undefined;\n        const { UploadId } = await createMultipartUpload({\n            ...s3Config,\n            abortSignal,\n        }, {\n            Bucket: bucket,\n            Key: finalKey,\n            ContentType: contentType,\n            ContentDisposition: constructContentDisposition(contentDisposition),\n            ContentEncoding: contentEncoding,\n            Metadata: metadata,\n            ChecksumAlgorithm: finalCrc32 ? 'CRC32' : undefined,\n            ExpectedBucketOwner: expectedBucketOwner,\n        });\n        if (resumableUploadsCache) {\n            const uploadCacheKey = getUploadsCacheKey({\n                size,\n                contentType,\n                file: data instanceof File ? data : undefined,\n                bucket,\n                accessLevel,\n                key,\n                optionsHash,\n            });\n            await cacheMultipartUpload(resumableUploadsCache, uploadCacheKey, {\n                uploadId: UploadId,\n                bucket,\n                key,\n                finalCrc32,\n                fileName: data instanceof File ? data.name : '',\n            });\n        }\n        return {\n            uploadId: UploadId,\n            cachedParts: [],\n            finalCrc32,\n        };\n    }\n};\n\nexport { loadOrCreateMultipartUpload };\n//# sourceMappingURL=initialUpload.mjs.map\n","import { getDataChunker } from '../apis/internal/uploadData/multipart/getDataChunker.mjs';\nimport { calculateContentCRC32 } from './crc32.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Calculates a combined CRC32 checksum for the given data.\n *\n * This function chunks the input data, calculates CRC32 for each chunk,\n * and then combines these checksums into a single value.\n *\n * @async\n * @param {StorageUploadDataPayload} data - The data to calculate the checksum for.\n * @param {number | undefined} size - The size of each chunk. If undefined, a default chunk size will be used.\n * @returns {Promise<string>} A promise that resolves to a string containing the combined CRC32 checksum\n *                            and the number of chunks, separated by a hyphen.\n */\nconst getCombinedCrc32 = async (data, size) => {\n    const crc32List = [];\n    const dataChunker = getDataChunker(data, size);\n    let totalLength = 0;\n    for (const { data: checkData } of dataChunker) {\n        const checksum = new Uint8Array((await calculateContentCRC32(checkData)).checksumArrayBuffer);\n        totalLength += checksum.length;\n        crc32List.push(checksum);\n    }\n    // Combine all Uint8Arrays into a single Uint8Array\n    const combinedArray = new Uint8Array(totalLength);\n    let offset = 0;\n    for (const crc32Hash of crc32List) {\n        combinedArray.set(crc32Hash, offset);\n        offset += crc32Hash.length;\n    }\n    return `${(await calculateContentCRC32(combinedArray.buffer)).checksum}-${crc32List.length}`;\n};\n\nexport { getCombinedCrc32 };\n//# sourceMappingURL=getCombinedCrc32.native.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Track the progress from multiple concurrent uploads, and invoke the onProgress callback.\n *\n * @internal\n */\nconst getConcurrentUploadsProgressTracker = ({ size, onProgress, }) => {\n    const transferredBytesPerListener = [];\n    const getTransferredBytes = () => transferredBytesPerListener.reduce((acc, transferredBytes) => acc + transferredBytes, 0);\n    return {\n        getOnProgressListener: () => {\n            transferredBytesPerListener.push(0);\n            const listenerIndex = transferredBytesPerListener.length - 1;\n            return (event) => {\n                const { transferredBytes } = event;\n                transferredBytesPerListener[listenerIndex] = transferredBytes;\n                onProgress?.({\n                    transferredBytes: getTransferredBytes(),\n                    totalBytes: size,\n                });\n            };\n        },\n    };\n};\n\nexport { getConcurrentUploadsProgressTracker };\n//# sourceMappingURL=progressTracker.mjs.map\n","import '@smithy/md5-js';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../utils/client/runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../../../utils/client/runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport '@aws-amplify/core/internals/utils';\nimport { assertValidationError } from '../../../../../errors/utils/assertValidationError.mjs';\nimport { StorageValidationErrorCode } from '../../../../../errors/types/validation.mjs';\nimport { MAX_OBJECT_SIZE, DEFAULT_PART_SIZE } from '../../../utils/constants.mjs';\nimport { createUploadTask } from '../../../utils/transferTask.mjs';\nimport { byteLength } from './byteLength.mjs';\nimport { putObjectJob } from './putObjectJob.mjs';\nimport { getMultipartUploadHandlers } from './multipart/uploadHandlers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst uploadData = (input) => {\n    const { data } = input;\n    const dataByteLength = byteLength(data);\n    // Using InvalidUploadSource error code because the input data must NOT be any\n    // of permitted Blob, string, ArrayBuffer(View) if byteLength could not be determined.\n    assertValidationError(dataByteLength !== undefined, StorageValidationErrorCode.InvalidUploadSource);\n    assertValidationError(dataByteLength <= MAX_OBJECT_SIZE, StorageValidationErrorCode.ObjectIsTooLarge);\n    if (dataByteLength <= DEFAULT_PART_SIZE) {\n        // Single part upload\n        const abortController = new AbortController();\n        return createUploadTask({\n            isMultipartUpload: false,\n            job: putObjectJob(input, abortController.signal, dataByteLength),\n            onCancel: (message) => {\n                abortController.abort(message);\n            },\n        });\n    }\n    else {\n        // Multipart upload\n        const { multipartUploadJob, onPause, onResume, onCancel } = getMultipartUploadHandlers(input, dataByteLength);\n        return createUploadTask({\n            isMultipartUpload: true,\n            job: multipartUploadJob,\n            onCancel: (message) => {\n                onCancel(message);\n            },\n            onPause,\n            onResume,\n        });\n    }\n};\n\nexport { uploadData };\n//# sourceMappingURL=index.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Calculate the total size of the data to be uploaded. The total size is not required for multipart upload, as it's\n * only used in progress report.\n */\nconst byteLength = (input) => {\n    if (input === null || input === undefined)\n        return 0;\n    if (typeof input === 'string') {\n        const blob = new Blob([input]);\n        return blob.size;\n    }\n    else if (typeof input.byteLength === 'number') {\n        // handles Uint8Array, ArrayBuffer, Buffer, and ArrayBufferView\n        return input.byteLength;\n    }\n    else if (typeof input.size === 'number') {\n        // handles browser File object\n        return input.size;\n    }\n    return undefined;\n};\n\nexport { byteLength };\n//# sourceMappingURL=byteLength.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { StorageAction } from '@aws-amplify/core/internals/utils';\nimport { calculateContentMd5 } from '../../../utils/md5.mjs';\nimport { resolveS3ConfigAndInput } from '../../../utils/resolveS3ConfigAndInput.mjs';\nimport '../../../../../errors/types/validation.mjs';\nimport '../../../../../utils/logger.mjs';\nimport { validateBucketOwnerID } from '../../../utils/validateBucketOwnerID.mjs';\nimport { validateStorageOperationInput } from '../../../utils/validateStorageOperationInput.mjs';\nimport { CHECKSUM_ALGORITHM_CRC32, STORAGE_INPUT_KEY } from '../../../utils/constants.mjs';\nimport '../../../utils/client/s3data/base.mjs';\nimport '../../../utils/client/s3data/getObject.mjs';\nimport '../../../utils/client/s3data/listObjectsV2.mjs';\nimport { putObject } from '../../../utils/client/s3data/putObject.mjs';\nimport '../../../utils/client/s3data/createMultipartUpload.mjs';\nimport '../../../utils/client/s3data/uploadPart.mjs';\nimport '../../../utils/client/s3data/completeMultipartUpload.mjs';\nimport '../../../utils/client/s3data/listParts.mjs';\nimport '../../../utils/client/s3data/abortMultipartUpload.mjs';\nimport '../../../utils/client/s3data/copyObject.mjs';\nimport '../../../utils/client/s3data/headObject.mjs';\nimport '../../../utils/client/s3data/deleteObject.mjs';\nimport { getStorageUserAgentValue } from '../../../utils/userAgent.mjs';\nimport { calculateContentCRC32 } from '../../../utils/crc32.mjs';\nimport { constructContentDisposition } from '../../../utils/constructContentDisposition.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Get a function the returns a promise to call putObject API to S3.\n *\n * @internal\n */\nconst putObjectJob = (uploadDataInput, abortSignal, totalLength) => async () => {\n    const { options: uploadDataOptions, data } = uploadDataInput;\n    const { bucket, keyPrefix, s3Config, isObjectLockEnabled, identityId } = await resolveS3ConfigAndInput(Amplify, uploadDataInput);\n    const { inputType, objectKey } = validateStorageOperationInput(uploadDataInput, identityId);\n    validateBucketOwnerID(uploadDataOptions?.expectedBucketOwner);\n    const finalKey = inputType === STORAGE_INPUT_KEY ? keyPrefix + objectKey : objectKey;\n    const { contentDisposition, contentEncoding, contentType = 'application/octet-stream', preventOverwrite, metadata, checksumAlgorithm, onProgress, expectedBucketOwner, } = uploadDataOptions ?? {};\n    const checksumCRC32 = checksumAlgorithm === CHECKSUM_ALGORITHM_CRC32\n        ? await calculateContentCRC32(data)\n        : undefined;\n    const contentMD5 = \n    // check if checksum exists. ex: should not exist in react native\n    !checksumCRC32 && isObjectLockEnabled\n        ? await calculateContentMd5(data)\n        : undefined;\n    const { ETag: eTag, VersionId: versionId } = await putObject({\n        ...s3Config,\n        abortSignal,\n        onUploadProgress: onProgress,\n        userAgentValue: getStorageUserAgentValue(StorageAction.UploadData),\n    }, {\n        Bucket: bucket,\n        Key: finalKey,\n        Body: data,\n        ContentType: contentType,\n        ContentDisposition: constructContentDisposition(contentDisposition),\n        ContentEncoding: contentEncoding,\n        Metadata: metadata,\n        ContentMD5: contentMD5,\n        ChecksumCRC32: checksumCRC32?.checksum,\n        ExpectedBucketOwner: expectedBucketOwner,\n        IfNoneMatch: preventOverwrite ? '*' : undefined,\n    });\n    const result = {\n        eTag,\n        versionId,\n        contentType,\n        metadata,\n        size: totalLength,\n    };\n    return inputType === STORAGE_INPUT_KEY\n        ? { key: objectKey, ...result }\n        : { path: objectKey, ...result };\n};\n\nexport { putObjectJob };\n//# sourceMappingURL=putObjectJob.mjs.map\n","import { defaultStorage } from '@aws-amplify/core';\nimport { uploadData as uploadData$1 } from './internal/uploadData/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction uploadData(input) {\n    return uploadData$1({\n        ...input,\n        options: {\n            ...input?.options,\n            // This option enables caching in-progress multipart uploads.\n            // It's ONLY needed for client-side API.\n            resumableUploadsCache: defaultStorage,\n        },\n    });\n}\n\nexport { uploadData };\n//# sourceMappingURL=uploadData.mjs.map\n","import { AmplifyUrl } from '../../../../../utils/amplifyUrl/index.mjs';\nimport { ALGORITHM_QUERY_PARAM, SHA256_ALGORITHM_IDENTIFIER, CREDENTIAL_QUERY_PARAM, AMZ_DATE_QUERY_PARAM, SIGNED_HEADERS_QUERY_PARAM, HOST_HEADER, EXPIRES_QUERY_PARAM, TOKEN_QUERY_PARAM, SIGNATURE_QUERY_PARAM } from './constants.mjs';\nimport { getSigningValues } from './utils/getSigningValues.mjs';\nimport { getSignature } from './utils/getSignature.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Given a `Presignable` object, returns a Signature Version 4 presigned `URL` object.\n *\n * @param presignable `Presignable` object containing at least a url to be presigned with authentication query params.\n * @param presignUrlOptions `PresignUrlOptions` object containing values used to construct the signature.\n * @returns A `URL` with authentication query params which can grant temporary access to AWS resources.\n */\nconst presignUrl = ({ body, method = 'GET', url }, { expiration, ...options }) => {\n    const signingValues = getSigningValues(options);\n    const { accessKeyId, credentialScope, longDate, sessionToken } = signingValues;\n    // create the request to sign\n    const presignedUrl = new AmplifyUrl(url);\n    Object.entries({\n        [ALGORITHM_QUERY_PARAM]: SHA256_ALGORITHM_IDENTIFIER,\n        [CREDENTIAL_QUERY_PARAM]: `${accessKeyId}/${credentialScope}`,\n        [AMZ_DATE_QUERY_PARAM]: longDate,\n        [SIGNED_HEADERS_QUERY_PARAM]: HOST_HEADER,\n        ...(expiration && { [EXPIRES_QUERY_PARAM]: expiration.toString() }),\n        ...(sessionToken && { [TOKEN_QUERY_PARAM]: sessionToken }),\n    }).forEach(([key, value]) => {\n        presignedUrl.searchParams.append(key, value);\n    });\n    const requestToSign = {\n        body,\n        headers: { [HOST_HEADER]: url.host },\n        method,\n        url: presignedUrl,\n    };\n    // calculate and add the signature to the url\n    const signature = getSignature(requestToSign, signingValues);\n    presignedUrl.searchParams.append(SIGNATURE_QUERY_PARAM, signature);\n    return presignedUrl;\n};\n\nexport { presignUrl };\n//# sourceMappingURL=presignUrl.mjs.map\n","import { parseMetadata, EMPTY_SHA256_HASH, presignUrl } from '@aws-amplify/core/internals/aws-client-utils';\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { CONTENT_SHA256_HEADER } from '../runtime/constants.mjs';\nimport { s3TransferHandler } from '../runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { buildStorageServiceError, map, deserializeBoolean, deserializeTimestamp, deserializeNumber, deserializeMetadata } from '../utils/deserializeHelpers.mjs';\nimport { validateS3RequiredParameter, serializePathnameObjectKey, assignStringVariables } from '../utils/serializeHelpers.mjs';\nimport { validateObjectUrl } from '../../validateObjectUrl.mjs';\nimport { defaultConfig, parseXmlError } from './base.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst USER_AGENT_HEADER = 'x-amz-user-agent';\nconst getObjectSerializer = async (input, endpoint) => {\n    const url = new AmplifyUrl(endpoint.url.toString());\n    validateS3RequiredParameter(!!input.Key, 'Key');\n    url.pathname = serializePathnameObjectKey(url, input.Key);\n    validateObjectUrl({\n        bucketName: input.Bucket,\n        key: input.Key,\n        objectURL: url,\n    });\n    return {\n        method: 'GET',\n        headers: {\n            ...(input.Range && { Range: input.Range }),\n            ...assignStringVariables({\n                'x-amz-expected-bucket-owner': input.ExpectedBucketOwner,\n            }),\n        },\n        url,\n    };\n};\nconst getObjectDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = (await parseXmlError(response));\n        throw buildStorageServiceError(error, response.statusCode);\n    }\n    else {\n        return {\n            ...map(response.headers, {\n                DeleteMarker: ['x-amz-delete-marker', deserializeBoolean],\n                AcceptRanges: 'accept-ranges',\n                Expiration: 'x-amz-expiration',\n                Restore: 'x-amz-restore',\n                LastModified: ['last-modified', deserializeTimestamp],\n                ContentLength: ['content-length', deserializeNumber],\n                ETag: 'etag',\n                ChecksumCRC32: 'x-amz-checksum-crc32',\n                ChecksumCRC32C: 'x-amz-checksum-crc32c',\n                ChecksumSHA1: 'x-amz-checksum-sha1',\n                ChecksumSHA256: 'x-amz-checksum-sha256',\n                MissingMeta: ['x-amz-missing-meta', deserializeNumber],\n                VersionId: 'x-amz-version-id',\n                CacheControl: 'cache-control',\n                ContentDisposition: 'content-disposition',\n                ContentEncoding: 'content-encoding',\n                ContentLanguage: 'content-language',\n                ContentRange: 'content-range',\n                ContentType: 'content-type',\n                Expires: ['expires', deserializeTimestamp],\n                WebsiteRedirectLocation: 'x-amz-website-redirect-location',\n                ServerSideEncryption: 'x-amz-server-side-encryption',\n                SSECustomerAlgorithm: 'x-amz-server-side-encryption-customer-algorithm',\n                SSECustomerKeyMD5: 'x-amz-server-side-encryption-customer-key-md5',\n                SSEKMSKeyId: 'x-amz-server-side-encryption-aws-kms-key-id',\n                BucketKeyEnabled: [\n                    'x-amz-server-side-encryption-bucket-key-enabled',\n                    deserializeBoolean,\n                ],\n                StorageClass: 'x-amz-storage-class',\n                RequestCharged: 'x-amz-request-charged',\n                ReplicationStatus: 'x-amz-replication-status',\n                PartsCount: ['x-amz-mp-parts-count', deserializeNumber],\n                TagCount: ['x-amz-tagging-count', deserializeNumber],\n                ObjectLockMode: 'x-amz-object-lock-mode',\n                ObjectLockRetainUntilDate: [\n                    'x-amz-object-lock-retain-until-date',\n                    deserializeTimestamp,\n                ],\n                ObjectLockLegalHoldStatus: 'x-amz-object-lock-legal-hold',\n            }),\n            Metadata: deserializeMetadata(response.headers),\n            $metadata: parseMetadata(response),\n            // @ts-expect-error The body is a CompatibleHttpResponse type because the lower-level handler is XHR instead of\n            // fetch, which represents payload in Blob instread of ReadableStream.\n            Body: response.body,\n        };\n    }\n};\nconst getObject = composeServiceApi(s3TransferHandler, getObjectSerializer, getObjectDeserializer, { ...defaultConfig, responseType: 'blob' });\n/**\n * Get a presigned URL for the `getObject` API.\n *\n * @internal\n */\nconst getPresignedGetObjectUrl = async (config, input) => {\n    const endpoint = defaultConfig.endpointResolver(config, input);\n    const { url, headers, method } = await getObjectSerializer(input, endpoint);\n    // TODO: set content sha256 query parameter with value of UNSIGNED-PAYLOAD instead of empty hash.\n    // It requires changes in presignUrl. Without this change, the generated url still works,\n    // but not the same as other tools like AWS SDK and CLI.\n    url.searchParams.append(CONTENT_SHA256_HEADER, EMPTY_SHA256_HASH);\n    if (config.userAgentValue) {\n        url.searchParams.append(config.userAgentHeader ?? USER_AGENT_HEADER, config.userAgentValue);\n    }\n    if (input.ResponseContentType) {\n        url.searchParams.append('response-content-type', input.ResponseContentType);\n    }\n    if (input.ResponseContentDisposition) {\n        url.searchParams.append('response-content-disposition', input.ResponseContentDisposition);\n    }\n    for (const [headerName, value] of Object.entries(headers).sort(([key1], [key2]) => key1.localeCompare(key2))) {\n        url.searchParams.append(headerName, value);\n    }\n    return presignUrl({ method, url, body: undefined }, {\n        signingService: defaultConfig.service,\n        signingRegion: config.region,\n        ...defaultConfig,\n        ...config,\n    });\n};\n\nexport { getObject, getPresignedGetObjectUrl };\n//# sourceMappingURL=getObject.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { StorageAction } from '@aws-amplify/core/internals/utils';\nimport { resolveS3ConfigAndInput } from '../../utils/resolveS3ConfigAndInput.mjs';\nimport '@smithy/md5-js';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../utils/client/runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../../utils/client/runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { createDownloadTask } from '../../utils/transferTask.mjs';\nimport { validateBucketOwnerID } from '../../utils/validateBucketOwnerID.mjs';\nimport { validateStorageOperationInput } from '../../utils/validateStorageOperationInput.mjs';\nimport '../../../../errors/types/validation.mjs';\nimport { STORAGE_INPUT_KEY } from '../../utils/constants.mjs';\nimport '../../utils/client/s3data/base.mjs';\nimport { getObject } from '../../utils/client/s3data/getObject.mjs';\nimport '../../utils/client/s3data/listObjectsV2.mjs';\nimport '../../utils/client/s3data/putObject.mjs';\nimport '../../utils/client/s3data/createMultipartUpload.mjs';\nimport '../../utils/client/s3data/uploadPart.mjs';\nimport '../../utils/client/s3data/completeMultipartUpload.mjs';\nimport '../../utils/client/s3data/listParts.mjs';\nimport '../../utils/client/s3data/abortMultipartUpload.mjs';\nimport '../../utils/client/s3data/copyObject.mjs';\nimport '../../utils/client/s3data/headObject.mjs';\nimport '../../utils/client/s3data/deleteObject.mjs';\nimport { getStorageUserAgentValue } from '../../utils/userAgent.mjs';\nimport { logger } from '../../../../utils/logger.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst downloadData = (input) => {\n    const abortController = new AbortController();\n    const downloadTask = createDownloadTask({\n        job: downloadDataJob(input, abortController.signal),\n        onCancel: (message) => {\n            abortController.abort(message);\n        },\n    });\n    return downloadTask;\n};\nconst downloadDataJob = (downloadDataInput, abortSignal) => async () => {\n    const { options: downloadDataOptions } = downloadDataInput;\n    const { bucket, keyPrefix, s3Config, identityId } = await resolveS3ConfigAndInput(Amplify, downloadDataInput);\n    const { inputType, objectKey } = validateStorageOperationInput(downloadDataInput, identityId);\n    validateBucketOwnerID(downloadDataOptions?.expectedBucketOwner);\n    const finalKey = inputType === STORAGE_INPUT_KEY ? keyPrefix + objectKey : objectKey;\n    logger.debug(`download ${objectKey} from ${finalKey}.`);\n    const { Body: body, LastModified: lastModified, ContentLength: size, ETag: eTag, Metadata: metadata, VersionId: versionId, ContentType: contentType, } = await getObject({\n        ...s3Config,\n        abortSignal,\n        onDownloadProgress: downloadDataOptions?.onProgress,\n        userAgentValue: getStorageUserAgentValue(StorageAction.DownloadData),\n    }, {\n        Bucket: bucket,\n        Key: finalKey,\n        ...(downloadDataOptions?.bytesRange && {\n            Range: `bytes=${downloadDataOptions.bytesRange.start}-${downloadDataOptions.bytesRange.end}`,\n        }),\n        ExpectedBucketOwner: downloadDataOptions?.expectedBucketOwner,\n    });\n    const result = {\n        body,\n        lastModified,\n        size,\n        contentType,\n        eTag,\n        metadata,\n        versionId,\n    };\n    return inputType === STORAGE_INPUT_KEY\n        ? { key: objectKey, ...result }\n        : { path: objectKey, ...result };\n};\n\nexport { downloadData };\n//# sourceMappingURL=downloadData.mjs.map\n","import { downloadData as downloadData$1 } from './internal/downloadData.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction downloadData(input) {\n    return downloadData$1(input);\n}\n\nexport { downloadData };\n//# sourceMappingURL=downloadData.mjs.map\n","import { parseMetadata } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { s3TransferHandler } from '../runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { buildStorageServiceError, map, deserializeBoolean } from '../utils/deserializeHelpers.mjs';\nimport { validateS3RequiredParameter, serializePathnameObjectKey, assignStringVariables } from '../utils/serializeHelpers.mjs';\nimport { validateObjectUrl } from '../../validateObjectUrl.mjs';\nimport { defaultConfig, parseXmlError } from './base.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst deleteObjectSerializer = (input, endpoint) => {\n    const url = new AmplifyUrl(endpoint.url.toString());\n    validateS3RequiredParameter(!!input.Key, 'Key');\n    url.pathname = serializePathnameObjectKey(url, input.Key);\n    validateObjectUrl({\n        bucketName: input.Bucket,\n        key: input.Key,\n        objectURL: url,\n    });\n    const headers = assignStringVariables({\n        'x-amz-expected-bucket-owner': input.ExpectedBucketOwner,\n    });\n    return {\n        method: 'DELETE',\n        headers,\n        url,\n    };\n};\nconst deleteObjectDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        // error is always set when statusCode >= 300\n        const error = (await parseXmlError(response));\n        throw buildStorageServiceError(error, response.statusCode);\n    }\n    else {\n        const content = map(response.headers, {\n            DeleteMarker: ['x-amz-delete-marker', deserializeBoolean],\n            VersionId: 'x-amz-version-id',\n            RequestCharged: 'x-amz-request-charged',\n        });\n        return {\n            ...content,\n            $metadata: parseMetadata(response),\n        };\n    }\n};\nconst deleteObject = composeServiceApi(s3TransferHandler, deleteObjectSerializer, deleteObjectDeserializer, { ...defaultConfig, responseType: 'text' });\n\nexport { deleteObject };\n//# sourceMappingURL=deleteObject.mjs.map\n","import { StorageAction } from '@aws-amplify/core/internals/utils';\nimport '@smithy/md5-js';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../utils/client/runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../../utils/client/runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { resolveS3ConfigAndInput } from '../../utils/resolveS3ConfigAndInput.mjs';\nimport '../../../../errors/types/validation.mjs';\nimport { logger } from '../../../../utils/logger.mjs';\nimport { validateBucketOwnerID } from '../../utils/validateBucketOwnerID.mjs';\nimport { validateStorageOperationInput } from '../../utils/validateStorageOperationInput.mjs';\nimport { STORAGE_INPUT_KEY } from '../../utils/constants.mjs';\nimport '../../utils/client/s3data/base.mjs';\nimport '../../utils/client/s3data/getObject.mjs';\nimport '../../utils/client/s3data/listObjectsV2.mjs';\nimport '../../utils/client/s3data/putObject.mjs';\nimport '../../utils/client/s3data/createMultipartUpload.mjs';\nimport '../../utils/client/s3data/uploadPart.mjs';\nimport '../../utils/client/s3data/completeMultipartUpload.mjs';\nimport '../../utils/client/s3data/listParts.mjs';\nimport '../../utils/client/s3data/abortMultipartUpload.mjs';\nimport '../../utils/client/s3data/copyObject.mjs';\nimport '../../utils/client/s3data/headObject.mjs';\nimport { deleteObject } from '../../utils/client/s3data/deleteObject.mjs';\nimport { getStorageUserAgentValue } from '../../utils/userAgent.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst remove = async (amplify, input) => {\n    const { s3Config, keyPrefix, bucket, identityId } = await resolveS3ConfigAndInput(amplify, input);\n    const { inputType, objectKey } = validateStorageOperationInput(input, identityId);\n    validateBucketOwnerID(input.options?.expectedBucketOwner);\n    let finalKey;\n    if (inputType === STORAGE_INPUT_KEY) {\n        finalKey = `${keyPrefix}${objectKey}`;\n        logger.debug(`remove \"${objectKey}\" from \"${finalKey}\".`);\n    }\n    else {\n        finalKey = objectKey;\n        logger.debug(`removing object in path \"${finalKey}\"`);\n    }\n    await deleteObject({\n        ...s3Config,\n        userAgentValue: getStorageUserAgentValue(StorageAction.Remove),\n    }, {\n        Bucket: bucket,\n        Key: finalKey,\n        ExpectedBucketOwner: input.options?.expectedBucketOwner,\n    });\n    return inputType === STORAGE_INPUT_KEY\n        ? {\n            key: objectKey,\n        }\n        : {\n            path: objectKey,\n        };\n};\n\nexport { remove };\n//# sourceMappingURL=remove.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { remove as remove$1 } from './internal/remove.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction remove(input) {\n    return remove$1(Amplify, input);\n}\n\nexport { remove };\n//# sourceMappingURL=remove.mjs.map\n","import { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { StorageValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { STORAGE_INPUT_PATH, STORAGE_INPUT_PREFIX } from './constants.mjs';\nimport { resolveIdentityId } from './resolveIdentityId.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Local assertion function with StorageOperationInputWithPrefixPath as Input\nconst _isInputWithPath = (input) => {\n    return input.path !== undefined;\n};\nconst validateStorageOperationInputWithPrefix = (input, identityId) => {\n    // Validate prefix & path not present at the same time\n    assertValidationError(!(input.prefix && input.path), StorageValidationErrorCode.InvalidStorageOperationPrefixInput);\n    if (_isInputWithPath(input)) {\n        const { path } = input;\n        const objectKey = typeof path === 'string'\n            ? path\n            : path({ identityId: resolveIdentityId(identityId) });\n        // Assert on no leading slash in the path parameter\n        assertValidationError(!objectKey.startsWith('/'), StorageValidationErrorCode.InvalidStoragePathInput);\n        return {\n            inputType: STORAGE_INPUT_PATH,\n            objectKey,\n        };\n    }\n    else {\n        return { inputType: STORAGE_INPUT_PREFIX, objectKey: input.prefix ?? '' };\n    }\n};\n\nexport { validateStorageOperationInputWithPrefix };\n//# sourceMappingURL=validateStorageOperationInputWithPrefix.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Decodes a URL-encoded string by replacing '+' characters with spaces and applying `decodeURIComponent`.\n * Reference:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent#decoding_query_parameters_from_a_url\n * @param {string} value - The URL-encoded string to decode.\n * @returns {string} The decoded string.\n */\nconst urlDecode = (value) => {\n    return decodeURIComponent(value.replace(/\\+/g, ' '));\n};\n\nexport { urlDecode };\n//# sourceMappingURL=urlDecoder.mjs.map\n","import { parseMetadata } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyUrl, AmplifyUrlSearchParams } from '@aws-amplify/core/internals/utils';\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { parseXmlBody } from '../utils/parsePayload.mjs';\nimport { s3TransferHandler } from '../runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { buildStorageServiceError, map, emptyArrayGuard, deserializeBoolean, deserializeNumber, deserializeTimestamp } from '../utils/deserializeHelpers.mjs';\nimport { assignStringVariables } from '../utils/serializeHelpers.mjs';\nimport { IntegrityError } from '../../../../../errors/IntegrityError.mjs';\nimport { defaultConfig, parseXmlError } from './base.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst listObjectsV2Serializer = (input, endpoint) => {\n    const headers = assignStringVariables({\n        'x-amz-request-payer': input.RequestPayer,\n        'x-amz-expected-bucket-owner': input.ExpectedBucketOwner,\n    });\n    const query = assignStringVariables({\n        'list-type': '2',\n        'continuation-token': input.ContinuationToken,\n        delimiter: input.Delimiter,\n        'encoding-type': input.EncodingType,\n        'fetch-owner': input.FetchOwner,\n        'max-keys': input.MaxKeys,\n        prefix: input.Prefix,\n        'start-after': input.StartAfter,\n    });\n    const url = new AmplifyUrl(endpoint.url.toString());\n    url.search = new AmplifyUrlSearchParams(query).toString();\n    return {\n        method: 'GET',\n        headers,\n        url,\n    };\n};\nconst listObjectsV2Deserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        // error is always set when statusCode >= 300\n        const error = (await parseXmlError(response));\n        throw buildStorageServiceError(error, response.statusCode);\n    }\n    else {\n        const parsed = await parseXmlBody(response);\n        const contents = map(parsed, {\n            CommonPrefixes: [\n                'CommonPrefixes',\n                value => emptyArrayGuard(value, deserializeCommonPrefixList),\n            ],\n            Contents: [\n                'Contents',\n                value => emptyArrayGuard(value, deserializeObjectList),\n            ],\n            ContinuationToken: 'ContinuationToken',\n            Delimiter: 'Delimiter',\n            EncodingType: 'EncodingType',\n            IsTruncated: ['IsTruncated', deserializeBoolean],\n            KeyCount: ['KeyCount', deserializeNumber],\n            MaxKeys: ['MaxKeys', deserializeNumber],\n            Name: 'Name',\n            NextContinuationToken: 'NextContinuationToken',\n            Prefix: 'Prefix',\n            StartAfter: 'StartAfter',\n        });\n        const output = {\n            $metadata: parseMetadata(response),\n            ...contents,\n        };\n        validateCorroboratingElements(output);\n        return output;\n    }\n};\nconst deserializeCommonPrefixList = (output) => output.map(deserializeCommonPrefix);\nconst deserializeCommonPrefix = (output) => map(output, {\n    Prefix: 'Prefix',\n});\nconst deserializeObjectList = (output) => output.map(deserializeObject);\nconst deserializeObject = (output) => map(output, {\n    Key: 'Key',\n    LastModified: ['LastModified', deserializeTimestamp],\n    ETag: 'ETag',\n    ChecksumAlgorithm: [\n        'ChecksumAlgorithm',\n        value => emptyArrayGuard(value, deserializeChecksumAlgorithmList),\n    ],\n    Size: ['Size', deserializeNumber],\n    StorageClass: 'StorageClass',\n    Owner: ['Owner', deserializeOwner],\n});\nconst deserializeChecksumAlgorithmList = (output) => output.map(entry => String(entry));\nconst deserializeOwner = (output) => map(output, { DisplayName: 'DisplayName', ID: 'ID' });\nconst validateCorroboratingElements = (response) => {\n    const { IsTruncated, KeyCount, Contents = [], CommonPrefixes = [], NextContinuationToken, } = response;\n    const validTruncation = (IsTruncated && !!NextContinuationToken) ||\n        (!IsTruncated && !NextContinuationToken);\n    const validNumberOfKeysReturned = KeyCount === Contents.length + CommonPrefixes.length;\n    if (!validTruncation || !validNumberOfKeysReturned) {\n        throw new IntegrityError();\n    }\n};\nconst listObjectsV2 = composeServiceApi(s3TransferHandler, listObjectsV2Serializer, listObjectsV2Deserializer, { ...defaultConfig, responseType: 'text' });\n\nexport { listObjectsV2 };\n//# sourceMappingURL=listObjectsV2.mjs.map\n","import { StorageAction } from '@aws-amplify/core/internals/utils';\nimport '@smithy/md5-js';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../utils/client/runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../../utils/client/runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { resolveS3ConfigAndInput } from '../../utils/resolveS3ConfigAndInput.mjs';\nimport '../../../../errors/types/validation.mjs';\nimport { logger } from '../../../../utils/logger.mjs';\nimport { validateBucketOwnerID } from '../../utils/validateBucketOwnerID.mjs';\nimport { DEFAULT_DELIMITER, STORAGE_INPUT_PREFIX } from '../../utils/constants.mjs';\nimport { validateStorageOperationInputWithPrefix } from '../../utils/validateStorageOperationInputWithPrefix.mjs';\nimport { urlDecode } from '../../utils/urlDecoder.mjs';\nimport '../../utils/client/s3data/base.mjs';\nimport '../../utils/client/s3data/getObject.mjs';\nimport { listObjectsV2 } from '../../utils/client/s3data/listObjectsV2.mjs';\nimport '../../utils/client/s3data/putObject.mjs';\nimport '../../utils/client/s3data/createMultipartUpload.mjs';\nimport '../../utils/client/s3data/uploadPart.mjs';\nimport '../../utils/client/s3data/completeMultipartUpload.mjs';\nimport '../../utils/client/s3data/listParts.mjs';\nimport '../../utils/client/s3data/abortMultipartUpload.mjs';\nimport '../../utils/client/s3data/copyObject.mjs';\nimport '../../utils/client/s3data/headObject.mjs';\nimport '../../utils/client/s3data/deleteObject.mjs';\nimport { getStorageUserAgentValue } from '../../utils/userAgent.mjs';\nimport { IntegrityError } from '../../../../errors/IntegrityError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst MAX_PAGE_SIZE = 1000;\nconst list = async (amplify, input) => {\n    const { options = {} } = input;\n    const { s3Config, bucket, keyPrefix: generatedPrefix, identityId, } = await resolveS3ConfigAndInput(amplify, input);\n    const { inputType, objectKey } = validateStorageOperationInputWithPrefix(input, identityId);\n    validateBucketOwnerID(options.expectedBucketOwner);\n    const isInputWithPrefix = inputType === STORAGE_INPUT_PREFIX;\n    // @ts-expect-error pageSize and nextToken should not coexist with listAll\n    if (options?.listAll && (options?.pageSize || options?.nextToken)) {\n        const anyOptions = options;\n        logger.debug(`listAll is set to true, ignoring ${anyOptions?.pageSize ? `pageSize: ${anyOptions?.pageSize}` : ''} ${anyOptions?.nextToken ? `nextToken: ${anyOptions?.nextToken}` : ''}.`);\n    }\n    const listParams = {\n        Bucket: bucket,\n        Prefix: isInputWithPrefix ? `${generatedPrefix}${objectKey}` : objectKey,\n        MaxKeys: options?.listAll ? undefined : options?.pageSize,\n        ContinuationToken: options?.listAll ? undefined : options?.nextToken,\n        Delimiter: getDelimiter(options),\n        ExpectedBucketOwner: options?.expectedBucketOwner,\n        EncodingType: 'url',\n    };\n    logger.debug(`listing items from \"${listParams.Prefix}\"`);\n    const listInputArgs = {\n        s3Config,\n        listParams,\n    };\n    if (options.listAll) {\n        if (isInputWithPrefix) {\n            return _listAllWithPrefix({\n                ...listInputArgs,\n                generatedPrefix,\n            });\n        }\n        else {\n            return _listAllWithPath(listInputArgs);\n        }\n    }\n    else {\n        if (isInputWithPrefix) {\n            return _listWithPrefix({ ...listInputArgs, generatedPrefix });\n        }\n        else {\n            return _listWithPath(listInputArgs);\n        }\n    }\n};\n/** @deprecated Use {@link _listAllWithPath} instead. */\nconst _listAllWithPrefix = async ({ s3Config, listParams, generatedPrefix, }) => {\n    const listResult = [];\n    let continuationToken = listParams.ContinuationToken;\n    do {\n        const { items: pageResults, nextToken: pageNextToken } = await _listWithPrefix({\n            generatedPrefix,\n            s3Config,\n            listParams: {\n                ...listParams,\n                ContinuationToken: continuationToken,\n                MaxKeys: MAX_PAGE_SIZE,\n            },\n        });\n        listResult.push(...pageResults);\n        continuationToken = pageNextToken;\n    } while (continuationToken);\n    return {\n        items: listResult,\n    };\n};\n/** @deprecated Use {@link _listWithPath} instead. */\nconst _listWithPrefix = async ({ s3Config, listParams, generatedPrefix, }) => {\n    const listParamsClone = { ...listParams };\n    if (!listParamsClone.MaxKeys || listParamsClone.MaxKeys > MAX_PAGE_SIZE) {\n        logger.debug(`defaulting pageSize to ${MAX_PAGE_SIZE}.`);\n        listParamsClone.MaxKeys = MAX_PAGE_SIZE;\n    }\n    const response = await listObjectsV2({\n        ...s3Config,\n        userAgentValue: getStorageUserAgentValue(StorageAction.List),\n    }, listParamsClone);\n    const listOutput = decodeEncodedElements(response);\n    validateEchoedElements(listParamsClone, listOutput);\n    if (!listOutput?.Contents) {\n        return {\n            items: [],\n        };\n    }\n    return {\n        items: listOutput.Contents.map(item => ({\n            key: generatedPrefix\n                ? item.Key.substring(generatedPrefix.length)\n                : item.Key,\n            eTag: item.ETag,\n            lastModified: item.LastModified,\n            size: item.Size,\n        })),\n        nextToken: listOutput.NextContinuationToken,\n    };\n};\nconst _listAllWithPath = async ({ s3Config, listParams, }) => {\n    const listResult = [];\n    const excludedSubpaths = [];\n    let continuationToken = listParams.ContinuationToken;\n    do {\n        const { items: pageResults, excludedSubpaths: pageExcludedSubpaths, nextToken: pageNextToken, } = await _listWithPath({\n            s3Config,\n            listParams: {\n                ...listParams,\n                ContinuationToken: continuationToken,\n                MaxKeys: MAX_PAGE_SIZE,\n            },\n        });\n        listResult.push(...pageResults);\n        excludedSubpaths.push(...(pageExcludedSubpaths ?? []));\n        continuationToken = pageNextToken;\n    } while (continuationToken);\n    return {\n        items: listResult,\n        excludedSubpaths,\n    };\n};\nconst _listWithPath = async ({ s3Config, listParams, }) => {\n    const listParamsClone = { ...listParams };\n    if (!listParamsClone.MaxKeys || listParamsClone.MaxKeys > MAX_PAGE_SIZE) {\n        logger.debug(`defaulting pageSize to ${MAX_PAGE_SIZE}.`);\n        listParamsClone.MaxKeys = MAX_PAGE_SIZE;\n    }\n    const response = await listObjectsV2({\n        ...s3Config,\n        userAgentValue: getStorageUserAgentValue(StorageAction.List),\n    }, listParamsClone);\n    const listOutput = decodeEncodedElements(response);\n    validateEchoedElements(listParamsClone, listOutput);\n    const { Contents: contents, NextContinuationToken: nextContinuationToken, CommonPrefixes: commonPrefixes, } = listOutput;\n    const excludedSubpaths = commonPrefixes && mapCommonPrefixesToExcludedSubpaths(commonPrefixes);\n    if (!contents) {\n        return {\n            items: [],\n            nextToken: nextContinuationToken,\n            excludedSubpaths,\n        };\n    }\n    return {\n        items: contents.map(item => ({\n            path: item.Key,\n            eTag: item.ETag,\n            lastModified: item.LastModified,\n            size: item.Size,\n        })),\n        nextToken: nextContinuationToken,\n        excludedSubpaths,\n    };\n};\nconst mapCommonPrefixesToExcludedSubpaths = (commonPrefixes) => {\n    return commonPrefixes.reduce((mappedSubpaths, { Prefix }) => {\n        if (Prefix) {\n            mappedSubpaths.push(Prefix);\n        }\n        return mappedSubpaths;\n    }, []);\n};\nconst getDelimiter = (options) => {\n    if (options?.subpathStrategy?.strategy === 'exclude') {\n        return options?.subpathStrategy?.delimiter ?? DEFAULT_DELIMITER;\n    }\n};\nconst validateEchoedElements = (listInput, listOutput) => {\n    const validEchoedParameters = listInput.Bucket === listOutput.Name &&\n        listInput.Delimiter === listOutput.Delimiter &&\n        listInput.MaxKeys === listOutput.MaxKeys &&\n        listInput.Prefix === listOutput.Prefix &&\n        listInput.ContinuationToken === listOutput.ContinuationToken;\n    if (!validEchoedParameters) {\n        throw new IntegrityError();\n    }\n};\n/**\n * Decodes URL-encoded elements in the S3 `ListObjectsV2Output` response when `EncodingType` is `'url'`.\n * Applies to values for 'Delimiter', 'Prefix', 'StartAfter' and 'Key' in the response.\n */\nconst decodeEncodedElements = (listOutput) => {\n    if (listOutput.EncodingType !== 'url') {\n        return listOutput;\n    }\n    const decodedListOutput = { ...listOutput };\n    // Decode top-level properties\n    ['Delimiter', 'Prefix', 'StartAfter'].forEach(prop => {\n        const value = listOutput[prop];\n        if (typeof value === 'string') {\n            decodedListOutput[prop] = urlDecode(value);\n        }\n    });\n    // Decode 'Key' in each item of 'Contents', if it exists\n    if (listOutput.Contents) {\n        decodedListOutput.Contents = listOutput.Contents.map(content => ({\n            ...content,\n            Key: content.Key ? urlDecode(content.Key) : content.Key,\n        }));\n    }\n    // Decode 'Prefix' in each item of 'CommonPrefixes', if it exists\n    if (listOutput.CommonPrefixes) {\n        decodedListOutput.CommonPrefixes = listOutput.CommonPrefixes.map(content => ({\n            ...content,\n            Prefix: content.Prefix ? urlDecode(content.Prefix) : content.Prefix,\n        }));\n    }\n    return decodedListOutput;\n};\n\nexport { list };\n//# sourceMappingURL=list.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { list as list$1 } from './internal/list.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction list(input) {\n    return list$1(Amplify, input ?? {});\n}\n\nexport { list };\n//# sourceMappingURL=list.mjs.map\n","import { StorageAction } from '@aws-amplify/core/internals/utils';\nimport '@smithy/md5-js';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../utils/client/runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../../utils/client/runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { resolveS3ConfigAndInput } from '../../utils/resolveS3ConfigAndInput.mjs';\nimport '../../../../errors/types/validation.mjs';\nimport { logger } from '../../../../utils/logger.mjs';\nimport { validateBucketOwnerID } from '../../utils/validateBucketOwnerID.mjs';\nimport { validateStorageOperationInput } from '../../utils/validateStorageOperationInput.mjs';\nimport { STORAGE_INPUT_KEY } from '../../utils/constants.mjs';\nimport '../../utils/client/s3data/base.mjs';\nimport '../../utils/client/s3data/getObject.mjs';\nimport '../../utils/client/s3data/listObjectsV2.mjs';\nimport '../../utils/client/s3data/putObject.mjs';\nimport '../../utils/client/s3data/createMultipartUpload.mjs';\nimport '../../utils/client/s3data/uploadPart.mjs';\nimport '../../utils/client/s3data/completeMultipartUpload.mjs';\nimport '../../utils/client/s3data/listParts.mjs';\nimport '../../utils/client/s3data/abortMultipartUpload.mjs';\nimport '../../utils/client/s3data/copyObject.mjs';\nimport { headObject } from '../../utils/client/s3data/headObject.mjs';\nimport '../../utils/client/s3data/deleteObject.mjs';\nimport { getStorageUserAgentValue } from '../../utils/userAgent.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getProperties = async (amplify, input, action) => {\n    const { s3Config, bucket, keyPrefix, identityId } = await resolveS3ConfigAndInput(amplify, input);\n    const { inputType, objectKey } = validateStorageOperationInput(input, identityId);\n    validateBucketOwnerID(input.options?.expectedBucketOwner);\n    const finalKey = inputType === STORAGE_INPUT_KEY ? keyPrefix + objectKey : objectKey;\n    logger.debug(`get properties of ${objectKey} from ${finalKey}`);\n    const response = await headObject({\n        ...s3Config,\n        userAgentValue: getStorageUserAgentValue(action ?? StorageAction.GetProperties),\n    }, {\n        Bucket: bucket,\n        Key: finalKey,\n        ExpectedBucketOwner: input.options?.expectedBucketOwner,\n    });\n    const result = {\n        contentType: response.ContentType,\n        size: response.ContentLength,\n        eTag: response.ETag,\n        lastModified: response.LastModified,\n        metadata: response.Metadata,\n        versionId: response.VersionId,\n    };\n    return inputType === STORAGE_INPUT_KEY\n        ? { key: objectKey, ...result }\n        : { path: objectKey, ...result };\n};\n\nexport { getProperties };\n//# sourceMappingURL=getProperties.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { getProperties as getProperties$1 } from './internal/getProperties.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction getProperties(input) {\n    return getProperties$1(Amplify, input);\n}\n\nexport { getProperties };\n//# sourceMappingURL=getProperties.mjs.map\n","import { parseMetadata } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { parseXmlBody } from '../utils/parsePayload.mjs';\nimport { s3TransferHandler } from '../runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { buildStorageServiceError } from '../utils/deserializeHelpers.mjs';\nimport { serializeObjectConfigsToHeaders, assignStringVariables, validateS3RequiredParameter, serializePathnameObjectKey } from '../utils/serializeHelpers.mjs';\nimport { bothNilOrEqual } from '../utils/integrityHelpers.mjs';\nimport { IntegrityError } from '../../../../../errors/IntegrityError.mjs';\nimport { validateObjectUrl } from '../../validateObjectUrl.mjs';\nimport { defaultConfig, parseXmlError } from './base.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst copyObjectSerializer = async (input, endpoint) => {\n    const headers = {\n        ...(await serializeObjectConfigsToHeaders(input)),\n        ...assignStringVariables({\n            'x-amz-copy-source': input.CopySource,\n            'x-amz-metadata-directive': input.MetadataDirective,\n            'x-amz-copy-source-if-match': input.CopySourceIfMatch,\n            'x-amz-copy-source-if-unmodified-since': input.CopySourceIfUnmodifiedSince?.toUTCString(),\n            'x-amz-source-expected-bucket-owner': input.ExpectedSourceBucketOwner,\n            'x-amz-expected-bucket-owner': input.ExpectedBucketOwner,\n        }),\n    };\n    validateCopyObjectHeaders(input, headers);\n    const url = new AmplifyUrl(endpoint.url.toString());\n    validateS3RequiredParameter(!!input.Key, 'Key');\n    url.pathname = serializePathnameObjectKey(url, input.Key);\n    validateObjectUrl({\n        bucketName: input.Bucket,\n        key: input.Key,\n        objectURL: url,\n    });\n    return {\n        method: 'PUT',\n        headers,\n        url,\n    };\n};\nconst validateCopyObjectHeaders = (input, headers) => {\n    const validations = [\n        headers['x-amz-copy-source'] === input.CopySource,\n        bothNilOrEqual(input.MetadataDirective, headers['x-amz-metadata-directive']),\n        bothNilOrEqual(input.CopySourceIfMatch, headers['x-amz-copy-source-if-match']),\n        bothNilOrEqual(input.CopySourceIfUnmodifiedSince?.toUTCString(), headers['x-amz-copy-source-if-unmodified-since']),\n    ];\n    if (validations.some(validation => !validation)) {\n        throw new IntegrityError();\n    }\n};\nconst copyObjectDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = (await parseXmlError(response));\n        throw buildStorageServiceError(error, response.statusCode);\n    }\n    else {\n        await parseXmlBody(response);\n        return {\n            $metadata: parseMetadata(response),\n        };\n    }\n};\nconst copyObject = composeServiceApi(s3TransferHandler, copyObjectSerializer, copyObjectDeserializer, { ...defaultConfig, responseType: 'text' });\n\nexport { copyObject, validateCopyObjectHeaders };\n//# sourceMappingURL=copyObject.mjs.map\n","import { StorageAction } from '@aws-amplify/core/internals/utils';\nimport '@smithy/md5-js';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../utils/client/runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../../utils/client/runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { resolveS3ConfigAndInput } from '../../utils/resolveS3ConfigAndInput.mjs';\nimport { assertValidationError } from '../../../../errors/utils/assertValidationError.mjs';\nimport { StorageValidationErrorCode } from '../../../../errors/types/validation.mjs';\nimport { logger } from '../../../../utils/logger.mjs';\nimport { validateBucketOwnerID } from '../../utils/validateBucketOwnerID.mjs';\nimport { validateStorageOperationInput } from '../../utils/validateStorageOperationInput.mjs';\nimport { isInputWithPath } from '../../utils/isInputWithPath.mjs';\nimport '../../utils/client/s3data/base.mjs';\nimport '../../utils/client/s3data/getObject.mjs';\nimport '../../utils/client/s3data/listObjectsV2.mjs';\nimport '../../utils/client/s3data/putObject.mjs';\nimport '../../utils/client/s3data/createMultipartUpload.mjs';\nimport '../../utils/client/s3data/uploadPart.mjs';\nimport '../../utils/client/s3data/completeMultipartUpload.mjs';\nimport '../../utils/client/s3data/listParts.mjs';\nimport '../../utils/client/s3data/abortMultipartUpload.mjs';\nimport { copyObject } from '../../utils/client/s3data/copyObject.mjs';\nimport '../../utils/client/s3data/headObject.mjs';\nimport '../../utils/client/s3data/deleteObject.mjs';\nimport { getStorageUserAgentValue } from '../../utils/userAgent.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst isCopyInputWithPath = (input) => isInputWithPath(input.source);\nconst storageBucketAssertion = (sourceBucket, destBucket) => {\n    /**  For multi-bucket, both source and destination bucket needs to be passed in\n     *   or both can be undefined and we fallback to singleton's default value\n     */\n    assertValidationError(\n    // Both src & dest bucket option is present is acceptable\n    (sourceBucket !== undefined && destBucket !== undefined) ||\n        // or both are undefined is also acceptable\n        (!destBucket && !sourceBucket), StorageValidationErrorCode.InvalidCopyOperationStorageBucket);\n};\nconst copy = async (amplify, input) => {\n    return isCopyInputWithPath(input)\n        ? copyWithPath(amplify, input)\n        : copyWithKey(amplify, input);\n};\nconst copyWithPath = async (amplify, input) => {\n    const { source, destination } = input;\n    storageBucketAssertion(source.bucket, destination.bucket);\n    const { bucket: sourceBucket } = await resolveS3ConfigAndInput(amplify, {\n        path: input.source.path,\n        options: {\n            locationCredentialsProvider: input.options?.locationCredentialsProvider,\n            ...input.source,\n        },\n    });\n    // The bucket, region, credentials of s3 client are resolved from destination.\n    // Whereas the source bucket and path are a input parameter of S3 copy operation.\n    const { s3Config, bucket: destBucket, identityId, } = await resolveS3ConfigAndInput(amplify, {\n        path: input.destination.path,\n        options: {\n            locationCredentialsProvider: input.options?.locationCredentialsProvider,\n            customEndpoint: input.options?.customEndpoint,\n            ...input.destination,\n        },\n    }); // resolveS3ConfigAndInput does not make extra API calls or storage access if called repeatedly.\n    assertValidationError(!!source.path, StorageValidationErrorCode.NoSourcePath);\n    assertValidationError(!!destination.path, StorageValidationErrorCode.NoDestinationPath);\n    const { objectKey: sourcePath } = validateStorageOperationInput(source, identityId);\n    const { objectKey: destinationPath } = validateStorageOperationInput(destination, identityId);\n    validateBucketOwnerID(source.expectedBucketOwner);\n    validateBucketOwnerID(destination.expectedBucketOwner);\n    const finalCopySource = `${sourceBucket}/${sourcePath}`;\n    const finalCopyDestination = destinationPath;\n    logger.debug(`copying \"${finalCopySource}\" to \"${finalCopyDestination}\".`);\n    await serviceCopy({\n        source: finalCopySource,\n        destination: finalCopyDestination,\n        bucket: destBucket,\n        s3Config,\n        notModifiedSince: input.source.notModifiedSince,\n        eTag: input.source.eTag,\n        expectedSourceBucketOwner: input.source?.expectedBucketOwner,\n        expectedBucketOwner: input.destination?.expectedBucketOwner,\n    });\n    return { path: finalCopyDestination };\n};\n/** @deprecated Use {@link copyWithPath} instead. */\nconst copyWithKey = async (amplify, input) => {\n    const { source, destination } = input;\n    storageBucketAssertion(source.bucket, destination.bucket);\n    assertValidationError(!!source.key, StorageValidationErrorCode.NoSourceKey);\n    assertValidationError(!!destination.key, StorageValidationErrorCode.NoDestinationKey);\n    validateBucketOwnerID(source.expectedBucketOwner);\n    validateBucketOwnerID(destination.expectedBucketOwner);\n    const { bucket: sourceBucket, keyPrefix: sourceKeyPrefix } = await resolveS3ConfigAndInput(amplify, {\n        ...input,\n        options: {\n            // @ts-expect-error: 'options' does not exist on type 'CopyInput'. In case of JS users set the location\n            // credentials provider option, resolveS3ConfigAndInput will throw validation error.\n            locationCredentialsProvider: input.options?.locationCredentialsProvider,\n            ...input.source,\n        },\n    });\n    // The bucket, region, credentials of s3 client are resolved from destination.\n    // Whereas the source bucket and path are a input parameter of S3 copy operation.\n    const { s3Config, bucket: destBucket, keyPrefix: destinationKeyPrefix, } = await resolveS3ConfigAndInput(amplify, {\n        ...input,\n        options: {\n            // @ts-expect-error: 'options' does not exist on type 'CopyInput'. In case of JS users set the location\n            // credentials provider option, resolveS3ConfigAndInput will throw validation error.\n            locationCredentialsProvider: input.options?.locationCredentialsProvider,\n            ...input.destination,\n        },\n    }); // resolveS3ConfigAndInput does not make extra API calls or storage access if called repeatedly.\n    // TODO(ashwinkumar6) V6-logger: warn `You may copy files from another user if the source level is \"protected\", currently it's ${srcLevel}`\n    const finalCopySource = `${sourceBucket}/${sourceKeyPrefix}${source.key}`;\n    const finalCopyDestination = `${destinationKeyPrefix}${destination.key}`;\n    logger.debug(`copying \"${finalCopySource}\" to \"${finalCopyDestination}\".`);\n    await serviceCopy({\n        source: finalCopySource,\n        destination: finalCopyDestination,\n        bucket: destBucket,\n        s3Config,\n        notModifiedSince: input.source.notModifiedSince,\n        eTag: input.source.eTag,\n        expectedSourceBucketOwner: input.source?.expectedBucketOwner,\n        expectedBucketOwner: input.destination?.expectedBucketOwner,\n    });\n    return {\n        key: destination.key,\n    };\n};\nconst serviceCopy = async ({ source, destination, bucket, s3Config, notModifiedSince, eTag, expectedSourceBucketOwner, expectedBucketOwner, }) => {\n    await copyObject({\n        ...s3Config,\n        userAgentValue: getStorageUserAgentValue(StorageAction.Copy),\n    }, {\n        Bucket: bucket,\n        CopySource: source,\n        Key: destination,\n        MetadataDirective: 'COPY',\n        CopySourceIfMatch: eTag,\n        CopySourceIfUnmodifiedSince: notModifiedSince,\n        ExpectedSourceBucketOwner: expectedSourceBucketOwner,\n        ExpectedBucketOwner: expectedBucketOwner,\n    });\n};\n\nexport { copy, copyWithKey };\n//# sourceMappingURL=copy.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { copy as copy$1 } from './internal/copy.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction copy(input) {\n    return copy$1(Amplify, input);\n}\n\nexport { copy };\n//# sourceMappingURL=copy.mjs.map\n","import { StorageAction } from '@aws-amplify/core/internals/utils';\nimport { StorageValidationErrorCode } from '../../../../errors/types/validation.mjs';\nimport '../../utils/client/s3data/base.mjs';\nimport { getPresignedGetObjectUrl } from '../../utils/client/s3data/getObject.mjs';\nimport '../../utils/client/s3data/listObjectsV2.mjs';\nimport '../../utils/client/s3data/putObject.mjs';\nimport '../../utils/client/s3data/createMultipartUpload.mjs';\nimport '../../utils/client/s3data/uploadPart.mjs';\nimport '../../utils/client/s3data/completeMultipartUpload.mjs';\nimport '../../utils/client/s3data/listParts.mjs';\nimport '../../utils/client/s3data/abortMultipartUpload.mjs';\nimport '../../utils/client/s3data/copyObject.mjs';\nimport '../../utils/client/s3data/headObject.mjs';\nimport '../../utils/client/s3data/deleteObject.mjs';\nimport '@smithy/md5-js';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../utils/client/runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../../utils/client/runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { resolveS3ConfigAndInput } from '../../utils/resolveS3ConfigAndInput.mjs';\nimport { assertValidationError } from '../../../../errors/utils/assertValidationError.mjs';\nimport '../../../../utils/logger.mjs';\nimport { validateBucketOwnerID } from '../../utils/validateBucketOwnerID.mjs';\nimport { validateStorageOperationInput } from '../../utils/validateStorageOperationInput.mjs';\nimport { DEFAULT_PRESIGN_EXPIRATION, STORAGE_INPUT_KEY, MAX_URL_EXPIRATION } from '../../utils/constants.mjs';\nimport { constructContentDisposition } from '../../utils/constructContentDisposition.mjs';\nimport { getProperties } from './getProperties.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getUrl = async (amplify, input) => {\n    const { options: getUrlOptions } = input;\n    const { s3Config, keyPrefix, bucket, identityId } = await resolveS3ConfigAndInput(amplify, input);\n    const { inputType, objectKey } = validateStorageOperationInput(input, identityId);\n    validateBucketOwnerID(getUrlOptions?.expectedBucketOwner);\n    const finalKey = inputType === STORAGE_INPUT_KEY ? keyPrefix + objectKey : objectKey;\n    if (getUrlOptions?.validateObjectExistence) {\n        await getProperties(amplify, input, StorageAction.GetUrl);\n    }\n    let urlExpirationInSec = getUrlOptions?.expiresIn ?? DEFAULT_PRESIGN_EXPIRATION;\n    const resolvedCredential = typeof s3Config.credentials === 'function'\n        ? await s3Config.credentials()\n        : s3Config.credentials;\n    const awsCredExpiration = resolvedCredential.expiration;\n    if (awsCredExpiration) {\n        const awsCredExpirationInSec = Math.floor((awsCredExpiration.getTime() - Date.now()) / 1000);\n        urlExpirationInSec = Math.min(awsCredExpirationInSec, urlExpirationInSec);\n    }\n    const maxUrlExpirationInSec = MAX_URL_EXPIRATION / 1000;\n    assertValidationError(urlExpirationInSec <= maxUrlExpirationInSec, StorageValidationErrorCode.UrlExpirationMaxLimitExceed);\n    // expiresAt is the minimum of credential expiration and url expiration\n    return {\n        url: await getPresignedGetObjectUrl({\n            ...s3Config,\n            credentials: resolvedCredential,\n            expiration: urlExpirationInSec,\n        }, {\n            Bucket: bucket,\n            Key: finalKey,\n            ...(getUrlOptions?.contentDisposition && {\n                ResponseContentDisposition: constructContentDisposition(getUrlOptions.contentDisposition),\n            }),\n            ...(getUrlOptions?.contentType && {\n                ResponseContentType: getUrlOptions.contentType,\n            }),\n            ExpectedBucketOwner: getUrlOptions?.expectedBucketOwner,\n        }),\n        expiresAt: new Date(Date.now() + urlExpirationInSec * 1000),\n    };\n};\n\nexport { getUrl };\n//# sourceMappingURL=getUrl.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { getUrl as getUrl$1 } from './internal/getUrl.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction getUrl(input) {\n    return getUrl$1(Amplify, input);\n}\n\nexport { getUrl };\n//# sourceMappingURL=getUrl.mjs.map\n"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__556__","CRC32","version","T0","c","table","Array","n","Int32Array","signed_crc_table","TT","T","v","out","subarray","slice","slice_by_16_tables","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","bstr","seed","C","i","L","length","charCodeAt","buf","B","str","d","DO_NOT_EXPORT_CRC","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","StorageValidationErrorCode","validationErrorMap","NoCredentials","message","NoIdentityId","NoKey","NoSourceKey","NoDestinationKey","NoSourcePath","NoDestinationPath","NoBucket","NoRegion","UrlExpirationMaxLimitExceed","ObjectIsTooLarge","InvalidUploadSource","InvalidStorageOperationInput","InvalidAWSAccountID","InvalidStorageOperationPrefixInput","InvalidStoragePathInput","InvalidLocationCredentialsCacheSize","LocationCredentialsStoreDestroyed","InvalidS3Uri","InvalidStorageBucket","InvalidCopyOperationStorageBucket","InvalidCustomEndpoint","ForcePathStyleEndpointNotSupported","DnsIncompatibleBucketName","AmplifyError","Error","constructor","name","recoverySuggestion","underlyingError","super","setPrototypeOf","params","assertValidationError","assertion","LOCAL_TESTING_S3_ENDPOINT","DEFAULT_ACCESS_LEVEL","DEFAULT_PART_SIZE","UPLOADS_STORAGE_KEY","STORAGE_INPUT_PREFIX","STORAGE_INPUT_KEY","STORAGE_INPUT_PATH","CHECKSUM_ALGORITHM_CRC32","CanceledError","isCancelError","error","logger","ConsoleLogger","createCancellableTask","job","onCancel","canceledErrorMessage","cancelableTask","cancel","state","taskState","debug","wrappedJobPromise","result","e","assign","createDownloadTask","createUploadTask","onResume","onPause","isMultipartUpload","cancellableTask","uploadTask","pause","resume","Framework","Category","AiAction","AnalyticsAction","ApiAction","AuthAction","DataStoreAction","GeoAction","InAppMessagingAction","InteractionsAction","PredictionsAction","PubSubAction","PushNotificationAction","StorageAction","INIT","Md5","reset","update","sourceData","data","byteLength","isEmptyData","finished","input","TextEncoder","encode","ArrayBuffer","isView","Uint8Array","buffer","byteOffset","BYTES_PER_ELEMENT","convertToBuffer","position","bytesHashed","setUint8","bufferLength","hashBuffer","digest","undecoratedLength","bitsHashed","BLOCK_SIZE","setUint32","Math","floor","DataView","a","b","ff","getUint32","gg","hh","ii","Uint32Array","from","cmn","q","x","s","t","toBase64","bytes","base64Str","String","fromCodePoint","join","btoa","bytesToBase64","readFile","file","Promise","resolve","reject","reader","FileReader","onload","onabort","onerror","readAsArrayBuffer","calculateContentMd5","async","content","hasher","Blob","resolvePrefix","accessLevel","targetIdentityId","resolveS3ConfigAndInput","amplify","apiInput","options","apiOptions","identityId","Auth","fetchAuthSession","bucket","defaultBucket","region","defaultRegion","dangerouslyConnectToHttpEndpointForTesting","buckets","getConfig","Storage","S3","resolveBucketConfig","defaultAccessLevel","prefixResolver","isObjectLockEnabled","libraryOptions","keyPrefix","s3Config","credentials","isLocationCredentialsProvider","assertStorageInput","locationCredentialsProvider","useAccelerateEndpoint","customEndpoint","forcePathStyle","isInputWithKey","isInputWithPrefix","isInputWithCopySourceOrDestination","isDeprecatedInput","path","destination","source","isInputWithCallbackPath","prefix","bucketConfig","bucketName","VALID_AWS_ACCOUNT_ID_PATTERN","validateBucketOwnerID","accountID","test","isInputWithPath","resolveIdentityId","validateStorageOperationInput","objectKey","startsWith","inputType","parseMetadata","response","headers","statusCode","isMetadataBearer","$metadata","httpStatusCode","requestId","extendedRequestId","cfId","AmplifyUrl","URL","AmplifyUrlSearchParams","URLSearchParams","composeServiceApi","transferHandler","serializer","deserializer","defaultConfig","config","resolvedConfig","endpoint","endpointResolver","request","cancellableSleep","timeoutMs","abortSignal","aborted","timeoutId","sleepPromiseResolveFn","sleepPromise","setTimeout","addEventListener","cancelSleep","_","clearTimeout","removeEventListener","addOrIncrementMetadataAttempts","nextHandlerOutput","attempts","toString","getSignedHeaders","keys","map","toLowerCase","sort","ALGORITHM_QUERY_PARAM","AMZ_DATE_QUERY_PARAM","CREDENTIAL_QUERY_PARAM","EXPIRES_QUERY_PARAM","SIGNED_HEADERS_QUERY_PARAM","TOKEN_QUERY_PARAM","HOST_HEADER","AMZ_DATE_HEADER","TOKEN_HEADER","KEY_TYPE_IDENTIFIER","SHA256_ALGORITHM_IDENTIFIER","EMPTY_HASH","getSigningValues","signingDate","Date","signingRegion","signingService","uriEscapePath","accessKeyId","secretAccessKey","sessionToken","longDate","shortDate","date","toISOString","replace","getFormattedDates","credentialScope","create","SuppressedError","KEY","MAX_HASHABLE_LENGTH","pow","RawSha256","temp","bufferView","state0","state1","state2","state3","state4","state5","state6","state7","u","t1_1","t2_1","t1","t2","Buffer","Sha256","secret","hash","toHash","digestSync","outer","thisArg","_arguments","generator","body","f","y","label","sent","trys","ops","g","Iterator","next","verb","iterator","op","TypeError","done","pop","push","step","__generator","_a","P","fulfilled","rejected","then","apply","inner","bufferHash","set","bufferFromSecret","SHORT_TO_HEX","HEX_TO_SHORT","encodedByte","getHashedData","sha256","getHashedDataAsHex","toHex","getCanonicalHeaders","entries","trim","entry","escapeUri","uri","encodeURIComponent","hexEncode","toUpperCase","getCanonicalUri","pathname","getHashedPayload","isSourceData","isArrayBuffer","arg","getSignature","canonicalRequest","method","url","searchParams","keyA","valA","keyB","valB","val","getCanonicalRequest","stringToSign","hashedRequest","getStringToSign","signature","service","dateKey","regionKey","serviceKey","getSigningKey","getSkewCorrectedDate","systemClockOffset","now","NETWORK_ERROR_MESSAGE","ABORT_ERROR_MESSAGE","CONTENT_SHA256_HEADER","withMemoization","payloadAccessor","cached","convertToTransferProgressEvent","event","transferredBytes","loaded","totalBytes","lengthComputable","total","FORBIDDEN_HEADERS","s3TransferHandler","coreHandler","onDownloadProgress","onUploadProgress","responseType","xhr","XMLHttpRequest","open","filter","header","includes","forEach","setRequestHeader","upload","networkError","buildHandlerError","readyState","DONE","responseHeaders","xhrHeaders","getAllResponseHeaders","split","reduce","headerMap","line","parts","shift","loadEndResponseType","responseBlob","responseText","bodyMixIn","blob","text","onloadend","readAsText","readBlobAsText","json","status","onCanceled","canceledError","abort","ReadableStream","send","middleware","userAgentHeader","userAgentValue","headerName","maxAttempts","retryDecider","computeDelay","context","attemptsCount","handleTerminalErrorOrResponse","isCredentialsExpiredError","retryable","isCredentialsExpired","delay","currentSystemClockOffset","signRequestOptions","forceRefresh","signedRequest","signingValues","host","requestToSign","credentialEntry","signedHeadersEntry","signatureEntry","signRequest","dateString","getDateHeader","clockTimeInMilliseconds","clockOffsetInMilliseconds","abs","getTime","isClockSkewed","getUpdatedSystemClockOffset","parse","composedHandler","composeHandlerRequest","m","resolvedMiddleware","instructions","instruction","accessor","isArray","deserializeNumber","Number","deserializeBoolean","deserializeTimestamp","emptyArrayGuard","deserializeMetadata","objectMetadataHeaderPrefix","deserialized","acc","buildStorageServiceError","storageError","deserializeCompletedPartList","item","PartNumber","ETag","ChecksumCRC32","extendedEncodeURIComponent","AmplifyErrorCode","assignStringVariables","values","queryParams","serializeObjectConfigsToHeaders","ACL","CacheControl","ContentDisposition","ContentLanguage","ContentEncoding","ContentType","expires","Expires","toUTCString","Tagging","serializeMetadata","Metadata","metadata","suffix","serializePathnameObjectKey","validateS3RequiredParameter","paramName","Unknown","IntegrityError","validateObjectUrl","objectURL","bucketWithDots","encodedBucketName","encodedKey","isPathStyleUrl","isSubdomainUrl","hostname","globalExists","global","windowExists","window","documentExists","document","processExists","process","keyPrefixMatch","object","find","detectionMap","platform","Expo","detectionMethod","expo","ReactNative","navigator","product","NextJs","Nuxt","__NUXT__","$nuxt","Angular","angularVersionSetInDocument","Boolean","querySelector","angularContentSetInWindow","ng","React","elementKeyPrefixedWithReact","querySelectorAll","some","element","VueJs","Svelte","WebUnknown","NextJsSSR","NuxtSSR","__NUXT_PATHS__","ReactSSR","env","VueJsSSR","AngularSSR","npm_lifecycle_script","SvelteSSR","frameworkCache","frameworkChangeObservers","resetTriggered","detectFramework","detectionEntry","ServerSideUnknown","fcn","resetTimeout","framework","customUserAgentState","BASE_USER_AGENT","sanitizeAmplifyVersion","amplifyVersion","userAgent","isReactNative","observeFrameworkChanges","getAmplifyUserAgent","customUserAgentDetails","category","action","customState","api","additionalDetails","getCustomUserAgent","getAmplifyUserAgentObject","agentKey","agentValue","defaultPartition","id","outputs","dnsSuffix","regionRegex","regions","partitionsInfo","partitions","getDnsSuffix","regex","RegExp","DEFAULT_MAX_DELAY_MS","parser","xmlStr","xml","DOMParser","parseFromString","parsedObj","parseXmlNode","node","isDocumentNode","documentElement","nodeName","nodeType","Node","TEXT_NODE","nodeValue","isElementNode","isTextOnlyElementNode","childNodes","attr","attributes","isNamespaceAttributeName","children","child","childValue","childName","ELEMENT_NODE","DOCUMENT_NODE","hasOnlyNamespaceAttributes","firstChild","parseXmlBody","CLOCK_SKEW_ERROR_CODES","THROTTLING_ERROR_CODES","TIMEOUT_ERROR_CODES","isThrottlingError","errorCode","isConnectionError","NetworkError","isServerSideError","INVALID_TOKEN_ERROR_CODES","DOMAIN_PATTERN","IP_ADDRESS_PATTERN","DOTS_PATTERN","parseXmlError","noErrorWrapping","errorLocation","code","Code","Message","createXmlErrorParser","errorParser","middlewareContext","defaultRetryDecider","parsedError","isClockSkewError","getRetryDecider","defaultRetryDecision","errorMessage","isExpiredTokenError","isExpiredSignatureError","Bucket","attempt","delayFunction","maxDelayMs","random","jitteredBackoff","putObject","ContentMD5","ExpectedBucketOwner","IfNoneMatch","Key","Body","VersionId","getStorageUserAgentValue","hexToUint8Array","hexString","match","h","parseInt","hexToBase64","CHUNK_SIZE","calculateContentCRC32","internalSeed","uint8Array","offset","end","min","chunk","crc32","size","arrayBuffer","hex","padStart","checksumArrayBuffer","checksum","constructContentDisposition","contentDisposition","type","filename","isNil","bothNilOrEqual","original","output","isObject","isEqual","other","every","ix","objectKeys","otherKeys","INVALID_PARAMETER_ERROR_MSG","serializeCompletedPartList","completeMultipartUpload","UploadId","search","uploadId","MultipartUpload","Parts","serializeCompletedMultipartUpload","parsedXML","mappedCompletedMultipartUpload","validateMultipartUploadXML","parsed","parseXmlBodyOrThrow","contents","Location","abortMultipartUpload","headObject","ContentLength","LastModified","uploadPart","partNumber","uploadPartExecutor","dataChunkerGenerator","completedPartNumberSet","finalKey","onPartUploadCompletion","onProgress","useCRC32Checksum","expectedBucketOwner","has","checksumCRC32","contentMD5","eTag","currentPartTransferredBytes","listParts","listCachedUploadTasks","resumableUploadsCache","JSON","getItem","getUploadsCacheKey","contentType","optionsHash","levelStr","baseId","lastModified","removeCachedUpload","cacheKey","cachedUploads","setItem","stringify","createMultipartUpload","ChecksumAlgorithm","calculatePartSize","totalSize","partSize","partsCount","ceil","getDataChunker","helper","startByte","endByte","getMultipartUploadHandlers","uploadDataInput","resolveCallback","rejectCallback","inProgressUpload","resolvedS3Config","abortController","resolvedAccessLevel","resolvedBucket","resolvedKeyPrefix","resolvedIdentityId","uploadCacheKey","isAbortSignalFromPause","startUploadWithResumability","uploadDataOptions","resolvedS3Options","Amplify","AbortController","contentEncoding","preventOverwrite","resolveAccessLevel","cachedParts","finalCrc32","checksumAlgorithm","cachedUpload","File","cachedUploadParts","lastTouched","findCachedUploadParts","crc32List","dataChunker","totalLength","checkData","combinedArray","crc32Hash","getCombinedCrc32","fileMetadata","cacheMultipartUpload","fileName","loadOrCreateMultipartUpload","signal","completedParts","Set","concurrentUploadsProgressTracker","transferredBytesPerListener","getOnProgressListener","listenerIndex","getConcurrentUploadsProgressTracker","concurrentUploadPartExecutors","index","all","validateCompletedParts","UploadData","sortUploadParts","uploadedObjectSize","startUpload","catch","multipartUploadJob","cancelUpload","partsExpected","validPartCount","validPartNumbers","part","partA","partB","uploadData","dataByteLength","versionId","defaultStorage","getObjectSerializer","Range","getObject","DeleteMarker","AcceptRanges","Expiration","Restore","ChecksumCRC32C","ChecksumSHA1","ChecksumSHA256","MissingMeta","ContentRange","WebsiteRedirectLocation","ServerSideEncryption","SSECustomerAlgorithm","SSECustomerKeyMD5","SSEKMSKeyId","BucketKeyEnabled","StorageClass","RequestCharged","ReplicationStatus","PartsCount","TagCount","ObjectLockMode","ObjectLockRetainUntilDate","ObjectLockLegalHoldStatus","getPresignedGetObjectUrl","append","ResponseContentType","ResponseContentDisposition","key1","key2","localeCompare","expiration","presignedUrl","presignUrl","downloadData","downloadDataJob","downloadDataInput","downloadDataOptions","DownloadData","bytesRange","start","deleteObject","remove","Remove","urlDecode","decodeURIComponent","deserializeCommonPrefixList","deserializeCommonPrefix","Prefix","deserializeObjectList","deserializeObject","deserializeChecksumAlgorithmList","Size","Owner","deserializeOwner","DisplayName","ID","listObjectsV2","RequestPayer","query","ContinuationToken","delimiter","Delimiter","EncodingType","FetchOwner","MaxKeys","StartAfter","CommonPrefixes","Contents","IsTruncated","KeyCount","Name","NextContinuationToken","validTruncation","validNumberOfKeysReturned","validateCorroboratingElements","MAX_PAGE_SIZE","list","generatedPrefix","_isInputWithPath","validateStorageOperationInputWithPrefix","listAll","pageSize","nextToken","anyOptions","listParams","getDelimiter","listInputArgs","_listAllWithPrefix","_listAllWithPath","_listWithPrefix","_listWithPath","listResult","continuationToken","items","pageResults","pageNextToken","listParamsClone","List","listOutput","decodeEncodedElements","validateEchoedElements","substring","excludedSubpaths","pageExcludedSubpaths","nextContinuationToken","commonPrefixes","mapCommonPrefixesToExcludedSubpaths","mappedSubpaths","subpathStrategy","strategy","listInput","decodedListOutput","getProperties","GetProperties","copyObject","CopySource","MetadataDirective","CopySourceIfMatch","CopySourceIfUnmodifiedSince","ExpectedSourceBucketOwner","validation","validateCopyObjectHeaders","storageBucketAssertion","sourceBucket","destBucket","copy","isCopyInputWithPath","copyWithPath","copyWithKey","sourcePath","destinationPath","finalCopySource","finalCopyDestination","serviceCopy","notModifiedSince","expectedSourceBucketOwner","sourceKeyPrefix","destinationKeyPrefix","Copy","getUrl","getUrlOptions","validateObjectExistence","GetUrl","urlExpirationInSec","expiresIn","resolvedCredential","awsCredExpiration","awsCredExpirationInSec","MAX_URL_EXPIRATION","expiresAt"],"sourceRoot":""}