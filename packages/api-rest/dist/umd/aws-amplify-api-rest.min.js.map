{"version":3,"file":"aws-amplify-api-rest.min.js","mappings":"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","sources":["webpack:///webpack/universalModuleDefinition","webpack:///external umd \"aws_amplify_core\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./node_modules/@aws-amplify/core/dist/esm/errors/AmplifyError.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/errors/APIError.mjs","webpack:///./dist/esm/errors/RestApiError.mjs","webpack:///./dist/esm/errors/CanceledError.mjs","webpack:///./dist/esm/errors/validation.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/serde/responseInfo.mjs","webpack:///./dist/esm/utils/serviceError.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/serde/json.mjs","webpack:///./dist/esm/utils/logger.mjs","webpack:///./dist/esm/utils/constants.mjs","webpack:///./dist/esm/utils/parseSigningInfo.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/utils/amplifyUrl/index.mjs","webpack:///./dist/esm/utils/isIamAuthApplicable.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/types/errors.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/isClockSkewError.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/defaultRetryDecider.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/jitteredBackoff.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/utils/retry/jitteredBackoff.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/utils/retry/constants.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/middleware.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getSignedHeaders.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/constants.mjs","webpack:///./node_modules/tslib/tslib.es6.mjs","webpack:///./node_modules/@aws-crypto/sha256-js/build/module/constants.js","webpack:///./node_modules/@aws-crypto/sha256-js/build/module/RawSha256.js","webpack:///./node_modules/@aws-crypto/util/build/module/convertToBuffer.js","webpack:///./node_modules/@aws-crypto/util/node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js","webpack:///./node_modules/@aws-crypto/sha256-js/build/module/jsSha256.js","webpack:///./node_modules/@aws-crypto/util/build/module/isEmptyData.js","webpack:///./node_modules/@smithy/util-hex-encoding/dist-es/index.js","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/dataHashHelpers.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalHeaders.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalQueryString.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalUri.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getHashedPayload.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/utils/getSkewCorrectedDate.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/userAgent/middleware.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/internal/composeTransferHandler.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/utils/memoization.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/handlers/fetch.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/handlers/authenticated.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/middleware.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/signRequest.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getSigningValues.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getFormattedDates.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCredentialScope.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getSignature.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalRequest.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getStringToSign.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getSigningKey.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/utils/getUpdatedSystemClockOffset.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/utils/isClockSkewed.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/handlers/unauthenticated.mjs","webpack:///./dist/esm/apis/common/handler.mjs","webpack:///./dist/esm/apis/common/publicApis.mjs","webpack:///./dist/esm/utils/createCancellableOperation.mjs","webpack:///./dist/esm/utils/resolveApiUrl.mjs","webpack:///./dist/esm/errors/assertValidatonError.mjs","webpack:///./dist/esm/utils/resolveHeaders.mjs","webpack:///./dist/esm/apis/index.mjs"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"aws_amplify_core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"aws_amplify_api-rest\", [\"aws_amplify_core\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"aws_amplify_api-rest\"] = factory(require(\"aws_amplify_core\"));\n\telse\n\t\troot[\"aws_amplify_api-rest\"] = factory(root[\"aws_amplify_core\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__556__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__556__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass AmplifyError extends Error {\n    /**\n     *  Constructs an AmplifyError.\n     *\n     * @param message text that describes the main problem.\n     * @param underlyingError the underlying cause of the error.\n     * @param recoverySuggestion suggestion to recover from the error.\n     *\n     */\n    constructor({ message, name, recoverySuggestion, underlyingError, }) {\n        super(message);\n        this.name = name;\n        this.underlyingError = underlyingError;\n        this.recoverySuggestion = recoverySuggestion;\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AmplifyError;\n        Object.setPrototypeOf(this, AmplifyError.prototype);\n    }\n}\n\nexport { AmplifyError };\n//# sourceMappingURL=AmplifyError.mjs.map\n","import { AmplifyError } from './AmplifyError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Error class for errors that associated with unsuccessful HTTP responses.\n * It's throw by API category REST API handlers and GraphQL query handlers for now.\n */\nclass ApiError extends AmplifyError {\n    /**\n     * The unwrapped HTTP response causing the given API error.\n     */\n    get response() {\n        return this._response\n            ? replicateApiErrorResponse(this._response)\n            : undefined;\n    }\n    constructor(params) {\n        super(params);\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = ApiError;\n        Object.setPrototypeOf(this, ApiError.prototype);\n        if (params.response) {\n            this._response = params.response;\n        }\n    }\n}\nconst replicateApiErrorResponse = (response) => ({\n    ...response,\n    headers: { ...response.headers },\n});\n\nexport { ApiError };\n//# sourceMappingURL=APIError.mjs.map\n","import { ApiError } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass RestApiError extends ApiError {\n    constructor(params) {\n        super(params);\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = RestApiError;\n        Object.setPrototypeOf(this, RestApiError.prototype);\n    }\n}\n\nexport { RestApiError };\n//# sourceMappingURL=RestApiError.mjs.map\n","import { RestApiError } from './RestApiError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Internal-only class for CanceledError.\n *\n * @internal\n */\nclass CanceledError extends RestApiError {\n    constructor(params = {}) {\n        super({\n            name: 'CanceledError',\n            message: 'Request is canceled by user',\n            ...params,\n        });\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = CanceledError;\n        Object.setPrototypeOf(this, CanceledError.prototype);\n    }\n}\n/**\n * Check if an error is caused by user calling `cancel()` in REST API.\n *\n * @note This function works **ONLY** for errors thrown by REST API. For GraphQL APIs, use `client.isCancelError(error)`\n *   instead. `client` is generated from  `generateClient()` API from `aws-amplify/api`.\n *\n * @param {unknown} error The unknown exception to be checked.\n * @returns - A boolean indicating if the error was from an upload cancellation\n */\nconst isCancelError = (error) => !!error && error instanceof CanceledError;\n\nexport { CanceledError, isCancelError };\n//# sourceMappingURL=CanceledError.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar RestApiValidationErrorCode;\n(function (RestApiValidationErrorCode) {\n    RestApiValidationErrorCode[\"InvalidApiName\"] = \"InvalidApiName\";\n})(RestApiValidationErrorCode || (RestApiValidationErrorCode = {}));\nconst validationErrorMap = {\n    [RestApiValidationErrorCode.InvalidApiName]: {\n        message: 'API name is invalid.',\n        recoverySuggestion: 'Check if the API name matches the one in your configuration or `aws-exports.js`',\n    },\n};\n\nexport { RestApiValidationErrorCode, validationErrorMap };\n//# sourceMappingURL=validation.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst parseMetadata = (response) => {\n    const { headers, statusCode } = response;\n    return {\n        ...(isMetadataBearer(response) ? response.$metadata : {}),\n        httpStatusCode: statusCode,\n        requestId: headers['x-amzn-requestid'] ??\n            headers['x-amzn-request-id'] ??\n            headers['x-amz-request-id'],\n        extendedRequestId: headers['x-amz-id-2'],\n        cfId: headers['x-amz-cf-id'],\n    };\n};\nconst isMetadataBearer = (response) => typeof response?.$metadata === 'object';\n\nexport { parseMetadata };\n//# sourceMappingURL=responseInfo.mjs.map\n","import { parseJsonError } from '@aws-amplify/core/internals/aws-client-utils';\nimport { RestApiError } from '../errors/RestApiError.mjs';\nimport '../errors/validation.mjs';\n\n/**\n * Parses both AWS and non-AWS error responses coming from the users' backend code.\n * * AWS errors generated by the AWS services(e.g. API Gateway, Bedrock). They can be Signature errors,\n *   ClockSkew errors, etc. These responses will be parsed to errors with proper name and message from the AWS\n *   services.\n * * non-AWS errors thrown by the user code. They can contain any headers or body. Users need to access the\n *   error.response to get the headers and body and parse them accordingly. The JS error name and message will\n *   be `UnknownError` and `Unknown error` respectively.\n */\nconst parseRestApiServiceError = async (response) => {\n    if (!response) {\n        // Response is not considered an error.\n        return;\n    }\n    const parsedAwsError = await parseJsonError(stubErrorResponse(response));\n    if (!parsedAwsError) ;\n    else {\n        const bodyText = await response.body?.text();\n        return buildRestApiError(parsedAwsError, {\n            statusCode: response.statusCode,\n            headers: response.headers,\n            body: bodyText,\n        });\n    }\n};\n/**\n * The response object needs to be stub here because the parseAwsJsonError assumes the response body to be valid JSON.\n * Although this is true for AWS services, it is not true for responses from user's code. Once the response body is\n * unwrapped as JSON(and fail), it cannot be read as text again. Therefore, we need to stub the response body here to\n * make sure we can read the error response body as a JSON, and may fall back to read as text if it is not a valid JSON.\n */\nconst stubErrorResponse = (response) => {\n    let bodyTextPromise;\n    const bodyProxy = new Proxy(response.body, {\n        get(target, prop, receiver) {\n            if (prop === 'json') {\n                // For potential AWS errors, error parser will try to parse the body as JSON first.\n                return async () => {\n                    if (!bodyTextPromise) {\n                        bodyTextPromise = target.text();\n                    }\n                    try {\n                        return JSON.parse(await bodyTextPromise);\n                    }\n                    catch (error) {\n                        // If response body is not a valid JSON, we stub it to be an empty object and eventually parsed\n                        // as an unknown error\n                        return {};\n                    }\n                };\n            }\n            else if (prop === 'text') {\n                // For non-AWS errors, users can access the body as a string as a fallback.\n                return async () => {\n                    if (!bodyTextPromise) {\n                        bodyTextPromise = target.text();\n                    }\n                    return bodyTextPromise;\n                };\n            }\n            else {\n                return Reflect.get(target, prop, receiver);\n            }\n        },\n    });\n    const responseProxy = new Proxy(response, {\n        get(target, prop, receiver) {\n            if (prop === 'body') {\n                return bodyProxy;\n            }\n            else {\n                return Reflect.get(target, prop, receiver);\n            }\n        },\n    });\n    return responseProxy;\n};\n/**\n * Utility to create a new RestApiError from a service error.\n */\nconst buildRestApiError = (error, response) => {\n    const restApiError = new RestApiError({\n        name: error?.name,\n        message: error.message,\n        underlyingError: error,\n        response,\n    });\n    // $metadata is only required for backwards compatibility.\n    return Object.assign(restApiError, { $metadata: error.$metadata });\n};\n\nexport { parseRestApiServiceError };\n//# sourceMappingURL=serviceError.mjs.map\n","import { parseMetadata } from './responseInfo.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Utility functions for serializing and deserializing of JSON protocol in general(including: REST-JSON, JSON-RPC, etc.)\n */\n/**\n * Error parser for AWS JSON protocol.\n */\nconst parseJsonError = async (response) => {\n    if (!response || response.statusCode < 300) {\n        return;\n    }\n    const body = await parseJsonBody(response);\n    const sanitizeErrorCode = (rawValue) => {\n        const [cleanValue] = rawValue.toString().split(/[,:]+/);\n        if (cleanValue.includes('#')) {\n            return cleanValue.split('#')[1];\n        }\n        return cleanValue;\n    };\n    const code = sanitizeErrorCode(response.headers['x-amzn-errortype'] ??\n        body.code ??\n        body.__type ??\n        'UnknownError');\n    const message = body.message ?? body.Message ?? 'Unknown error';\n    const error = new Error(message);\n    return Object.assign(error, {\n        name: code,\n        $metadata: parseMetadata(response),\n    });\n};\n/**\n * Parse JSON response body to JavaScript object.\n */\nconst parseJsonBody = async (response) => {\n    if (!response.body) {\n        throw new Error('Missing response payload');\n    }\n    const output = await response.body.json();\n    return Object.assign(output, {\n        $metadata: parseMetadata(response),\n    });\n};\n\nexport { parseJsonBody, parseJsonError };\n//# sourceMappingURL=json.mjs.map\n","import { ConsoleLogger } from '@aws-amplify/core';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('RestApis');\n\nexport { logger };\n//# sourceMappingURL=logger.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst DEFAULT_REST_IAM_SIGNING_SERVICE = 'execute-api';\nconst DEFAULT_APPSYNC_API_SERVICE = 'appsync-api';\nconst DEFAULT_IAM_SIGNING_REGION = 'us-east-1';\n/**\n * The REST endpoints generated by API Gateway\n * @see {@link https://docs.aws.amazon.com/general/latest/gr/apigateway.html#apigateway_region_data_plane}\n */\nconst APIG_HOSTNAME_PATTERN = /^.+\\.([a-z0-9-]+)\\.([a-z0-9-]+)\\.amazonaws\\.com/;\n\nexport { APIG_HOSTNAME_PATTERN, DEFAULT_APPSYNC_API_SERVICE, DEFAULT_IAM_SIGNING_REGION, DEFAULT_REST_IAM_SIGNING_SERVICE };\n//# sourceMappingURL=constants.mjs.map\n","import { DEFAULT_REST_IAM_SIGNING_SERVICE, DEFAULT_IAM_SIGNING_REGION, APIG_HOSTNAME_PATTERN } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Infer the signing service and region from the given URL, and for REST API only, from the Amplify configuration.\n * It supports raw API Gateway endpoint and AppSync endpoint.\n *\n * @internal\n */\nconst parseSigningInfo = (url, restApiOptions) => {\n    const { service: signingService = DEFAULT_REST_IAM_SIGNING_SERVICE, region: signingRegion = DEFAULT_IAM_SIGNING_REGION, } = restApiOptions?.amplify.getConfig()?.API?.REST?.[restApiOptions?.apiName] ??\n        {};\n    const { hostname } = url;\n    const [, service, region] = APIG_HOSTNAME_PATTERN.exec(hostname) ?? [];\n    if (service === DEFAULT_REST_IAM_SIGNING_SERVICE) {\n        // The configured endpoint is an API Gateway endpoint\n        // @see: https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-call-api.html\n        return {\n            service,\n            region: region ?? signingRegion,\n        };\n    }\n    else if (service === 'appsync-api') {\n        // AppSync endpoint is internally supported because GraphQL operation will send request using POST handler.\n        // example: https://xxxx.appsync-api.us-east-1.amazonaws.com/graphql\n        return {\n            service: 'appsync',\n            region: region ?? signingRegion,\n        };\n    }\n    else {\n        return {\n            service: signingService,\n            region: signingRegion,\n        };\n    }\n};\n\nexport { parseSigningInfo };\n//# sourceMappingURL=parseSigningInfo.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst AmplifyUrl = URL;\nconst AmplifyUrlSearchParams = URLSearchParams;\n\nexport { AmplifyUrl, AmplifyUrlSearchParams };\n//# sourceMappingURL=index.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Determines if IAM authentication should be applied for a GraphQL request.\n *\n * This function checks the `headers` of the HTTP request to determine if IAM authentication\n * is applicable. IAM authentication is considered applicable if there is no `authorization`\n * header, no `x-api-key` header, and `signingServiceInfo` is provided.\n *\n * @param request - The HTTP request object containing headers.\n * @param signingServiceInfo - Optional signing service information,\n * including service and region.\n * @returns A boolean `true` if IAM authentication should be applied.\n *\n * @internal\n */\nconst isIamAuthApplicableForGraphQL = ({ headers }, signingServiceInfo) => !headers.authorization && !headers['x-api-key'] && !!signingServiceInfo;\n/**\n * Determines if IAM authentication should be applied for a REST request.\n *\n * This function checks the `headers` of the HTTP request to determine if IAM authentication\n * is applicable. IAM authentication is considered applicable if there is no `authorization`\n * header and `signingServiceInfo` is provided.\n *\n * @param request - The HTTP request object containing headers.\n * @param signingServiceInfo - Optional signing service information,\n * including service and region.\n * @returns A boolean `true` if IAM authentication should be applied.\n *\n * @internal\n */\nconst isIamAuthApplicableForRest = ({ headers }, signingServiceInfo) => !headers.authorization && !!signingServiceInfo;\n\nexport { isIamAuthApplicableForGraphQL, isIamAuthApplicableForRest };\n//# sourceMappingURL=isIamAuthApplicable.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar AmplifyErrorCode;\n(function (AmplifyErrorCode) {\n    AmplifyErrorCode[\"NoEndpointId\"] = \"NoEndpointId\";\n    AmplifyErrorCode[\"PlatformNotSupported\"] = \"PlatformNotSupported\";\n    AmplifyErrorCode[\"Unknown\"] = \"Unknown\";\n    AmplifyErrorCode[\"NetworkError\"] = \"NetworkError\";\n})(AmplifyErrorCode || (AmplifyErrorCode = {}));\n\nexport { AmplifyErrorCode };\n//# sourceMappingURL=errors.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// via https://github.com/aws/aws-sdk-js-v3/blob/ab0e7be36e7e7f8a0c04834357aaad643c7912c3/packages/service-error-classification/src/constants.ts#L8\nconst CLOCK_SKEW_ERROR_CODES = [\n    'AuthFailure',\n    'InvalidSignatureException',\n    'RequestExpired',\n    'RequestInTheFuture',\n    'RequestTimeTooSkewed',\n    'SignatureDoesNotMatch',\n    'BadRequestException', // API Gateway\n];\n/**\n * Given an error code, returns true if it is related to a clock skew error.\n *\n * @param errorCode String representation of some error.\n * @returns True if given error is present in `CLOCK_SKEW_ERROR_CODES`, false otherwise.\n *\n * @internal\n */\nconst isClockSkewError = (errorCode) => !!errorCode && CLOCK_SKEW_ERROR_CODES.includes(errorCode);\n\nexport { isClockSkewError };\n//# sourceMappingURL=isClockSkewError.mjs.map\n","import { AmplifyErrorCode } from '../../../types/errors.mjs';\nimport { isClockSkewError } from './isClockSkewError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Get retry decider function\n * @param errorParser Function to load JavaScript error from HTTP response\n */\nconst getRetryDecider = (errorParser) => async (response, error) => {\n    const parsedError = error ??\n        (await errorParser(response)) ??\n        undefined;\n    const errorCode = parsedError?.code || parsedError?.name;\n    const statusCode = response?.statusCode;\n    const isRetryable = isConnectionError(error) ||\n        isThrottlingError(statusCode, errorCode) ||\n        isClockSkewError(errorCode) ||\n        isServerSideError(statusCode, errorCode);\n    return {\n        retryable: isRetryable,\n    };\n};\n// reference: https://github.com/aws/aws-sdk-js-v3/blob/ab0e7be36e7e7f8a0c04834357aaad643c7912c3/packages/service-error-classification/src/constants.ts#L22-L37\nconst THROTTLING_ERROR_CODES = [\n    'BandwidthLimitExceeded',\n    'EC2ThrottledException',\n    'LimitExceededException',\n    'PriorRequestNotComplete',\n    'ProvisionedThroughputExceededException',\n    'RequestLimitExceeded',\n    'RequestThrottled',\n    'RequestThrottledException',\n    'SlowDown',\n    'ThrottledException',\n    'Throttling',\n    'ThrottlingException',\n    'TooManyRequestsException',\n];\nconst TIMEOUT_ERROR_CODES = [\n    'TimeoutError',\n    'RequestTimeout',\n    'RequestTimeoutException',\n];\nconst isThrottlingError = (statusCode, errorCode) => statusCode === 429 ||\n    (!!errorCode && THROTTLING_ERROR_CODES.includes(errorCode));\nconst isConnectionError = (error) => [\n    AmplifyErrorCode.NetworkError,\n    // TODO(vNext): unify the error code `ERR_NETWORK` used by the Storage XHR handler\n    'ERR_NETWORK',\n].includes(error?.name);\nconst isServerSideError = (statusCode, errorCode) => (!!statusCode && [500, 502, 503, 504].includes(statusCode)) ||\n    (!!errorCode && TIMEOUT_ERROR_CODES.includes(errorCode));\n\nexport { getRetryDecider };\n//# sourceMappingURL=defaultRetryDecider.mjs.map\n","import '../../../utils/getClientInfo/getClientInfo.mjs';\nimport { jitteredBackoff as jitteredBackoff$1 } from '../../../utils/retry/jitteredBackoff.mjs';\nimport '../../../utils/retry/retry.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO: [v6] The separate retry utility is used by Data packages now and will replaced by retry middleware.\nconst DEFAULT_MAX_DELAY_MS = 5 * 60 * 1000;\nconst jitteredBackoff = attempt => {\n    const delayFunction = jitteredBackoff$1(DEFAULT_MAX_DELAY_MS);\n    const delay = delayFunction(attempt);\n    // The delayFunction returns false when the delay is greater than the max delay(5 mins).\n    // In this case, the retry middleware will delay 5 mins instead, as a ceiling of the delay.\n    return delay === false ? DEFAULT_MAX_DELAY_MS : delay;\n};\n\nexport { jitteredBackoff };\n//# sourceMappingURL=jitteredBackoff.mjs.map\n","import { MAX_DELAY_MS } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @private\n * Internal use of Amplify only\n */\nfunction jitteredBackoff(maxDelayMs = MAX_DELAY_MS) {\n    const BASE_TIME_MS = 100;\n    const JITTER_FACTOR = 100;\n    return attempt => {\n        const delay = 2 ** attempt * BASE_TIME_MS + JITTER_FACTOR * Math.random();\n        return delay > maxDelayMs ? false : delay;\n    };\n}\n\nexport { jitteredBackoff };\n//# sourceMappingURL=jitteredBackoff.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst MAX_DELAY_MS = 5 * 60 * 1000;\n\nexport { MAX_DELAY_MS };\n//# sourceMappingURL=constants.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst DEFAULT_RETRY_ATTEMPTS = 3;\n/**\n * Retry middleware\n */\nconst retryMiddlewareFactory = ({ maxAttempts = DEFAULT_RETRY_ATTEMPTS, retryDecider, computeDelay, abortSignal, }) => {\n    if (maxAttempts < 1) {\n        throw new Error('maxAttempts must be greater than 0');\n    }\n    return (next, context) => async function retryMiddleware(request) {\n        let error;\n        let attemptsCount = context.attemptsCount ?? 0;\n        let response;\n        // When retry is not needed or max attempts is reached, either error or response will be set. This function handles either cases.\n        const handleTerminalErrorOrResponse = () => {\n            if (response) {\n                addOrIncrementMetadataAttempts(response, attemptsCount);\n                return response;\n            }\n            else {\n                addOrIncrementMetadataAttempts(error, attemptsCount);\n                throw error;\n            }\n        };\n        while (!abortSignal?.aborted && attemptsCount < maxAttempts) {\n            try {\n                response = await next(request);\n                error = undefined;\n            }\n            catch (e) {\n                error = e;\n                response = undefined;\n            }\n            // context.attemptsCount may be updated after calling next handler which may retry the request by itself.\n            attemptsCount =\n                (context.attemptsCount ?? 0) > attemptsCount\n                    ? (context.attemptsCount ?? 0)\n                    : attemptsCount + 1;\n            context.attemptsCount = attemptsCount;\n            const { isCredentialsExpiredError, retryable } = await retryDecider(response, error, context);\n            if (retryable) {\n                // Setting isCredentialsInvalid flag to notify signing middleware to forceRefresh credentials provider.\n                context.isCredentialsExpired = !!isCredentialsExpiredError;\n                if (!abortSignal?.aborted && attemptsCount < maxAttempts) {\n                    // prevent sleep for last attempt or cancelled request;\n                    const delay = computeDelay(attemptsCount);\n                    await cancellableSleep(delay, abortSignal);\n                }\n                continue;\n            }\n            else {\n                return handleTerminalErrorOrResponse();\n            }\n        }\n        if (abortSignal?.aborted) {\n            throw new Error('Request aborted.');\n        }\n        else {\n            return handleTerminalErrorOrResponse();\n        }\n    };\n};\nconst cancellableSleep = (timeoutMs, abortSignal) => {\n    if (abortSignal?.aborted) {\n        return Promise.resolve();\n    }\n    let timeoutId;\n    let sleepPromiseResolveFn;\n    const sleepPromise = new Promise(resolve => {\n        sleepPromiseResolveFn = resolve;\n        timeoutId = setTimeout(resolve, timeoutMs);\n    });\n    abortSignal?.addEventListener('abort', function cancelSleep(_) {\n        clearTimeout(timeoutId);\n        abortSignal?.removeEventListener('abort', cancelSleep);\n        sleepPromiseResolveFn();\n    });\n    return sleepPromise;\n};\nconst addOrIncrementMetadataAttempts = (nextHandlerOutput, attempts) => {\n    if (Object.prototype.toString.call(nextHandlerOutput) !== '[object Object]') {\n        return;\n    }\n    nextHandlerOutput.$metadata = {\n        ...(nextHandlerOutput.$metadata ?? {}),\n        attempts,\n    };\n};\n\nexport { retryMiddlewareFactory };\n//# sourceMappingURL=middleware.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns signed headers.\n *\n * @param headers `headers` from the request.\n * @returns List of headers included in canonical headers, separated by semicolons (;). This indicates which headers\n * are part of the signing process. Header names must use lowercase characters and must appear in alphabetical order.\n *\n * @internal\n */\nconst getSignedHeaders = (headers) => Object.keys(headers)\n    .map(key => key.toLowerCase())\n    .sort()\n    .join(';');\n\nexport { getSignedHeaders };\n//# sourceMappingURL=getSignedHeaders.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// query params\nconst ALGORITHM_QUERY_PARAM = 'X-Amz-Algorithm';\nconst AMZ_DATE_QUERY_PARAM = 'X-Amz-Date';\nconst CREDENTIAL_QUERY_PARAM = 'X-Amz-Credential';\nconst EXPIRES_QUERY_PARAM = 'X-Amz-Expires';\nconst REGION_SET_PARAM = 'X-Amz-Region-Set';\nconst SIGNATURE_QUERY_PARAM = 'X-Amz-Signature';\nconst SIGNED_HEADERS_QUERY_PARAM = 'X-Amz-SignedHeaders';\nconst TOKEN_QUERY_PARAM = 'X-Amz-Security-Token';\n// headers\nconst AUTH_HEADER = 'authorization';\nconst HOST_HEADER = 'host';\nconst AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\nconst TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\n// identifiers\nconst KEY_TYPE_IDENTIFIER = 'aws4_request';\nconst SHA256_ALGORITHM_IDENTIFIER = 'AWS4-HMAC-SHA256';\nconst SIGNATURE_IDENTIFIER = 'AWS4';\n// preset values\nconst EMPTY_HASH = 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855';\nconst UNSIGNED_PAYLOAD = 'UNSIGNED-PAYLOAD';\n\nexport { ALGORITHM_QUERY_PARAM, AMZ_DATE_HEADER, AMZ_DATE_QUERY_PARAM, AUTH_HEADER, CREDENTIAL_QUERY_PARAM, EMPTY_HASH, EXPIRES_QUERY_PARAM, HOST_HEADER, KEY_TYPE_IDENTIFIER, REGION_SET_PARAM, SHA256_ALGORITHM_IDENTIFIER, SIGNATURE_IDENTIFIER, SIGNATURE_QUERY_PARAM, SIGNED_HEADERS_QUERY_PARAM, TOKEN_HEADER, TOKEN_QUERY_PARAM, UNSIGNED_PAYLOAD };\n//# sourceMappingURL=constants.mjs.map\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","/**\n * @internal\n */\nexport var BLOCK_SIZE = 64;\n/**\n * @internal\n */\nexport var DIGEST_LENGTH = 32;\n/**\n * @internal\n */\nexport var KEY = new Uint32Array([\n    0x428a2f98,\n    0x71374491,\n    0xb5c0fbcf,\n    0xe9b5dba5,\n    0x3956c25b,\n    0x59f111f1,\n    0x923f82a4,\n    0xab1c5ed5,\n    0xd807aa98,\n    0x12835b01,\n    0x243185be,\n    0x550c7dc3,\n    0x72be5d74,\n    0x80deb1fe,\n    0x9bdc06a7,\n    0xc19bf174,\n    0xe49b69c1,\n    0xefbe4786,\n    0x0fc19dc6,\n    0x240ca1cc,\n    0x2de92c6f,\n    0x4a7484aa,\n    0x5cb0a9dc,\n    0x76f988da,\n    0x983e5152,\n    0xa831c66d,\n    0xb00327c8,\n    0xbf597fc7,\n    0xc6e00bf3,\n    0xd5a79147,\n    0x06ca6351,\n    0x14292967,\n    0x27b70a85,\n    0x2e1b2138,\n    0x4d2c6dfc,\n    0x53380d13,\n    0x650a7354,\n    0x766a0abb,\n    0x81c2c92e,\n    0x92722c85,\n    0xa2bfe8a1,\n    0xa81a664b,\n    0xc24b8b70,\n    0xc76c51a3,\n    0xd192e819,\n    0xd6990624,\n    0xf40e3585,\n    0x106aa070,\n    0x19a4c116,\n    0x1e376c08,\n    0x2748774c,\n    0x34b0bcb5,\n    0x391c0cb3,\n    0x4ed8aa4a,\n    0x5b9cca4f,\n    0x682e6ff3,\n    0x748f82ee,\n    0x78a5636f,\n    0x84c87814,\n    0x8cc70208,\n    0x90befffa,\n    0xa4506ceb,\n    0xbef9a3f7,\n    0xc67178f2\n]);\n/**\n * @internal\n */\nexport var INIT = [\n    0x6a09e667,\n    0xbb67ae85,\n    0x3c6ef372,\n    0xa54ff53a,\n    0x510e527f,\n    0x9b05688c,\n    0x1f83d9ab,\n    0x5be0cd19\n];\n/**\n * @internal\n */\nexport var MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1;\n//# sourceMappingURL=constants.js.map","import { BLOCK_SIZE, DIGEST_LENGTH, INIT, KEY, MAX_HASHABLE_LENGTH } from \"./constants\";\n/**\n * @internal\n */\nvar RawSha256 = /** @class */ (function () {\n    function RawSha256() {\n        this.state = Int32Array.from(INIT);\n        this.temp = new Int32Array(64);\n        this.buffer = new Uint8Array(64);\n        this.bufferLength = 0;\n        this.bytesHashed = 0;\n        /**\n         * @internal\n         */\n        this.finished = false;\n    }\n    RawSha256.prototype.update = function (data) {\n        if (this.finished) {\n            throw new Error(\"Attempted to update an already finished hash.\");\n        }\n        var position = 0;\n        var byteLength = data.byteLength;\n        this.bytesHashed += byteLength;\n        if (this.bytesHashed * 8 > MAX_HASHABLE_LENGTH) {\n            throw new Error(\"Cannot hash more than 2^53 - 1 bits\");\n        }\n        while (byteLength > 0) {\n            this.buffer[this.bufferLength++] = data[position++];\n            byteLength--;\n            if (this.bufferLength === BLOCK_SIZE) {\n                this.hashBuffer();\n                this.bufferLength = 0;\n            }\n        }\n    };\n    RawSha256.prototype.digest = function () {\n        if (!this.finished) {\n            var bitsHashed = this.bytesHashed * 8;\n            var bufferView = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);\n            var undecoratedLength = this.bufferLength;\n            bufferView.setUint8(this.bufferLength++, 0x80);\n            // Ensure the final block has enough room for the hashed length\n            if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n                for (var i = this.bufferLength; i < BLOCK_SIZE; i++) {\n                    bufferView.setUint8(i, 0);\n                }\n                this.hashBuffer();\n                this.bufferLength = 0;\n            }\n            for (var i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n                bufferView.setUint8(i, 0);\n            }\n            bufferView.setUint32(BLOCK_SIZE - 8, Math.floor(bitsHashed / 0x100000000), true);\n            bufferView.setUint32(BLOCK_SIZE - 4, bitsHashed);\n            this.hashBuffer();\n            this.finished = true;\n        }\n        // The value in state is little-endian rather than big-endian, so flip\n        // each word into a new Uint8Array\n        var out = new Uint8Array(DIGEST_LENGTH);\n        for (var i = 0; i < 8; i++) {\n            out[i * 4] = (this.state[i] >>> 24) & 0xff;\n            out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n            out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n            out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n        }\n        return out;\n    };\n    RawSha256.prototype.hashBuffer = function () {\n        var _a = this, buffer = _a.buffer, state = _a.state;\n        var state0 = state[0], state1 = state[1], state2 = state[2], state3 = state[3], state4 = state[4], state5 = state[5], state6 = state[6], state7 = state[7];\n        for (var i = 0; i < BLOCK_SIZE; i++) {\n            if (i < 16) {\n                this.temp[i] =\n                    ((buffer[i * 4] & 0xff) << 24) |\n                        ((buffer[i * 4 + 1] & 0xff) << 16) |\n                        ((buffer[i * 4 + 2] & 0xff) << 8) |\n                        (buffer[i * 4 + 3] & 0xff);\n            }\n            else {\n                var u = this.temp[i - 2];\n                var t1_1 = ((u >>> 17) | (u << 15)) ^ ((u >>> 19) | (u << 13)) ^ (u >>> 10);\n                u = this.temp[i - 15];\n                var t2_1 = ((u >>> 7) | (u << 25)) ^ ((u >>> 18) | (u << 14)) ^ (u >>> 3);\n                this.temp[i] =\n                    ((t1_1 + this.temp[i - 7]) | 0) + ((t2_1 + this.temp[i - 16]) | 0);\n            }\n            var t1 = ((((((state4 >>> 6) | (state4 << 26)) ^\n                ((state4 >>> 11) | (state4 << 21)) ^\n                ((state4 >>> 25) | (state4 << 7))) +\n                ((state4 & state5) ^ (~state4 & state6))) |\n                0) +\n                ((state7 + ((KEY[i] + this.temp[i]) | 0)) | 0)) |\n                0;\n            var t2 = ((((state0 >>> 2) | (state0 << 30)) ^\n                ((state0 >>> 13) | (state0 << 19)) ^\n                ((state0 >>> 22) | (state0 << 10))) +\n                ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) |\n                0;\n            state7 = state6;\n            state6 = state5;\n            state5 = state4;\n            state4 = (state3 + t1) | 0;\n            state3 = state2;\n            state2 = state1;\n            state1 = state0;\n            state0 = (t1 + t2) | 0;\n        }\n        state[0] += state0;\n        state[1] += state1;\n        state[2] += state2;\n        state[3] += state3;\n        state[4] += state4;\n        state[5] += state5;\n        state[6] += state6;\n        state[7] += state7;\n    };\n    return RawSha256;\n}());\nexport { RawSha256 };\n//# sourceMappingURL=RawSha256.js.map","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { fromUtf8 as fromUtf8Browser } from \"@smithy/util-utf8\";\n// Quick polyfill\nvar fromUtf8 = typeof Buffer !== \"undefined\" && Buffer.from\n    ? function (input) { return Buffer.from(input, \"utf8\"); }\n    : fromUtf8Browser;\nexport function convertToBuffer(data) {\n    // Already a Uint8, do nothing\n    if (data instanceof Uint8Array)\n        return data;\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n}\n//# sourceMappingURL=convertToBuffer.js.map","export const fromUtf8 = (input) => new TextEncoder().encode(input);\n","import { __awaiter, __generator } from \"tslib\";\nimport { BLOCK_SIZE } from \"./constants\";\nimport { RawSha256 } from \"./RawSha256\";\nimport { isEmptyData, convertToBuffer } from \"@aws-crypto/util\";\nvar Sha256 = /** @class */ (function () {\n    function Sha256(secret) {\n        this.secret = secret;\n        this.hash = new RawSha256();\n        this.reset();\n    }\n    Sha256.prototype.update = function (toHash) {\n        if (isEmptyData(toHash) || this.error) {\n            return;\n        }\n        try {\n            this.hash.update(convertToBuffer(toHash));\n        }\n        catch (e) {\n            this.error = e;\n        }\n    };\n    /* This synchronous method keeps compatibility\n     * with the v2 aws-sdk.\n     */\n    Sha256.prototype.digestSync = function () {\n        if (this.error) {\n            throw this.error;\n        }\n        if (this.outer) {\n            if (!this.outer.finished) {\n                this.outer.update(this.hash.digest());\n            }\n            return this.outer.digest();\n        }\n        return this.hash.digest();\n    };\n    /* The underlying digest method here is synchronous.\n     * To keep the same interface with the other hash functions\n     * the default is to expose this as an async method.\n     * However, it can sometimes be useful to have a sync method.\n     */\n    Sha256.prototype.digest = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.digestSync()];\n            });\n        });\n    };\n    Sha256.prototype.reset = function () {\n        this.hash = new RawSha256();\n        if (this.secret) {\n            this.outer = new RawSha256();\n            var inner = bufferFromSecret(this.secret);\n            var outer = new Uint8Array(BLOCK_SIZE);\n            outer.set(inner);\n            for (var i = 0; i < BLOCK_SIZE; i++) {\n                inner[i] ^= 0x36;\n                outer[i] ^= 0x5c;\n            }\n            this.hash.update(inner);\n            this.outer.update(outer);\n            // overwrite the copied key in memory\n            for (var i = 0; i < inner.byteLength; i++) {\n                inner[i] = 0;\n            }\n        }\n    };\n    return Sha256;\n}());\nexport { Sha256 };\nfunction bufferFromSecret(secret) {\n    var input = convertToBuffer(secret);\n    if (input.byteLength > BLOCK_SIZE) {\n        var bufferHash = new RawSha256();\n        bufferHash.update(input);\n        input = bufferHash.digest();\n    }\n    var buffer = new Uint8Array(BLOCK_SIZE);\n    buffer.set(input);\n    return buffer;\n}\n//# sourceMappingURL=jsSha256.js.map","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function isEmptyData(data) {\n    if (typeof data === \"string\") {\n        return data.length === 0;\n    }\n    return data.byteLength === 0;\n}\n//# sourceMappingURL=isEmptyData.js.map","const SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nexport function fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexport function toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\n","import { Sha256 } from '@aws-crypto/sha256-js';\nimport { toHex } from '@smithy/util-hex-encoding';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO: V6 update to different crypto dependency?\n/**\n * Returns the hashed data a `Uint8Array`.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns `Uint8Array` created from the data as input to a hash function.\n */\nconst getHashedData = (key, data) => {\n    const sha256 = new Sha256(key ?? undefined);\n    sha256.update(data);\n    // TODO: V6 flip to async digest\n    const hashedData = sha256.digestSync();\n    return hashedData;\n};\n/**\n * Returns the hashed data as a hex string.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns String using lowercase hexadecimal characters created from the data as input to a hash function.\n *\n * @internal\n */\nconst getHashedDataAsHex = (key, data) => {\n    const hashedData = getHashedData(key, data);\n    return toHex(hashedData);\n};\n\nexport { getHashedData, getHashedDataAsHex };\n//# sourceMappingURL=dataHashHelpers.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns canonical headers.\n *\n * @param headers Headers from the request.\n * @returns Request headers that will be signed, and their values, separated by newline characters. Header names must\n * use lowercase characters, must appear in alphabetical order, and must be followed by a colon (:). For the values,\n * trim any leading or trailing spaces, convert sequential spaces to a single space, and separate the values\n * for a multi-value header using commas.\n *\n * @internal\n */\nconst getCanonicalHeaders = (headers) => Object.entries(headers)\n    .map(([key, value]) => ({\n    key: key.toLowerCase(),\n    value: value?.trim().replace(/\\s+/g, ' ') ?? '',\n}))\n    .sort((a, b) => (a.key < b.key ? -1 : 1))\n    .map(entry => `${entry.key}:${entry.value}\\n`)\n    .join('');\n\nexport { getCanonicalHeaders };\n//# sourceMappingURL=getCanonicalHeaders.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a canonical query string.\n *\n * @param searchParams `searchParams` from the request url.\n * @returns URL-encoded query string parameters, separated by ampersands (&). Percent-encode reserved characters,\n * including the space character. Encode names and values separately. If there are empty parameters, append the equals\n * sign to the parameter name before encoding. After encoding, sort the parameters alphabetically by key name. If there\n * is no query string, use an empty string (\"\").\n *\n * @internal\n */\nconst getCanonicalQueryString = (searchParams) => Array.from(searchParams)\n    .sort(([keyA, valA], [keyB, valB]) => {\n    if (keyA === keyB) {\n        return valA < valB ? -1 : 1;\n    }\n    return keyA < keyB ? -1 : 1;\n})\n    .map(([key, val]) => `${escapeUri(key)}=${escapeUri(val)}`)\n    .join('&');\nconst escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n\nexport { getCanonicalQueryString };\n//# sourceMappingURL=getCanonicalQueryString.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a canonical uri.\n *\n * @param pathname `pathname` from request url.\n * @param uriEscapePath Whether to uri encode the path as part of canonical uri. It's used for S3 only where the\n *   pathname is already uri encoded, and the signing process is not expected to uri encode it again. Defaults to true.\n * @returns URI-encoded version of the absolute path component URL (everything between the host and the question mark\n * character (?) that starts the query string parameters). If the absolute path is empty, a forward slash character (/).\n *\n * @internal\n */\nconst getCanonicalUri = (pathname, uriEscapePath = true) => pathname\n    ? uriEscapePath\n        ? encodeURIComponent(pathname).replace(/%2F/g, '/')\n        : pathname\n    : '/';\n\nexport { getCanonicalUri };\n//# sourceMappingURL=getCanonicalUri.mjs.map\n","import { EMPTY_HASH, UNSIGNED_PAYLOAD } from '../constants.mjs';\nimport { getHashedDataAsHex } from './dataHashHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns the hashed payload.\n *\n * @param body `body` (payload) from the request.\n * @returns String created using the payload in the body of the HTTP request as input to a hash function. This string\n * uses lowercase hexadecimal characters. If the payload is empty, return precalculated result of an empty hash.\n *\n * @internal\n */\nconst getHashedPayload = (body) => {\n    // return precalculated empty hash if body is undefined or null\n    if (body == null) {\n        return EMPTY_HASH;\n    }\n    if (isSourceData(body)) {\n        const hashedData = getHashedDataAsHex(null, body);\n        return hashedData;\n    }\n    // Defined body is not signable. Return unsigned payload which may or may not be accepted by the service.\n    return UNSIGNED_PAYLOAD;\n};\nconst isSourceData = (body) => typeof body === 'string' || ArrayBuffer.isView(body) || isArrayBuffer(body);\nconst isArrayBuffer = (arg) => (typeof ArrayBuffer === 'function' && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === '[object ArrayBuffer]';\n\nexport { getHashedPayload };\n//# sourceMappingURL=getHashedPayload.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a `Date` that is corrected for clock skew.\n *\n * @param systemClockOffset The offset of the system clock in milliseconds.\n *\n * @returns `Date` representing the current time adjusted by the system clock offset.\n *\n * @internal\n */\nconst getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\n\nexport { getSkewCorrectedDate };\n//# sourceMappingURL=getSkewCorrectedDate.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Middleware injects user agent string to specified header(default to 'x-amz-user-agent'),\n * if the header is not set already.\n *\n * TODO: incorporate new user agent design\n */\nconst userAgentMiddlewareFactory = ({ userAgentHeader = 'x-amz-user-agent', userAgentValue = '', }) => next => {\n    return async function userAgentMiddleware(request) {\n        if (userAgentValue.trim().length === 0) {\n            const result = await next(request);\n            return result;\n        }\n        else {\n            const headerName = userAgentHeader.toLowerCase();\n            request.headers[headerName] = request.headers[headerName]\n                ? `${request.headers[headerName]} ${userAgentValue}`\n                : userAgentValue;\n            const response = await next(request);\n            return response;\n        }\n    };\n};\n\nexport { userAgentMiddlewareFactory };\n//# sourceMappingURL=middleware.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Compose a transfer handler with a core transfer handler and a list of middleware.\n * @param coreHandler Core transfer handler\n * @param middleware\tList of middleware\n * @returns A transfer handler whose option type is the union of the core\n * \ttransfer handler's option type and the middleware's option type.\n * @internal\n */\nconst composeTransferHandler = (coreHandler, middleware) => (request, options) => {\n    const context = {};\n    let composedHandler = (composeHandlerRequest) => coreHandler(composeHandlerRequest, options);\n    for (let i = middleware.length - 1; i >= 0; i--) {\n        const m = middleware[i];\n        const resolvedMiddleware = m(options);\n        composedHandler = resolvedMiddleware(composedHandler, context);\n    }\n    return composedHandler(request);\n};\n\nexport { composeTransferHandler };\n//# sourceMappingURL=composeTransferHandler.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Cache the payload of a response body. It allows multiple calls to the body,\n * for example, when reading the body in both retry decider and error deserializer.\n * Caching body is allowed here because we call the body accessor(blob(), json(),\n * etc.) when body is small or streaming implementation is not available(RN).\n *\n * @internal\n */\nconst withMemoization = (payloadAccessor) => {\n    let cached;\n    return () => {\n        if (!cached) {\n            // Explicitly not awaiting. Intermediate await would add overhead and\n            // introduce a possible race in the event that this wrapper is called\n            // again before the first `payloadAccessor` call resolves.\n            cached = payloadAccessor();\n        }\n        return cached;\n    };\n};\n\nexport { withMemoization };\n//# sourceMappingURL=memoization.mjs.map\n","import { AmplifyError } from '../../errors/AmplifyError.mjs';\nimport { AmplifyErrorCode } from '../../types/errors.mjs';\nimport '../../errors/errorHelpers.mjs';\nimport { withMemoization } from '../utils/memoization.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst shouldSendBody = (method) => !['HEAD', 'GET', 'DELETE'].includes(method.toUpperCase());\n// TODO[AllanZhengYP]: we need to provide isCanceledError utility\nconst fetchTransferHandler = async ({ url, method, headers, body }, { abortSignal, cache, withCrossDomainCredentials }) => {\n    let resp;\n    try {\n        resp = await fetch(url, {\n            method,\n            headers,\n            body: shouldSendBody(method) ? body : undefined,\n            signal: abortSignal,\n            cache,\n            credentials: withCrossDomainCredentials ? 'include' : 'same-origin',\n        });\n    }\n    catch (e) {\n        if (e instanceof TypeError) {\n            throw new AmplifyError({\n                name: AmplifyErrorCode.NetworkError,\n                message: 'A network error has occurred.',\n                underlyingError: e,\n            });\n        }\n        throw e;\n    }\n    const responseHeaders = {};\n    resp.headers?.forEach((value, key) => {\n        responseHeaders[key.toLowerCase()] = value;\n    });\n    const httpResponse = {\n        statusCode: resp.status,\n        headers: responseHeaders,\n        body: null,\n    };\n    // resp.body is a ReadableStream according to Fetch API spec, but React Native\n    // does not implement it.\n    const bodyWithMixin = Object.assign(resp.body ?? {}, {\n        text: withMemoization(() => resp.text()),\n        blob: withMemoization(() => resp.blob()),\n        json: withMemoization(() => resp.json()),\n    });\n    return {\n        ...httpResponse,\n        body: bodyWithMixin,\n    };\n};\n\nexport { fetchTransferHandler };\n//# sourceMappingURL=fetch.mjs.map\n","import { retryMiddlewareFactory } from '../middleware/retry/middleware.mjs';\nimport '../../utils/getClientInfo/getClientInfo.mjs';\nimport '../../utils/retry/retry.mjs';\nimport '../../types/errors.mjs';\nimport { signingMiddlewareFactory } from '../middleware/signing/middleware.mjs';\nimport { userAgentMiddlewareFactory } from '../middleware/userAgent/middleware.mjs';\nimport { composeTransferHandler } from '../internal/composeTransferHandler.mjs';\nimport { fetchTransferHandler } from './fetch.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst authenticatedHandler = composeTransferHandler(fetchTransferHandler, [\n    userAgentMiddlewareFactory,\n    retryMiddlewareFactory,\n    signingMiddlewareFactory,\n]);\n\nexport { authenticatedHandler };\n//# sourceMappingURL=authenticated.mjs.map\n","import { signRequest } from './signer/signatureV4/signRequest.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport { getSkewCorrectedDate } from './utils/getSkewCorrectedDate.mjs';\nimport { getUpdatedSystemClockOffset } from './utils/getUpdatedSystemClockOffset.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Middleware that SigV4 signs request with AWS credentials, and correct system clock offset.\n * This middleware is expected to be placed after retry middleware.\n */\nconst signingMiddlewareFactory = ({ credentials, region, service, uriEscapePath = true, }) => {\n    let currentSystemClockOffset;\n    return (next, context) => async function signingMiddleware(request) {\n        currentSystemClockOffset = currentSystemClockOffset ?? 0;\n        const signRequestOptions = {\n            credentials: typeof credentials === 'function'\n                ? await credentials({\n                    forceRefresh: !!context?.isCredentialsExpired,\n                })\n                : credentials,\n            signingDate: getSkewCorrectedDate(currentSystemClockOffset),\n            signingRegion: region,\n            signingService: service,\n            uriEscapePath,\n        };\n        const signedRequest = await signRequest(request, signRequestOptions);\n        const response = await next(signedRequest);\n        // Update system clock offset if response contains date header, regardless of the status code.\n        // non-2xx response will still be returned from next handler instead of thrown, because it's\n        // only thrown by the retry middleware.\n        const dateString = getDateHeader(response);\n        if (dateString) {\n            currentSystemClockOffset = getUpdatedSystemClockOffset(Date.parse(dateString), currentSystemClockOffset);\n        }\n        return response;\n    };\n};\nconst getDateHeader = ({ headers } = {}) => headers?.date ?? headers?.Date ?? headers?.['x-amz-date'];\n\nexport { signingMiddlewareFactory };\n//# sourceMappingURL=middleware.mjs.map\n","import { getSignedHeaders } from './utils/getSignedHeaders.mjs';\nimport { getSigningValues } from './utils/getSigningValues.mjs';\nimport { HOST_HEADER, AMZ_DATE_HEADER, TOKEN_HEADER, AUTH_HEADER, SHA256_ALGORITHM_IDENTIFIER } from './constants.mjs';\nimport { getSignature } from './utils/getSignature.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Given a `HttpRequest`, returns a Signature Version 4 signed `HttpRequest`.\n *\n * @param request `HttpRequest` to be signed.\n * @param signRequestOptions `SignRequestOptions` object containing values used to construct the signature.\n * @returns A `HttpRequest` with authentication headers which can grant temporary access to AWS resources.\n */\nconst signRequest = (request, options) => {\n    const signingValues = getSigningValues(options);\n    const { accessKeyId, credentialScope, longDate, sessionToken } = signingValues;\n    // create the request to sign\n    const headers = { ...request.headers };\n    headers[HOST_HEADER] = request.url.host;\n    headers[AMZ_DATE_HEADER] = longDate;\n    if (sessionToken) {\n        headers[TOKEN_HEADER] = sessionToken;\n    }\n    const requestToSign = { ...request, headers };\n    // calculate and add the signature to the request\n    const signature = getSignature(requestToSign, signingValues);\n    const credentialEntry = `Credential=${accessKeyId}/${credentialScope}`;\n    const signedHeadersEntry = `SignedHeaders=${getSignedHeaders(headers)}`;\n    const signatureEntry = `Signature=${signature}`;\n    headers[AUTH_HEADER] =\n        `${SHA256_ALGORITHM_IDENTIFIER} ${credentialEntry}, ${signedHeadersEntry}, ${signatureEntry}`;\n    return requestToSign;\n};\n\nexport { signRequest };\n//# sourceMappingURL=signRequest.mjs.map\n","import { getCredentialScope } from './getCredentialScope.mjs';\nimport { getFormattedDates } from './getFormattedDates.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Extracts common values used for signing both requests and urls.\n *\n * @param options `SignRequestOptions` object containing values used to construct the signature.\n * @returns Common `SigningValues` used for signing.\n *\n * @internal\n */\nconst getSigningValues = ({ credentials, signingDate = new Date(), signingRegion, signingService, uriEscapePath = true, }) => {\n    // get properties from credentials\n    const { accessKeyId, secretAccessKey, sessionToken } = credentials;\n    // get formatted dates for signing\n    const { longDate, shortDate } = getFormattedDates(signingDate);\n    // copy header and set signing properties\n    const credentialScope = getCredentialScope(shortDate, signingRegion, signingService);\n    return {\n        accessKeyId,\n        credentialScope,\n        longDate,\n        secretAccessKey,\n        sessionToken,\n        shortDate,\n        signingRegion,\n        signingService,\n        uriEscapePath,\n    };\n};\n\nexport { getSigningValues };\n//# sourceMappingURL=getSigningValues.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns expected date strings to be used in signing.\n *\n * @param date JavaScript `Date` object.\n * @returns `FormattedDates` object containing the following:\n * - longDate: A date string in 'YYYYMMDDThhmmssZ' format\n * - shortDate: A date string in 'YYYYMMDD' format\n *\n * @internal\n */\nconst getFormattedDates = (date) => {\n    const longDate = date.toISOString().replace(/[:-]|\\.\\d{3}/g, '');\n    return {\n        longDate,\n        shortDate: longDate.slice(0, 8),\n    };\n};\n\nexport { getFormattedDates };\n//# sourceMappingURL=getFormattedDates.mjs.map\n","import { KEY_TYPE_IDENTIFIER } from '../constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns the credential scope which restricts the resulting signature to the specified region and service.\n *\n * @param date Current date in the format 'YYYYMMDD'.\n * @param region AWS region in which the service resides.\n * @param service Service to which the signed request is being sent.\n *\n * @returns  A string representing the credential scope with format 'YYYYMMDD/region/service/aws4_request'.\n *\n * @internal\n */\nconst getCredentialScope = (date, region, service) => `${date}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;\n\nexport { getCredentialScope };\n//# sourceMappingURL=getCredentialScope.mjs.map\n","import { getHashedDataAsHex } from './dataHashHelpers.mjs';\nimport { getCanonicalRequest } from './getCanonicalRequest.mjs';\nimport { getSigningKey } from './getSigningKey.mjs';\nimport { getStringToSign } from './getStringToSign.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Calculates and returns an AWS API Signature.\n * https://docs.aws.amazon.com/IAM/latest/UserGuide/create-signed-request.html\n *\n * @param request `HttpRequest` to be signed.\n * @param signRequestOptions `SignRequestOptions` object containing values used to construct the signature.\n * @returns AWS API Signature to sign a request or url with.\n *\n * @internal\n */\nconst getSignature = (request, { credentialScope, longDate, secretAccessKey, shortDate, signingRegion, signingService, uriEscapePath, }) => {\n    // step 1: create a canonical request\n    const canonicalRequest = getCanonicalRequest(request, uriEscapePath);\n    // step 2: create a hash of the canonical request\n    const hashedRequest = getHashedDataAsHex(null, canonicalRequest);\n    // step 3: create a string to sign\n    const stringToSign = getStringToSign(longDate, credentialScope, hashedRequest);\n    // step 4: calculate the signature\n    const signature = getHashedDataAsHex(getSigningKey(secretAccessKey, shortDate, signingRegion, signingService), stringToSign);\n    return signature;\n};\n\nexport { getSignature };\n//# sourceMappingURL=getSignature.mjs.map\n","import { getCanonicalHeaders } from './getCanonicalHeaders.mjs';\nimport { getCanonicalQueryString } from './getCanonicalQueryString.mjs';\nimport { getCanonicalUri } from './getCanonicalUri.mjs';\nimport { getHashedPayload } from './getHashedPayload.mjs';\nimport { getSignedHeaders } from './getSignedHeaders.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a canonical request.\n *\n * @param request `HttpRequest` from which to create the canonical request from.\n * @param uriEscapePath Whether to uri encode the path as part of canonical uri. It's used for S3 only where the\n *   pathname is already uri encoded, and the signing process is not expected to uri encode it again. Defaults to true.\n * @returns String created by by concatenating the following strings, separated by newline characters:\n * - HTTPMethod\n * - CanonicalUri\n * - CanonicalQueryString\n * - CanonicalHeaders\n * - SignedHeaders\n * - HashedPayload\n *\n * @internal\n */\nconst getCanonicalRequest = ({ body, headers, method, url }, uriEscapePath = true) => [\n    method,\n    getCanonicalUri(url.pathname, uriEscapePath),\n    getCanonicalQueryString(url.searchParams),\n    getCanonicalHeaders(headers),\n    getSignedHeaders(headers),\n    getHashedPayload(body),\n].join('\\n');\n\nexport { getCanonicalRequest };\n//# sourceMappingURL=getCanonicalRequest.mjs.map\n","import { SHA256_ALGORITHM_IDENTIFIER } from '../constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a string to be signed.\n *\n * @param date Current date in the format 'YYYYMMDDThhmmssZ'.\n * @param credentialScope String representing the credential scope with format 'YYYYMMDD/region/service/aws4_request'.\n * @param hashedRequest Hashed canonical request.\n *\n * @returns A string created by by concatenating the following strings, separated by newline characters:\n * - Algorithm\n * - RequestDateTime\n * - CredentialScope\n * - HashedCanonicalRequest\n *\n * @internal\n */\nconst getStringToSign = (date, credentialScope, hashedRequest) => [SHA256_ALGORITHM_IDENTIFIER, date, credentialScope, hashedRequest].join('\\n');\n\nexport { getStringToSign };\n//# sourceMappingURL=getStringToSign.mjs.map\n","import { KEY_TYPE_IDENTIFIER, SIGNATURE_IDENTIFIER } from '../constants.mjs';\nimport { getHashedData } from './dataHashHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a signing key to be used for signing requests.\n *\n * @param secretAccessKey AWS secret access key from credentials.\n * @param date Current date in the format 'YYYYMMDD'.\n * @param region AWS region in which the service resides.\n * @param service Service to which the signed request is being sent.\n *\n * @returns `Uint8Array` calculated from its composite parts.\n *\n * @internal\n */\nconst getSigningKey = (secretAccessKey, date, region, service) => {\n    const key = `${SIGNATURE_IDENTIFIER}${secretAccessKey}`;\n    const dateKey = getHashedData(key, date);\n    const regionKey = getHashedData(dateKey, region);\n    const serviceKey = getHashedData(regionKey, service);\n    const signingKey = getHashedData(serviceKey, KEY_TYPE_IDENTIFIER);\n    return signingKey;\n};\n\nexport { getSigningKey };\n//# sourceMappingURL=getSigningKey.mjs.map\n","import { isClockSkewed } from './isClockSkewed.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns the difference between clock time and the current system time if clock is skewed.\n *\n * @param clockTimeInMilliseconds Clock time in milliseconds.\n * @param currentSystemClockOffset Current system clock offset in milliseconds.\n *\n * @internal\n */\nconst getUpdatedSystemClockOffset = (clockTimeInMilliseconds, currentSystemClockOffset) => {\n    if (isClockSkewed(clockTimeInMilliseconds, currentSystemClockOffset)) {\n        return clockTimeInMilliseconds - Date.now();\n    }\n    return currentSystemClockOffset;\n};\n\nexport { getUpdatedSystemClockOffset };\n//# sourceMappingURL=getUpdatedSystemClockOffset.mjs.map\n","import { getSkewCorrectedDate } from './getSkewCorrectedDate.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// 5 mins in milliseconds. Ref: https://github.com/aws/aws-sdk-js-v3/blob/6c0f44fab30a1bb2134af47362a31332abc3666b/packages/middleware-signing/src/utils/isClockSkewed.ts#L10\nconst SKEW_WINDOW = 5 * 60 * 1000;\n/**\n * Checks if the provided date is within the skew window of 5 minutes.\n *\n * @param clockTimeInMilliseconds Time to check for skew in milliseconds.\n * @param clockOffsetInMilliseconds Offset to check clock against in milliseconds.\n *\n * @returns True if skewed. False otherwise.\n *\n * @internal\n */\nconst isClockSkewed = (clockTimeInMilliseconds, clockOffsetInMilliseconds) => Math.abs(getSkewCorrectedDate(clockOffsetInMilliseconds).getTime() -\n    clockTimeInMilliseconds) >= SKEW_WINDOW;\n\nexport { isClockSkewed };\n//# sourceMappingURL=isClockSkewed.mjs.map\n","import { retryMiddlewareFactory } from '../middleware/retry/middleware.mjs';\nimport '../../utils/getClientInfo/getClientInfo.mjs';\nimport '../../utils/retry/retry.mjs';\nimport '../../types/errors.mjs';\nimport { userAgentMiddlewareFactory } from '../middleware/userAgent/middleware.mjs';\nimport { composeTransferHandler } from '../internal/composeTransferHandler.mjs';\nimport { fetchTransferHandler } from './fetch.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst unauthenticatedHandler = composeTransferHandler(fetchTransferHandler, [userAgentMiddlewareFactory, retryMiddlewareFactory]);\n\nexport { unauthenticatedHandler };\n//# sourceMappingURL=unauthenticated.mjs.map\n","import { getRetryDecider, jitteredBackoff, authenticatedHandler, unauthenticatedHandler } from '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport '../../errors/validation.mjs';\nimport { parseRestApiServiceError } from '../../utils/serviceError.mjs';\nimport { logger } from '../../utils/logger.mjs';\nimport { parseSigningInfo } from '../../utils/parseSigningInfo.mjs';\nimport { resolveHeaders } from '../../utils/resolveHeaders.mjs';\n\n/**\n * Make REST API call with best-effort IAM auth.\n * @param amplify Amplify instance to to resolve credentials and tokens. Should use different instance in client-side\n *   and SSR\n * @param options Options accepted from public API options when calling the handlers.\n * @param signingServiceInfo Internal-only options enable IAM auth as well as to to overwrite the IAM signing service\n *   and region. If specified, and NONE of API Key header or Auth header is present, IAM auth will be used.\n * @param iamAuthApplicable Callback function that is used to determine if IAM Auth should be used or not.\n *\n * @internal\n */\nconst transferHandler = async (amplify, options, iamAuthApplicable, signingServiceInfo) => {\n    const { url, method, headers, body, withCredentials, abortSignal } = options;\n    const resolvedBody = body\n        ? body instanceof FormData\n            ? body\n            : JSON.stringify(body ?? '')\n        : undefined;\n    const resolvedHeaders = resolveHeaders(headers, body);\n    const request = {\n        url,\n        headers: resolvedHeaders,\n        method,\n        body: resolvedBody,\n    };\n    const baseOptions = {\n        retryDecider: getRetryDecider(parseRestApiServiceError),\n        computeDelay: jitteredBackoff,\n        withCrossDomainCredentials: withCredentials,\n        abortSignal,\n    };\n    const isIamAuthApplicable = iamAuthApplicable(request, signingServiceInfo);\n    let response;\n    const credentials = await resolveCredentials(amplify);\n    if (isIamAuthApplicable && credentials) {\n        const signingInfoFromUrl = parseSigningInfo(url);\n        const signingService = signingServiceInfo?.service ?? signingInfoFromUrl.service;\n        const signingRegion = signingServiceInfo?.region ?? signingInfoFromUrl.region;\n        response = await authenticatedHandler(request, {\n            ...baseOptions,\n            credentials,\n            region: signingRegion,\n            service: signingService,\n        });\n    }\n    else {\n        response = await unauthenticatedHandler(request, {\n            ...baseOptions,\n        });\n    }\n    // Clean-up un-modeled properties from response.\n    return {\n        statusCode: response.statusCode,\n        headers: response.headers,\n        body: response.body,\n    };\n};\nconst resolveCredentials = async (amplify) => {\n    try {\n        const { credentials } = await amplify.Auth.fetchAuthSession();\n        if (credentials) {\n            return credentials;\n        }\n    }\n    catch (e) {\n        logger.debug('No credentials available, the request will be unsigned.');\n    }\n    return null;\n};\n\nexport { transferHandler };\n//# sourceMappingURL=handler.mjs.map\n","import { createCancellableOperation } from '../../utils/createCancellableOperation.mjs';\nimport { parseSigningInfo } from '../../utils/parseSigningInfo.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport '../../errors/validation.mjs';\nimport { resolveApiUrl } from '../../utils/resolveApiUrl.mjs';\nimport { logger } from '../../utils/logger.mjs';\nimport { isIamAuthApplicableForRest } from '../../utils/isIamAuthApplicable.mjs';\nimport { transferHandler } from './handler.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst publicHandler = (amplify, options, method) => createCancellableOperation(async (abortSignal) => {\n    const { apiName, options: apiOptions = {}, path: apiPath } = options;\n    const url = resolveApiUrl(amplify, apiName, apiPath, apiOptions?.queryParams);\n    const libraryConfigHeaders = await amplify.libraryOptions?.API?.REST?.headers?.({\n        apiName,\n    });\n    const { headers: invocationHeaders = {} } = apiOptions;\n    const headers = {\n        // custom headers from invocation options should precede library options\n        ...libraryConfigHeaders,\n        ...invocationHeaders,\n    };\n    const signingServiceInfo = parseSigningInfo(url, {\n        amplify,\n        apiName,\n    });\n    logger.debug(method, url, headers, `IAM signing options: ${JSON.stringify(signingServiceInfo)}`);\n    return transferHandler(amplify, {\n        ...apiOptions,\n        url,\n        method,\n        headers,\n        abortSignal,\n    }, isIamAuthApplicableForRest, signingServiceInfo);\n});\nconst get = (amplify, input) => publicHandler(amplify, input, 'GET');\nconst post = (amplify, input) => publicHandler(amplify, input, 'POST');\nconst put = (amplify, input) => publicHandler(amplify, input, 'PUT');\nconst del = (amplify, input) => publicHandler(amplify, input, 'DELETE');\nconst head = (amplify, input) => publicHandler(amplify, input, 'HEAD');\nconst patch = (amplify, input) => publicHandler(amplify, input, 'PATCH');\n\nexport { del, get, head, patch, post, put };\n//# sourceMappingURL=publicApis.mjs.map\n","import { CanceledError } from '../errors/CanceledError.mjs';\nimport '@aws-amplify/core/internals/utils';\nimport '../errors/validation.mjs';\nimport { parseRestApiServiceError } from './serviceError.mjs';\nimport { logger } from './logger.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nfunction createCancellableOperation(handler, abortController) {\n    const isInternalPost = (targetHandler) => !!abortController;\n    // For creating a cancellable operation for public REST APIs, we need to create an AbortController\n    // internally. Whereas for internal POST APIs, we need to accept in the AbortController from the\n    // callers.\n    const publicApisAbortController = new AbortController();\n    const publicApisAbortSignal = publicApisAbortController.signal;\n    const internalPostAbortSignal = abortController?.signal;\n    let abortReason;\n    const job = async () => {\n        try {\n            const response = await (isInternalPost(handler)\n                ? handler()\n                : handler(publicApisAbortSignal));\n            if (response.statusCode >= 300) {\n                throw await parseRestApiServiceError(response);\n            }\n            return response;\n        }\n        catch (error) {\n            const abortSignal = internalPostAbortSignal ?? publicApisAbortSignal;\n            const message = abortReason ?? abortSignal.reason;\n            if (error.name === 'AbortError' || abortSignal?.aborted === true) {\n                const canceledError = new CanceledError({\n                    ...(message && { message }),\n                    underlyingError: error,\n                    recoverySuggestion: 'The API request was explicitly canceled. If this is not intended, validate if you called the `cancel()` function on the API request erroneously.',\n                });\n                logger.debug(error);\n                throw canceledError;\n            }\n            logger.debug(error);\n            throw error;\n        }\n    };\n    if (isInternalPost()) {\n        return job();\n    }\n    else {\n        const cancel = (abortMessage) => {\n            if (publicApisAbortSignal.aborted === true) {\n                return;\n            }\n            publicApisAbortController.abort(abortMessage);\n            // If abort reason is not supported, set a scoped reasons instead. The reason property inside an\n            // AbortSignal is a readonly property and trying to set it would throw an error.\n            if (abortMessage && publicApisAbortSignal.reason !== abortMessage) {\n                abortReason = abortMessage;\n            }\n        };\n        return { response: job(), cancel };\n    }\n}\n\nexport { createCancellableOperation };\n//# sourceMappingURL=createCancellableOperation.mjs.map\n","import { AmplifyUrl, AmplifyUrlSearchParams } from '@aws-amplify/core/internals/utils';\nimport { RestApiError } from '../errors/RestApiError.mjs';\nimport { assertValidationError } from '../errors/assertValidatonError.mjs';\nimport { RestApiValidationErrorCode, validationErrorMap } from '../errors/validation.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Resolve the REST API request URL by:\n * 1. Loading the REST API endpoint from the Amplify configuration with corresponding API name.\n * 2. Appending the path to the endpoint.\n * 3. Merge the query parameters from path and the queryParameter argument which is taken from the public REST API\n *   options.\n * 4. Validating the resulting URL string.\n *\n * @internal\n */\nconst resolveApiUrl = (amplify, apiName, path, queryParams) => {\n    const urlStr = amplify.getConfig()?.API?.REST?.[apiName]?.endpoint;\n    assertValidationError(!!urlStr, RestApiValidationErrorCode.InvalidApiName);\n    try {\n        const url = new AmplifyUrl(urlStr + path);\n        if (queryParams) {\n            const mergedQueryParams = new AmplifyUrlSearchParams(url.searchParams);\n            Object.entries(queryParams).forEach(([key, value]) => {\n                mergedQueryParams.set(key, value);\n            });\n            url.search = new AmplifyUrlSearchParams(mergedQueryParams).toString();\n        }\n        return url;\n    }\n    catch (error) {\n        throw new RestApiError({\n            name: RestApiValidationErrorCode.InvalidApiName,\n            ...validationErrorMap[RestApiValidationErrorCode.InvalidApiName],\n            recoverySuggestion: `Please make sure the REST endpoint URL is a valid URL string. Got ${urlStr}`,\n        });\n    }\n};\n\nexport { resolveApiUrl };\n//# sourceMappingURL=resolveApiUrl.mjs.map\n","import { RestApiError } from './RestApiError.mjs';\nimport { validationErrorMap } from './validation.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nfunction assertValidationError(assertion, name) {\n    const { message, recoverySuggestion } = validationErrorMap[name];\n    if (!assertion) {\n        throw new RestApiError({ name, message, recoverySuggestion });\n    }\n}\n\nexport { assertValidationError };\n//# sourceMappingURL=assertValidatonError.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst resolveHeaders = (headers, body) => {\n    const normalizedHeaders = {};\n    for (const key in headers) {\n        normalizedHeaders[key.toLowerCase()] = headers[key];\n    }\n    if (body) {\n        normalizedHeaders['content-type'] = 'application/json; charset=UTF-8';\n        if (body instanceof FormData) {\n            /**\n             * If body is a FormData we should not allow setting content-type.\n             * It's because runtime HTTP handlers(xhr, fetch, undici, node-fetch,\n             * etc.) will modify the content-type value when setting multipart\n             * boundary.\n             */\n            delete normalizedHeaders['content-type'];\n        }\n    }\n    return normalizedHeaders;\n};\n\nexport { resolveHeaders };\n//# sourceMappingURL=resolveHeaders.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { get as get$1, post as post$1, put as put$1, del as del$1, head as head$1, patch as patch$1 } from './common/publicApis.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * GET HTTP request\n * @param {GetInput} input - Input for GET operation\n * @returns {GetOperation} Operation for GET request\n * @throws - {@link RestApiError}\n * @example\n * Send a GET request\n * ```js\n * import { get, isCancelError } from '@aws-amplify/api';\n *\n * const { body } = await get({\n *   apiName,\n *   path,\n *   options: {\n *     headers, // Optional, A map of custom header key/values\n *     body, // Optional, JSON object or FormData\n *     queryParams, // Optional, A map of query strings\n *   }\n * }).response;\n * const data = await body.json();\n * ```\n * @example\n * Cancel a GET request\n *\n * ```js\n * import { get, isCancelError } from '@aws-amplify/api';\n *\n * const { response, cancel } = get({apiName, path, options});\n * cancel(message);\n * try {\n *   await response;\n * } catch (e) {\n *   if (isCancelError(e)) {\n *    // handle request cancellation\n *   }\n *   //...\n * }\n * ```\n */\nconst get = (input) => get$1(Amplify, input);\n/**\n * POST HTTP request\n * @param {PostInput} input - Input for POST operation\n * @returns {PostOperation} Operation for POST request\n * @throws - {@link RestApiError}\n * @example\n * Send a POST request\n * ```js\n * import { post, isCancelError } from '@aws-amplify/api';\n *\n * const { body } = await post({\n *   apiName,\n *   path,\n *   options: {\n *     headers, // Optional, A map of custom header key/values\n *     body, // Optional, JSON object or FormData\n *     queryParams, // Optional, A map of query strings\n *   }\n * }).response;\n * const data = await body.json();\n * ```\n * @example\n * Cancel a POST request\n *\n * ```js\n * import { post, isCancelError } from '@aws-amplify/api';\n *\n * const { response, cancel } = post({apiName, path, options});\n * cancel(message);\n * try {\n *   await response;\n * } catch (e) {\n *   if (isCancelError(e)) {\n *    // handle request cancellation\n *   }\n *   //...\n * }\n * ```\n */\nconst post = (input) => post$1(Amplify, input);\n/**\n * PUT HTTP request\n * @param {PutInput} input - Input for PUT operation\n * @returns {PutOperation} Operation for PUT request\n * @throws - {@link RestApiError}\n * @example\n * Send a PUT request\n * ```js\n * import { put, isCancelError } from '@aws-amplify/api';\n *\n * const { body } = await put({\n *   apiName,\n *   path,\n *   options: {\n *     headers, // Optional, A map of custom header key/values\n *     body, // Optional, JSON object or FormData\n *     queryParams, // Optional, A map of query strings\n *   }\n * }).response;\n * const data = await body.json();\n * ```\n * @example\n * Cancel a PUT request\n * ```js\n * import { put, isCancelError } from '@aws-amplify/api';\n *\n * const { response, cancel } = put({apiName, path, options});\n * cancel(message);\n * try {\n *  await response;\n * } catch (e) {\n *   if (isCancelError(e)) {\n *     // handle request cancellation\n *   }\n * //...\n * }\n * ```\n */\nconst put = (input) => put$1(Amplify, input);\n/**\n * DELETE HTTP request\n * @param {DeleteInput} input - Input for DELETE operation\n * @returns {DeleteOperation} Operation for DELETE request\n * @throws - {@link RestApiError}\n * @example\n * Send a DELETE request\n * ```js\n * import { del } from '@aws-amplify/api';\n *\n * const { statusCode } = await del({\n *   apiName,\n *   path,\n *   options: {\n *     headers, // Optional, A map of custom header key/values\n *     queryParams, // Optional, A map of query strings\n *   }\n * }).response;\n * ```\n */\nconst del = (input) => del$1(Amplify, input);\n/**\n * HEAD HTTP request\n * @param {HeadInput} input - Input for HEAD operation\n * @returns {HeadOperation} Operation for HEAD request\n * @throws - {@link RestApiError}\n * @example\n * Send a HEAD request\n * ```js\n * import { head, isCancelError } from '@aws-amplify/api';\n *\n * const { headers, statusCode } = await head({\n *   apiName,\n *   path,\n *   options: {\n *     headers, // Optional, A map of custom header key/values\n *     queryParams, // Optional, A map of query strings\n *   }\n * }),response;\n * ```\n *\n */\nconst head = (input) => head$1(Amplify, input);\n/**\n * PATCH HTTP request\n * @param {PatchInput} input - Input for PATCH operation\n * @returns {PatchOperation} Operation for PATCH request\n * @throws - {@link RestApiError}\n * @example\n * Send a PATCH request\n * ```js\n * import { patch } from '@aws-amplify/api';\n *\n * const { body } = await patch({\n *   apiName,\n *   path,\n *   options: {\n *     headers, // Optional, A map of custom header key/values\n *     body, // Optional, JSON object or FormData\n *     queryParams, // Optional, A map of query strings\n *   }\n * }).response;\n * const data = await body.json();\n * ```\n *\n * @example\n * Cancel a PATCH request\n * ```js\n * import { patch, isCancelError } from '@aws-amplify/api';\n *\n * const { response, cancel } = patch({apiName, path, options});\n * cancel(message);\n * try {\n *  await response;\n * } catch (e) {\n *  if (isCancelError(e)) {\n *   // handle request cancellation\n *  }\n * //...\n * }\n * ```\n */\nconst patch = (input) => patch$1(Amplify, input);\n\nexport { del, get, head, patch, post, put };\n//# sourceMappingURL=index.mjs.map\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__556__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","AmplifyError","Error","constructor","message","name","recoverySuggestion","underlyingError","super","this","setPrototypeOf","ApiError","response","_response","replicateApiErrorResponse","params","headers","RestApiError","CanceledError","isCancelError","error","RestApiValidationErrorCode","validationErrorMap","InvalidApiName","parseMetadata","statusCode","isMetadataBearer","$metadata","httpStatusCode","requestId","extendedRequestId","cfId","parseRestApiServiceError","async","parsedAwsError","body","output","json","assign","parseJsonBody","code","rawValue","cleanValue","toString","split","includes","sanitizeErrorCode","__type","Message","parseJsonError","stubErrorResponse","bodyText","text","buildRestApiError","bodyTextPromise","bodyProxy","Proxy","target","receiver","JSON","parse","Reflect","restApiError","logger","ConsoleLogger","DEFAULT_REST_IAM_SIGNING_SERVICE","DEFAULT_IAM_SIGNING_REGION","APIG_HOSTNAME_PATTERN","parseSigningInfo","url","restApiOptions","service","signingService","region","signingRegion","amplify","getConfig","API","REST","apiName","hostname","exec","AmplifyUrl","URL","AmplifyUrlSearchParams","URLSearchParams","isIamAuthApplicableForRest","signingServiceInfo","authorization","AmplifyErrorCode","CLOCK_SKEW_ERROR_CODES","THROTTLING_ERROR_CODES","TIMEOUT_ERROR_CODES","isThrottlingError","errorCode","isConnectionError","NetworkError","isServerSideError","DEFAULT_MAX_DELAY_MS","attempt","delayFunction","maxDelayMs","delay","Math","random","jitteredBackoff","retryMiddlewareFactory","maxAttempts","retryDecider","computeDelay","abortSignal","next","context","request","attemptsCount","handleTerminalErrorOrResponse","addOrIncrementMetadataAttempts","aborted","e","isCredentialsExpiredError","retryable","isCredentialsExpired","cancellableSleep","timeoutMs","Promise","resolve","timeoutId","sleepPromiseResolveFn","sleepPromise","setTimeout","addEventListener","cancelSleep","_","clearTimeout","removeEventListener","nextHandlerOutput","attempts","getSignedHeaders","keys","map","toLowerCase","sort","join","AMZ_DATE_HEADER","TOKEN_HEADER","KEY_TYPE_IDENTIFIER","SHA256_ALGORITHM_IDENTIFIER","create","SuppressedError","BLOCK_SIZE","KEY","Uint32Array","INIT","MAX_HASHABLE_LENGTH","pow","RawSha256","state","Int32Array","from","temp","buffer","Uint8Array","bufferLength","bytesHashed","finished","update","data","position","byteLength","hashBuffer","digest","bitsHashed","bufferView","DataView","byteOffset","undecoratedLength","setUint8","i","setUint32","floor","out","state0","state1","state2","state3","state4","state5","state6","state7","u","t1_1","t2_1","t1","t2","Buffer","input","TextEncoder","encode","convertToBuffer","ArrayBuffer","isView","BYTES_PER_ELEMENT","Sha256","secret","hash","reset","toHash","length","digestSync","outer","thisArg","_arguments","generator","f","y","t","label","sent","trys","ops","g","Iterator","verb","iterator","n","v","op","TypeError","done","pop","push","step","__generator","_a","P","reject","fulfilled","rejected","result","then","apply","inner","bufferHash","set","bufferFromSecret","SHORT_TO_HEX","HEX_TO_SHORT","encodedByte","getHashedData","sha256","getHashedDataAsHex","bytes","toHex","getCanonicalHeaders","entries","trim","replace","a","b","entry","escapeUri","uri","encodeURIComponent","hexEncode","c","charCodeAt","toUpperCase","getCanonicalUri","pathname","uriEscapePath","getHashedPayload","isSourceData","isArrayBuffer","arg","getSkewCorrectedDate","systemClockOffset","Date","now","userAgentMiddlewareFactory","userAgentHeader","userAgentValue","headerName","composeTransferHandler","coreHandler","middleware","options","composedHandler","composeHandlerRequest","m","resolvedMiddleware","withMemoization","payloadAccessor","cached","shouldSendBody","method","fetchTransferHandler","cache","withCrossDomainCredentials","resp","fetch","signal","credentials","responseHeaders","forEach","status","blob","authenticatedHandler","currentSystemClockOffset","signRequestOptions","forceRefresh","signingDate","signedRequest","signingValues","accessKeyId","secretAccessKey","sessionToken","longDate","shortDate","date","toISOString","slice","getFormattedDates","credentialScope","getSigningValues","host","requestToSign","signature","canonicalRequest","searchParams","Array","keyA","valA","keyB","valB","val","getCanonicalRequest","stringToSign","hashedRequest","getStringToSign","dateKey","regionKey","serviceKey","getSigningKey","getSignature","credentialEntry","signedHeadersEntry","signatureEntry","signRequest","dateString","getDateHeader","clockTimeInMilliseconds","clockOffsetInMilliseconds","abs","getTime","isClockSkewed","getUpdatedSystemClockOffset","unauthenticatedHandler","resolveCredentials","Auth","fetchAuthSession","debug","publicHandler","handler","publicApisAbortController","AbortController","publicApisAbortSignal","abortReason","job","reason","canceledError","cancel","abortMessage","abort","createCancellableOperation","apiOptions","path","apiPath","queryParams","urlStr","endpoint","assertion","assertValidationError","mergedQueryParams","search","resolveApiUrl","libraryConfigHeaders","libraryOptions","invocationHeaders","stringify","iamAuthApplicable","withCredentials","resolvedBody","FormData","resolvedHeaders","normalizedHeaders","resolveHeaders","baseOptions","errorParser","parsedError","isClockSkewError","isIamAuthApplicable","signingInfoFromUrl","transferHandler","Amplify","post","put","del","head","patch"],"sourceRoot":""}