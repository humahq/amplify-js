{"version":3,"file":"AWSLexProvider.js","sources":["../../../src/lex-v1/AWSLexProvider.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lexProvider = void 0;\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst client_lex_runtime_service_1 = require(\"@aws-sdk/client-lex-runtime-service\");\nconst utils_1 = require(\"@aws-amplify/core/internals/utils\");\nconst core_1 = require(\"@aws-amplify/core\");\nconst utils_2 = require(\"../utils\");\nconst logger = new core_1.ConsoleLogger('AWSLexProvider');\nclass AWSLexProvider {\n    constructor() {\n        this._botsCompleteCallback = {};\n    }\n    /**\n     * @deprecated\n     * This is used internally by 'sendMessage' to call onComplete callback\n     * for a bot if configured\n     */\n    reportBotStatus(data, { name }) {\n        const callback = this._botsCompleteCallback[name];\n        if (!callback) {\n            return;\n        }\n        // Check if state is fulfilled to resolve onFullfilment promise\n        logger.debug('postContent state', data.dialogState);\n        switch (data.dialogState) {\n            case client_lex_runtime_service_1.DialogState.READY_FOR_FULFILLMENT:\n            case client_lex_runtime_service_1.DialogState.FULFILLED:\n                callback(undefined, data);\n                break;\n            case client_lex_runtime_service_1.DialogState.FAILED:\n                callback(new Error('Bot conversation failed'));\n                break;\n            default:\n                break;\n        }\n    }\n    async sendMessage(botConfig, message) {\n        // check if credentials are present\n        let session;\n        try {\n            session = await (0, core_1.fetchAuthSession)();\n        }\n        catch (error) {\n            return Promise.reject(new Error('No credentials'));\n        }\n        const { name, region, alias } = botConfig;\n        const client = new client_lex_runtime_service_1.LexRuntimeServiceClient({\n            region,\n            credentials: session.credentials,\n            customUserAgent: (0, utils_1.getAmplifyUserAgentObject)(),\n        });\n        let params;\n        if (typeof message === 'string') {\n            params = {\n                botAlias: alias,\n                botName: name,\n                inputText: message,\n                userId: session.identityId,\n            };\n            logger.debug('postText to lex', message);\n            try {\n                const postTextCommand = new client_lex_runtime_service_1.PostTextCommand(params);\n                const data = await client.send(postTextCommand);\n                this.reportBotStatus(data, botConfig);\n                return data;\n            }\n            catch (err) {\n                return Promise.reject(err);\n            }\n        }\n        else {\n            const { content, options: { messageType }, } = message;\n            if (messageType === 'voice') {\n                if (typeof content !== 'object') {\n                    return Promise.reject(new Error('invalid content type'));\n                }\n                const inputStream = content instanceof Uint8Array ? content : await (0, utils_2.convert)(content);\n                params = {\n                    botAlias: alias,\n                    botName: name,\n                    contentType: 'audio/x-l16; sample-rate=16000; channel-count=1',\n                    userId: session.identityId,\n                    accept: 'audio/mpeg',\n                    inputStream,\n                };\n            }\n            else {\n                if (typeof content !== 'string')\n                    return Promise.reject(new Error('invalid content type'));\n                params = {\n                    botAlias: alias,\n                    botName: name,\n                    contentType: 'text/plain; charset=utf-8',\n                    inputStream: content,\n                    userId: session.identityId,\n                    accept: 'audio/mpeg',\n                };\n            }\n            logger.debug('postContent to lex', message);\n            try {\n                const postContentCommand = new client_lex_runtime_service_1.PostContentCommand(params);\n                const data = await client.send(postContentCommand);\n                const audioArray = data.audioStream\n                    ? await (0, utils_2.convert)(data.audioStream)\n                    : undefined;\n                const response = { ...data, ...{ audioStream: audioArray } };\n                this.reportBotStatus(response, botConfig);\n                return response;\n            }\n            catch (err) {\n                return Promise.reject(err);\n            }\n        }\n    }\n    onComplete({ name }, callback) {\n        this._botsCompleteCallback[name] = callback;\n    }\n}\nexports.lexProvider = new AWSLexProvider();\n"],"names":[],"mappings":"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"}