{"version":3,"file":"aws-amplify-auth.min.js","mappings":"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","sources":["webpack:///webpack/universalModuleDefinition","webpack:///external umd \"aws_amplify_core\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./node_modules/@aws-amplify/core/dist/esm/errors/AmplifyError.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/utils/globalHelpers/index.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/utils/convert/base64/base64Decoder.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/errors/createAssertionFunction.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/singleton/Auth/utils/errorHelpers.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/singleton/Auth/utils/index.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/types.mjs","webpack:///./dist/esm/errors/types/validation.mjs","webpack:///./dist/esm/common/AuthErrorStrings.mjs","webpack:///./dist/esm/errors/AuthError.mjs","webpack:///./dist/esm/errors/utils/assertValidationError.mjs","webpack:///./dist/esm/foundation/parsers/regionParsers.mjs","webpack:///./dist/esm/providers/cognito/utils/apiHelpers.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/constants.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Logger/types.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Logger/ConsoleLogger.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Hub/index.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/utils/amplifyUrl/index.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/utils/convert/base64/base64Encoder.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/utils/convert/base64/bytesToString.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/utils/deviceName/getDeviceName.mjs","webpack:///./dist/esm/providers/cognito/types/errors.mjs","webpack:///./dist/esm/errors/constants.mjs","webpack:///./dist/esm/providers/cognito/utils/types.mjs","webpack:///./dist/esm/providers/cognito/apis/getCurrentUser.mjs","webpack:///./dist/esm/providers/cognito/apis/internal/getCurrentUser.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/version.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/detection/helpers.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/detection/index.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/detection/Expo.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/detection/ReactNative.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/detection/Next.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/detection/Nuxt.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/detection/Angular.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/detection/React.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/detection/Vue.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/detection/Svelte.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/detection/Web.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/detectFramework.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/customUserAgent.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/Platform/index.mjs","webpack:///./dist/esm/utils/getAuthUserAgentValue.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/internal/composeServiceApi.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/shared/serde/createUserPoolSerializer.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/serde/responseInfo.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/serde/json.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/types/errors.mjs","webpack:///./dist/esm/errors/utils/assertServiceError.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/shared/serde/createUserPoolDeserializer.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/internal/composeTransferHandler.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/middleware.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/utils/memoization.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/handlers/fetch.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/handlers/unauthenticated.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/userAgent/middleware.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/isClockSkewError.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/defaultRetryDecider.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/jitteredBackoff.mjs","webpack:///./dist/esm/foundation/constants.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/utils/retry/jitteredBackoff.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/utils/retry/constants.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createInitiateAuthClient.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createRespondToAuthChallengeClient.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createVerifySoftwareTokenClient.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createAssociateSoftwareTokenClient.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createConfirmDeviceClient.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/endpoints/partitions.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/clients/endpoints/getDnsSuffix.mjs","webpack:///./dist/esm/providers/cognito/factories/createCognitoUserPoolEndpointResolver.mjs","webpack:///./dist/esm/foundation/cognitoUserPoolEndpointResolver.mjs","webpack:///./dist/esm/providers/cognito/utils/userContextData.mjs","webpack:///./dist/esm/providers/cognito/utils/refreshAuthTokens.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/utils/deDupeAsyncFunction.mjs","webpack:///./dist/esm/providers/cognito/tokenProvider/types.mjs","webpack:///./dist/esm/providers/cognito/tokenProvider/errorHelpers.mjs","webpack:///./dist/esm/providers/cognito/tokenProvider/TokenStore.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/utils/isBrowser.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/singleton/Auth/index.mjs","webpack:///./dist/esm/providers/cognito/utils/signInWithRedirectStore.mjs","webpack:///./dist/esm/providers/cognito/utils/oauth/oAuthStore.mjs","webpack:///./dist/esm/providers/cognito/utils/oauth/inflightPromise.mjs","webpack:///./dist/esm/providers/cognito/tokenProvider/TokenOrchestrator.mjs","webpack:///./dist/esm/providers/cognito/tokenProvider/tokenProvider.mjs","webpack:///./dist/esm/providers/cognito/tokenProvider/CognitoUserPoolsTokenProvider.mjs","webpack:///./dist/esm/providers/cognito/tokenProvider/cacheTokens.mjs","webpack:///./dist/esm/providers/cognito/utils/dispatchSignedInHubEvent.mjs","webpack:///./dist/esm/client/utils/store/signInStore.mjs","webpack:///./dist/esm/client/utils/passkey/errors.mjs","webpack:///./dist/esm/client/utils/passkey/getIsPasskeySupported.mjs","webpack:///./dist/esm/foundation/convert/base64url/convertArrayBufferToBase64Url.mjs","webpack:///./dist/esm/foundation/convert/base64url/convertBase64UrlToArrayBuffer.mjs","webpack:///./dist/esm/client/utils/passkey/getPasskey.mjs","webpack:///./dist/esm/client/utils/passkey/serde.mjs","webpack:///./dist/esm/client/utils/passkey/types/index.mjs","webpack:///./dist/esm/providers/cognito/utils/textEncoder/index.mjs","webpack:///./dist/esm/providers/cognito/utils/srp/BigInteger/BigInteger.mjs","webpack:///./dist/esm/providers/cognito/utils/srp/calculate/calculateS.mjs","webpack:///./dist/esm/providers/cognito/utils/srp/constants.mjs","webpack:///./dist/esm/providers/cognito/utils/srp/getBytesFromHex.mjs","webpack:///./node_modules/tslib/tslib.es6.mjs","webpack:///./node_modules/@aws-crypto/sha256-js/build/module/constants.js","webpack:///./node_modules/@aws-crypto/sha256-js/build/module/RawSha256.js","webpack:///./node_modules/@aws-crypto/util/build/module/convertToBuffer.js","webpack:///./node_modules/@aws-crypto/util/node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js","webpack:///./node_modules/@aws-crypto/sha256-js/build/module/jsSha256.js","webpack:///./node_modules/@aws-crypto/util/build/module/isEmptyData.js","webpack:///./dist/esm/providers/cognito/utils/srp/getHexFromBytes.mjs","webpack:///./dist/esm/providers/cognito/utils/srp/getHashFromData.mjs","webpack:///./dist/esm/providers/cognito/utils/srp/getHashFromHex.mjs","webpack:///./dist/esm/providers/cognito/utils/srp/getPaddedHex.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/utils/WordArray.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/utils/cryptoSecureRandomInt.mjs","webpack:///./dist/esm/providers/cognito/utils/srp/getRandomBytes.mjs","webpack:///./dist/esm/providers/cognito/utils/srp/AuthenticationHelper/AuthenticationHelper.mjs","webpack:///./dist/esm/providers/cognito/utils/srp/getRandomString.mjs","webpack:///./dist/esm/providers/cognito/utils/srp/calculate/calculateU.mjs","webpack:///./dist/esm/providers/cognito/utils/srp/getHkdfKey.mjs","webpack:///./dist/esm/providers/cognito/utils/srp/calculate/calculateA.mjs","webpack:///./dist/esm/providers/cognito/utils/srp/getAuthenticationHelper.mjs","webpack:///./dist/esm/client/flows/shared/handlePasswordSRP.mjs","webpack:///./dist/esm/providers/cognito/utils/srp/getNowString.mjs","webpack:///./dist/esm/providers/cognito/utils/srp/getSignatureString.mjs","webpack:///./dist/esm/providers/cognito/utils/signInHelpers.mjs","webpack:///./dist/esm/client/flows/userAuth/handleWebAuthnSignInResult.mjs","webpack:///./dist/esm/client/utils/store/autoSignInStore.mjs","webpack:///./dist/esm/providers/cognito/apis/autoSignIn.mjs","webpack:///./dist/esm/providers/cognito/apis/signInWithUserAuth.mjs","webpack:///./dist/esm/client/flows/userAuth/handleUserAuthFlow.mjs","webpack:///./dist/esm/providers/cognito/apis/signIn.mjs","webpack:///./dist/esm/providers/cognito/apis/signInWithSRP.mjs","webpack:///./dist/esm/providers/cognito/apis/signInWithUserPassword.mjs","webpack:///./dist/esm/providers/cognito/apis/signInWithCustomAuth.mjs","webpack:///./dist/esm/providers/cognito/apis/signInWithCustomSRPAuth.mjs","webpack:///./dist/esm/providers/cognito/utils/signUpHelpers.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createSignUpClient.mjs","webpack:///./dist/esm/providers/cognito/apis/signUp.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createForgotPasswordClient.mjs","webpack:///./dist/esm/providers/cognito/apis/resetPassword.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createConfirmForgotPasswordClient.mjs","webpack:///./dist/esm/providers/cognito/apis/confirmResetPassword.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createResendConfirmationCodeClient.mjs","webpack:///./dist/esm/providers/cognito/apis/resendSignUpCode.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createConfirmSignUpClient.mjs","webpack:///./dist/esm/providers/cognito/apis/confirmSignUp.mjs","webpack:///./dist/esm/providers/cognito/apis/confirmSignIn.mjs","webpack:///./dist/esm/client/flows/userAuth/handleSelectChallenge.mjs","webpack:///./dist/esm/client/flows/userAuth/handleSelectChallengeWithPassword.mjs","webpack:///./dist/esm/client/flows/userAuth/handleSelectChallengeWithPasswordSRP.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createSetUserMFAPreferenceClient.mjs","webpack:///./dist/esm/providers/cognito/apis/updateMFAPreference.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createGetUserClient.mjs","webpack:///./dist/esm/providers/cognito/apis/fetchMFAPreference.mjs","webpack:///./dist/esm/providers/cognito/apis/verifyTOTPSetup.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createChangePasswordClient.mjs","webpack:///./dist/esm/providers/cognito/apis/updatePassword.mjs","webpack:///./dist/esm/providers/cognito/apis/setUpTOTP.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createUpdateUserAttributesClient.mjs","webpack:///./dist/esm/providers/cognito/apis/updateUserAttributes.mjs","webpack:///./dist/esm/providers/cognito/apis/updateUserAttribute.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createVerifyUserAttributeClient.mjs","webpack:///./dist/esm/providers/cognito/apis/confirmUserAttribute.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/singleton/constants.mjs","webpack:///./dist/esm/Errors.mjs","webpack:///./dist/esm/providers/cognito/utils/oauth/createOAuthError.mjs","webpack:///./dist/esm/types/Auth.mjs","webpack:///./dist/esm/providers/cognito/utils/oauth/validateState.mjs","webpack:///./dist/esm/providers/cognito/utils/oauth/completeOAuthFlow.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/utils/urlSafeDecode.mjs","webpack:///./dist/esm/providers/cognito/utils/oauth/getRedirectUrl.mjs","webpack:///./dist/esm/providers/cognito/utils/oauth/handleFailure.mjs","webpack:///./dist/esm/providers/cognito/utils/oauth/enableOAuthListener.mjs","webpack:///./dist/esm/providers/cognito/utils/oauth/attemptCompleteOAuthFlow.mjs","webpack:///./dist/esm/providers/cognito/types/models.mjs","webpack:///./dist/esm/utils/openAuthSession.mjs","webpack:///./dist/esm/providers/cognito/apis/signInWithRedirect.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/utils/generateRandomString.mjs","webpack:///./dist/esm/providers/cognito/utils/oauth/generateState.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/utils/urlSafeEncode.mjs","webpack:///./dist/esm/providers/cognito/utils/oauth/generateCodeVerifier.mjs","webpack:///./dist/esm/providers/cognito/utils/oauth/cancelOAuthFlow.mjs","webpack:///./dist/esm/providers/cognito/apis/fetchUserAttributes.mjs","webpack:///./dist/esm/providers/cognito/apis/internal/fetchUserAttributes.mjs","webpack:///./node_modules/@aws-amplify/core/dist/esm/singleton/apis/internal/fetchAuthSession.mjs","webpack:///./dist/esm/providers/cognito/utils/oauth/completeOAuthSignOut.mjs","webpack:///./dist/esm/providers/cognito/utils/oauth/handleOAuthSignOut.mjs","webpack:///./dist/esm/providers/cognito/utils/oauth/oAuthSignOutRedirect.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createRevokeTokenClient.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createGlobalSignOutClient.mjs","webpack:///./dist/esm/providers/cognito/apis/signOut.mjs","webpack:///./dist/esm/providers/cognito/apis/sendUserAttributeVerificationCode.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createGetUserAttributeVerificationCodeClient.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createDeleteUserAttributesClient.mjs","webpack:///./dist/esm/providers/cognito/apis/deleteUserAttributes.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/shared/serde/createEmptyResponseDeserializer.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createDeleteUserClient.mjs","webpack:///./dist/esm/providers/cognito/apis/deleteUser.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createUpdateDeviceStatusClient.mjs","webpack:///./dist/esm/providers/cognito/apis/rememberDevice.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createForgetDeviceClient.mjs","webpack:///./dist/esm/providers/cognito/apis/forgetDevice.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createListDevicesClient.mjs","webpack:///./dist/esm/providers/cognito/apis/fetchDevices.mjs","webpack:///./dist/esm/client/utils/passkey/registerPasskey.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createStartWebAuthnRegistrationClient.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createCompleteWebAuthnRegistrationClient.mjs","webpack:///./dist/esm/client/apis/associateWebAuthnCredential.mjs","webpack:///./dist/esm/client/utils/passkey/types/shared.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createListWebAuthnCredentialsClient.mjs","webpack:///./dist/esm/client/apis/listWebAuthnCredentials.mjs","webpack:///./dist/esm/foundation/apis/listWebAuthnCredentials.mjs","webpack:///./dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createDeleteWebAuthnCredentialClient.mjs","webpack:///./dist/esm/client/apis/deleteWebAuthnCredential.mjs","webpack:///./dist/esm/foundation/apis/deleteWebAuthnCredential.mjs"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"aws_amplify_core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"aws_amplify_auth\", [\"aws_amplify_core\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"aws_amplify_auth\"] = factory(require(\"aws_amplify_core\"));\n\telse\n\t\troot[\"aws_amplify_auth\"] = factory(root[\"aws_amplify_core\"]);\n})(this, (__WEBPACK_EXTERNAL_MODULE__556__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__556__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass AmplifyError extends Error {\n    /**\n     *  Constructs an AmplifyError.\n     *\n     * @param message text that describes the main problem.\n     * @param underlyingError the underlying cause of the error.\n     * @param recoverySuggestion suggestion to recover from the error.\n     *\n     */\n    constructor({ message, name, recoverySuggestion, underlyingError, }) {\n        super(message);\n        this.name = name;\n        this.underlyingError = underlyingError;\n        this.recoverySuggestion = recoverySuggestion;\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AmplifyError;\n        Object.setPrototypeOf(this, AmplifyError.prototype);\n    }\n}\n\nexport { AmplifyError };\n//# sourceMappingURL=AmplifyError.mjs.map\n","import { AmplifyError } from '../../errors/AmplifyError.mjs';\nimport '../../types/errors.mjs';\nimport '../../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getCrypto = () => {\n    if (typeof window === 'object' && typeof window.crypto === 'object') {\n        return window.crypto;\n    }\n    // Next.js global polyfill\n    if (typeof crypto === 'object') {\n        return crypto;\n    }\n    throw new AmplifyError({\n        name: 'MissingPolyfill',\n        message: 'Cannot resolve the `crypto` function from the environment.',\n    });\n};\nconst getBtoa = () => {\n    // browser\n    if (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n        return window.btoa;\n    }\n    // Next.js global polyfill\n    if (typeof btoa === 'function') {\n        return btoa;\n    }\n    throw new AmplifyError({\n        name: 'Base64EncoderError',\n        message: 'Cannot resolve the `btoa` function from the environment.',\n    });\n};\nconst getAtob = () => {\n    // browser\n    if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n        return window.atob;\n    }\n    // Next.js global polyfill\n    if (typeof atob === 'function') {\n        return atob;\n    }\n    throw new AmplifyError({\n        name: 'Base64EncoderError',\n        message: 'Cannot resolve the `atob` function from the environment.',\n    });\n};\n\nexport { getAtob, getBtoa, getCrypto };\n//# sourceMappingURL=index.mjs.map\n","import { getAtob } from '../../globalHelpers/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst base64Decoder = {\n    convert(input, options) {\n        let inputStr = input;\n        // urlSafe character replacement options conform to the base64 url spec\n        // https://datatracker.ietf.org/doc/html/rfc4648#page-7\n        if (options?.urlSafe) {\n            inputStr = inputStr.replace(/-/g, '+').replace(/_/g, '/');\n        }\n        return getAtob()(inputStr);\n    },\n};\n\nexport { base64Decoder };\n//# sourceMappingURL=base64Decoder.mjs.map\n","import { AmplifyError } from './AmplifyError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createAssertionFunction = (errorMap, AssertionError = AmplifyError) => (assertion, name, additionalContext) => {\n    const { message, recoverySuggestion } = errorMap[name];\n    if (!assertion) {\n        throw new AssertionError({\n            name,\n            message: additionalContext\n                ? `${message} ${additionalContext}`\n                : message,\n            recoverySuggestion,\n        });\n    }\n};\n\nexport { createAssertionFunction };\n//# sourceMappingURL=createAssertionFunction.mjs.map\n","import { createAssertionFunction } from '../../../errors/createAssertionFunction.mjs';\nimport '../../../types/errors.mjs';\nimport '../../../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar AuthConfigurationErrorCode;\n(function (AuthConfigurationErrorCode) {\n    AuthConfigurationErrorCode[\"AuthTokenConfigException\"] = \"AuthTokenConfigException\";\n    AuthConfigurationErrorCode[\"AuthUserPoolAndIdentityPoolException\"] = \"AuthUserPoolAndIdentityPoolException\";\n    AuthConfigurationErrorCode[\"AuthUserPoolException\"] = \"AuthUserPoolException\";\n    AuthConfigurationErrorCode[\"InvalidIdentityPoolIdException\"] = \"InvalidIdentityPoolIdException\";\n    AuthConfigurationErrorCode[\"OAuthNotConfigureException\"] = \"OAuthNotConfigureException\";\n})(AuthConfigurationErrorCode || (AuthConfigurationErrorCode = {}));\nconst authConfigurationErrorMap = {\n    [AuthConfigurationErrorCode.AuthTokenConfigException]: {\n        message: 'Auth Token Provider not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure in your app.',\n    },\n    [AuthConfigurationErrorCode.AuthUserPoolAndIdentityPoolException]: {\n        message: 'Auth UserPool or IdentityPool not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure in your app with UserPoolId and IdentityPoolId.',\n    },\n    [AuthConfigurationErrorCode.AuthUserPoolException]: {\n        message: 'Auth UserPool not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure in your app with userPoolId and userPoolClientId.',\n    },\n    [AuthConfigurationErrorCode.InvalidIdentityPoolIdException]: {\n        message: 'Invalid identity pool id provided.',\n        recoverySuggestion: 'Make sure a valid identityPoolId is given in the config.',\n    },\n    [AuthConfigurationErrorCode.OAuthNotConfigureException]: {\n        message: 'oauth param not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure with oauth parameter in your app.',\n    },\n};\nconst assert = createAssertionFunction(authConfigurationErrorMap);\n\nexport { AuthConfigurationErrorCode, assert };\n//# sourceMappingURL=errorHelpers.mjs.map\n","import { base64Decoder } from '../../../utils/convert/base64/base64Decoder.mjs';\nimport '../../../types/errors.mjs';\nimport '../../../errors/errorHelpers.mjs';\nimport { assert, AuthConfigurationErrorCode } from './errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction assertTokenProviderConfig(cognitoConfig) {\n    let assertionValid = true; // assume valid until otherwise proveed\n    if (!cognitoConfig) {\n        assertionValid = false;\n    }\n    else {\n        assertionValid =\n            !!cognitoConfig.userPoolId && !!cognitoConfig.userPoolClientId;\n    }\n    assert(assertionValid, AuthConfigurationErrorCode.AuthUserPoolException);\n}\nfunction assertOAuthConfig(cognitoConfig) {\n    const validOAuthConfig = !!cognitoConfig?.loginWith?.oauth?.domain &&\n        !!cognitoConfig?.loginWith?.oauth?.redirectSignOut &&\n        !!cognitoConfig?.loginWith?.oauth?.redirectSignIn &&\n        !!cognitoConfig?.loginWith?.oauth?.responseType;\n    assert(validOAuthConfig, AuthConfigurationErrorCode.OAuthNotConfigureException);\n}\nfunction assertIdentityPoolIdConfig(cognitoConfig) {\n    const validConfig = !!cognitoConfig?.identityPoolId;\n    assert(validConfig, AuthConfigurationErrorCode.InvalidIdentityPoolIdException);\n}\n/**\n * Decodes payload of JWT token\n *\n * @param {String} token A string representing a token to be decoded\n * @throws {@link Error} - Throws error when token is invalid or payload malformed.\n */\nfunction decodeJWT(token) {\n    const tokenParts = token.split('.');\n    if (tokenParts.length !== 3) {\n        throw new Error('Invalid token');\n    }\n    try {\n        const base64WithUrlSafe = tokenParts[1];\n        const base64 = base64WithUrlSafe.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonStr = decodeURIComponent(base64Decoder\n            .convert(base64)\n            .split('')\n            .map(char => `%${`00${char.charCodeAt(0).toString(16)}`.slice(-2)}`)\n            .join(''));\n        const payload = JSON.parse(jsonStr);\n        return {\n            toString: () => token,\n            payload,\n        };\n    }\n    catch (err) {\n        throw new Error('Invalid token payload');\n    }\n}\n\nexport { assertIdentityPoolIdConfig, assertOAuthConfig, assertTokenProviderConfig, decodeJWT };\n//# sourceMappingURL=index.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar Framework;\n(function (Framework) {\n    // < 100 - Web frameworks\n    Framework[\"WebUnknown\"] = \"0\";\n    Framework[\"React\"] = \"1\";\n    Framework[\"NextJs\"] = \"2\";\n    Framework[\"Angular\"] = \"3\";\n    Framework[\"VueJs\"] = \"4\";\n    Framework[\"Nuxt\"] = \"5\";\n    Framework[\"Svelte\"] = \"6\";\n    // 100s - Server side frameworks\n    Framework[\"ServerSideUnknown\"] = \"100\";\n    Framework[\"ReactSSR\"] = \"101\";\n    Framework[\"NextJsSSR\"] = \"102\";\n    Framework[\"AngularSSR\"] = \"103\";\n    Framework[\"VueJsSSR\"] = \"104\";\n    Framework[\"NuxtSSR\"] = \"105\";\n    Framework[\"SvelteSSR\"] = \"106\";\n    // 200s - Mobile framework\n    Framework[\"ReactNative\"] = \"201\";\n    Framework[\"Expo\"] = \"202\";\n})(Framework || (Framework = {}));\nvar Category;\n(function (Category) {\n    Category[\"AI\"] = \"ai\";\n    Category[\"API\"] = \"api\";\n    Category[\"Auth\"] = \"auth\";\n    Category[\"Analytics\"] = \"analytics\";\n    Category[\"DataStore\"] = \"datastore\";\n    Category[\"Geo\"] = \"geo\";\n    Category[\"InAppMessaging\"] = \"inappmessaging\";\n    Category[\"Interactions\"] = \"interactions\";\n    Category[\"Predictions\"] = \"predictions\";\n    Category[\"PubSub\"] = \"pubsub\";\n    Category[\"PushNotification\"] = \"pushnotification\";\n    Category[\"Storage\"] = \"storage\";\n})(Category || (Category = {}));\nvar AiAction;\n(function (AiAction) {\n    AiAction[\"CreateConversation\"] = \"1\";\n    AiAction[\"GetConversation\"] = \"2\";\n    AiAction[\"ListConversations\"] = \"3\";\n    AiAction[\"DeleteConversation\"] = \"4\";\n    AiAction[\"SendMessage\"] = \"5\";\n    AiAction[\"ListMessages\"] = \"6\";\n    AiAction[\"OnMessage\"] = \"7\";\n    AiAction[\"Generation\"] = \"8\";\n    AiAction[\"UpdateConversation\"] = \"9\";\n})(AiAction || (AiAction = {}));\nvar AnalyticsAction;\n(function (AnalyticsAction) {\n    AnalyticsAction[\"Record\"] = \"1\";\n    AnalyticsAction[\"IdentifyUser\"] = \"2\";\n})(AnalyticsAction || (AnalyticsAction = {}));\nvar ApiAction;\n(function (ApiAction) {\n    ApiAction[\"GraphQl\"] = \"1\";\n    ApiAction[\"Get\"] = \"2\";\n    ApiAction[\"Post\"] = \"3\";\n    ApiAction[\"Put\"] = \"4\";\n    ApiAction[\"Patch\"] = \"5\";\n    ApiAction[\"Del\"] = \"6\";\n    ApiAction[\"Head\"] = \"7\";\n})(ApiAction || (ApiAction = {}));\nvar AuthAction;\n(function (AuthAction) {\n    AuthAction[\"SignUp\"] = \"1\";\n    AuthAction[\"ConfirmSignUp\"] = \"2\";\n    AuthAction[\"ResendSignUpCode\"] = \"3\";\n    AuthAction[\"SignIn\"] = \"4\";\n    AuthAction[\"FetchMFAPreference\"] = \"6\";\n    AuthAction[\"UpdateMFAPreference\"] = \"7\";\n    AuthAction[\"SetUpTOTP\"] = \"10\";\n    AuthAction[\"VerifyTOTPSetup\"] = \"11\";\n    AuthAction[\"ConfirmSignIn\"] = \"12\";\n    AuthAction[\"DeleteUserAttributes\"] = \"15\";\n    AuthAction[\"DeleteUser\"] = \"16\";\n    AuthAction[\"UpdateUserAttributes\"] = \"17\";\n    AuthAction[\"FetchUserAttributes\"] = \"18\";\n    AuthAction[\"ConfirmUserAttribute\"] = \"22\";\n    AuthAction[\"SignOut\"] = \"26\";\n    AuthAction[\"UpdatePassword\"] = \"27\";\n    AuthAction[\"ResetPassword\"] = \"28\";\n    AuthAction[\"ConfirmResetPassword\"] = \"29\";\n    AuthAction[\"FederatedSignIn\"] = \"30\";\n    AuthAction[\"RememberDevice\"] = \"32\";\n    AuthAction[\"ForgetDevice\"] = \"33\";\n    AuthAction[\"FetchDevices\"] = \"34\";\n    AuthAction[\"SendUserAttributeVerificationCode\"] = \"35\";\n    AuthAction[\"SignInWithRedirect\"] = \"36\";\n    AuthAction[\"StartWebAuthnRegistration\"] = \"37\";\n    AuthAction[\"CompleteWebAuthnRegistration\"] = \"38\";\n    AuthAction[\"ListWebAuthnCredentials\"] = \"39\";\n    AuthAction[\"DeleteWebAuthnCredential\"] = \"40\";\n})(AuthAction || (AuthAction = {}));\nvar DataStoreAction;\n(function (DataStoreAction) {\n    DataStoreAction[\"Subscribe\"] = \"1\";\n    DataStoreAction[\"GraphQl\"] = \"2\";\n})(DataStoreAction || (DataStoreAction = {}));\nvar GeoAction;\n(function (GeoAction) {\n    GeoAction[\"SearchByText\"] = \"0\";\n    GeoAction[\"SearchByCoordinates\"] = \"1\";\n    GeoAction[\"SearchForSuggestions\"] = \"2\";\n    GeoAction[\"SearchByPlaceId\"] = \"3\";\n    GeoAction[\"SaveGeofences\"] = \"4\";\n    GeoAction[\"GetGeofence\"] = \"5\";\n    GeoAction[\"ListGeofences\"] = \"6\";\n    GeoAction[\"DeleteGeofences\"] = \"7\";\n})(GeoAction || (GeoAction = {}));\nvar InAppMessagingAction;\n(function (InAppMessagingAction) {\n    InAppMessagingAction[\"SyncMessages\"] = \"1\";\n    InAppMessagingAction[\"IdentifyUser\"] = \"2\";\n    InAppMessagingAction[\"NotifyMessageInteraction\"] = \"3\";\n})(InAppMessagingAction || (InAppMessagingAction = {}));\nvar InteractionsAction;\n(function (InteractionsAction) {\n    InteractionsAction[\"None\"] = \"0\";\n})(InteractionsAction || (InteractionsAction = {}));\nvar PredictionsAction;\n(function (PredictionsAction) {\n    PredictionsAction[\"Convert\"] = \"1\";\n    PredictionsAction[\"Identify\"] = \"2\";\n    PredictionsAction[\"Interpret\"] = \"3\";\n})(PredictionsAction || (PredictionsAction = {}));\nvar PubSubAction;\n(function (PubSubAction) {\n    PubSubAction[\"Subscribe\"] = \"1\";\n})(PubSubAction || (PubSubAction = {}));\nvar PushNotificationAction;\n(function (PushNotificationAction) {\n    PushNotificationAction[\"InitializePushNotifications\"] = \"1\";\n    PushNotificationAction[\"IdentifyUser\"] = \"2\";\n})(PushNotificationAction || (PushNotificationAction = {}));\nvar StorageAction;\n(function (StorageAction) {\n    StorageAction[\"UploadData\"] = \"1\";\n    StorageAction[\"DownloadData\"] = \"2\";\n    StorageAction[\"List\"] = \"3\";\n    StorageAction[\"Copy\"] = \"4\";\n    StorageAction[\"Remove\"] = \"5\";\n    StorageAction[\"GetProperties\"] = \"6\";\n    StorageAction[\"GetUrl\"] = \"7\";\n    StorageAction[\"GetDataAccess\"] = \"8\";\n    StorageAction[\"ListCallerAccessGrants\"] = \"9\";\n})(StorageAction || (StorageAction = {}));\n\nexport { AiAction, AnalyticsAction, ApiAction, AuthAction, Category, DataStoreAction, Framework, GeoAction, InAppMessagingAction, InteractionsAction, PredictionsAction, PubSubAction, PushNotificationAction, StorageAction };\n//# sourceMappingURL=types.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar AuthValidationErrorCode;\n(function (AuthValidationErrorCode) {\n    AuthValidationErrorCode[\"EmptySignInUsername\"] = \"EmptySignInUsername\";\n    AuthValidationErrorCode[\"EmptySignInPassword\"] = \"EmptySignInPassword\";\n    AuthValidationErrorCode[\"CustomAuthSignInPassword\"] = \"CustomAuthSignInPassword\";\n    AuthValidationErrorCode[\"EmptySignUpUsername\"] = \"EmptySignUpUsername\";\n    AuthValidationErrorCode[\"EmptySignUpPassword\"] = \"EmptySignUpPassword\";\n    AuthValidationErrorCode[\"EmptyConfirmSignUpUsername\"] = \"EmptyConfirmSignUpUsername\";\n    AuthValidationErrorCode[\"EmptyConfirmSignUpCode\"] = \"EmptyConfirmSignUpCode\";\n    AuthValidationErrorCode[\"EmptyResendSignUpCodeUsername\"] = \"EmptyresendSignUpCodeUsername\";\n    AuthValidationErrorCode[\"EmptyChallengeResponse\"] = \"EmptyChallengeResponse\";\n    AuthValidationErrorCode[\"EmptyConfirmResetPasswordUsername\"] = \"EmptyConfirmResetPasswordUsername\";\n    AuthValidationErrorCode[\"EmptyConfirmResetPasswordNewPassword\"] = \"EmptyConfirmResetPasswordNewPassword\";\n    AuthValidationErrorCode[\"EmptyConfirmResetPasswordConfirmationCode\"] = \"EmptyConfirmResetPasswordConfirmationCode\";\n    AuthValidationErrorCode[\"EmptyResetPasswordUsername\"] = \"EmptyResetPasswordUsername\";\n    AuthValidationErrorCode[\"EmptyVerifyTOTPSetupCode\"] = \"EmptyVerifyTOTPSetupCode\";\n    AuthValidationErrorCode[\"EmptyConfirmUserAttributeCode\"] = \"EmptyConfirmUserAttributeCode\";\n    AuthValidationErrorCode[\"IncorrectMFAMethod\"] = \"IncorrectMFAMethod\";\n    AuthValidationErrorCode[\"EmptyUpdatePassword\"] = \"EmptyUpdatePassword\";\n})(AuthValidationErrorCode || (AuthValidationErrorCode = {}));\n\nexport { AuthValidationErrorCode };\n//# sourceMappingURL=validation.mjs.map\n","import { AuthValidationErrorCode } from '../errors/types/validation.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst validationErrorMap = {\n    [AuthValidationErrorCode.EmptyChallengeResponse]: {\n        message: 'challengeResponse is required to confirmSignIn',\n    },\n    [AuthValidationErrorCode.EmptyConfirmResetPasswordUsername]: {\n        message: 'username is required to confirmResetPassword',\n    },\n    [AuthValidationErrorCode.EmptyConfirmSignUpCode]: {\n        message: 'code is required to confirmSignUp',\n    },\n    [AuthValidationErrorCode.EmptyConfirmSignUpUsername]: {\n        message: 'username is required to confirmSignUp',\n    },\n    [AuthValidationErrorCode.EmptyConfirmResetPasswordConfirmationCode]: {\n        message: 'confirmationCode is required to confirmResetPassword',\n    },\n    [AuthValidationErrorCode.EmptyConfirmResetPasswordNewPassword]: {\n        message: 'newPassword is required to confirmResetPassword',\n    },\n    [AuthValidationErrorCode.EmptyResendSignUpCodeUsername]: {\n        message: 'username is required to confirmSignUp',\n    },\n    [AuthValidationErrorCode.EmptyResetPasswordUsername]: {\n        message: 'username is required to resetPassword',\n    },\n    [AuthValidationErrorCode.EmptySignInPassword]: {\n        message: 'password is required to signIn',\n    },\n    [AuthValidationErrorCode.EmptySignInUsername]: {\n        message: 'username is required to signIn',\n    },\n    [AuthValidationErrorCode.EmptySignUpPassword]: {\n        message: 'password is required to signUp',\n    },\n    [AuthValidationErrorCode.EmptySignUpUsername]: {\n        message: 'username is required to signUp',\n    },\n    [AuthValidationErrorCode.CustomAuthSignInPassword]: {\n        message: 'A password is not needed when signing in with CUSTOM_WITHOUT_SRP',\n        recoverySuggestion: 'Do not include a password in your signIn call.',\n    },\n    [AuthValidationErrorCode.IncorrectMFAMethod]: {\n        message: 'Incorrect MFA method was chosen. It should be either SMS, TOTP, or EMAIL',\n        recoverySuggestion: 'Try to pass SMS, TOTP, or EMAIL as the challengeResponse',\n    },\n    [AuthValidationErrorCode.EmptyVerifyTOTPSetupCode]: {\n        message: 'code is required to verifyTotpSetup',\n    },\n    [AuthValidationErrorCode.EmptyUpdatePassword]: {\n        message: 'oldPassword and newPassword are required to changePassword',\n    },\n    [AuthValidationErrorCode.EmptyConfirmUserAttributeCode]: {\n        message: 'confirmation code is required to confirmUserAttribute',\n    },\n};\n// TODO: delete this code when the Auth class is removed.\nvar AuthErrorStrings;\n(function (AuthErrorStrings) {\n    AuthErrorStrings[\"DEFAULT_MSG\"] = \"Authentication Error\";\n    AuthErrorStrings[\"EMPTY_EMAIL\"] = \"Email cannot be empty\";\n    AuthErrorStrings[\"EMPTY_PHONE\"] = \"Phone number cannot be empty\";\n    AuthErrorStrings[\"EMPTY_USERNAME\"] = \"Username cannot be empty\";\n    AuthErrorStrings[\"INVALID_USERNAME\"] = \"The username should either be a string or one of the sign in types\";\n    AuthErrorStrings[\"EMPTY_PASSWORD\"] = \"Password cannot be empty\";\n    AuthErrorStrings[\"EMPTY_CODE\"] = \"Confirmation code cannot be empty\";\n    AuthErrorStrings[\"SIGN_UP_ERROR\"] = \"Error creating account\";\n    AuthErrorStrings[\"NO_MFA\"] = \"No valid MFA method provided\";\n    AuthErrorStrings[\"INVALID_MFA\"] = \"Invalid MFA type\";\n    AuthErrorStrings[\"EMPTY_CHALLENGE\"] = \"Challenge response cannot be empty\";\n    AuthErrorStrings[\"NO_USER_SESSION\"] = \"Failed to get the session because the user is empty\";\n    AuthErrorStrings[\"NETWORK_ERROR\"] = \"Network Error\";\n    AuthErrorStrings[\"DEVICE_CONFIG\"] = \"Device tracking has not been configured in this User Pool\";\n    AuthErrorStrings[\"AUTOSIGNIN_ERROR\"] = \"Please use your credentials to sign in\";\n    AuthErrorStrings[\"OAUTH_ERROR\"] = \"Couldn't finish OAuth flow, check your User Pool HostedUI settings\";\n})(AuthErrorStrings || (AuthErrorStrings = {}));\nvar AuthErrorCodes;\n(function (AuthErrorCodes) {\n    AuthErrorCodes[\"SignInException\"] = \"SignInException\";\n    AuthErrorCodes[\"OAuthSignInError\"] = \"OAuthSignInException\";\n})(AuthErrorCodes || (AuthErrorCodes = {}));\n\nexport { AuthErrorCodes, AuthErrorStrings, validationErrorMap };\n//# sourceMappingURL=AuthErrorStrings.mjs.map\n","import { AmplifyError } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass AuthError extends AmplifyError {\n    constructor(params) {\n        super(params);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AuthError;\n        Object.setPrototypeOf(this, AuthError.prototype);\n    }\n}\n\nexport { AuthError };\n//# sourceMappingURL=AuthError.mjs.map\n","import { validationErrorMap } from '../../common/AuthErrorStrings.mjs';\nimport { AuthError } from '../AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction assertValidationError(assertion, name) {\n    const { message, recoverySuggestion } = validationErrorMap[name];\n    if (!assertion) {\n        throw new AuthError({ name, message, recoverySuggestion });\n    }\n}\n\nexport { assertValidationError };\n//# sourceMappingURL=assertValidationError.mjs.map\n","import { AuthError } from '../../errors/AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction getRegionFromUserPoolId(userPoolId) {\n    const region = userPoolId?.split('_')[0];\n    if (!userPoolId ||\n        userPoolId.indexOf('_') < 0 ||\n        !region ||\n        typeof region !== 'string')\n        throw new AuthError({\n            name: 'InvalidUserPoolId',\n            message: 'Invalid user pool id provided.',\n        });\n    return region;\n}\nfunction getRegionFromIdentityPoolId(identityPoolId) {\n    if (!identityPoolId || !identityPoolId.includes(':')) {\n        throw new AuthError({\n            name: 'InvalidIdentityPoolIdException',\n            message: 'Invalid identity pool id provided.',\n            recoverySuggestion: 'Make sure a valid identityPoolId is given in the config.',\n        });\n    }\n    return identityPoolId.split(':')[0];\n}\n\nexport { getRegionFromIdentityPoolId, getRegionFromUserPoolId };\n//# sourceMappingURL=regionParsers.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Transforms a user attributes object into an array of AttributeType objects.\n * @param attributes user attributes to be mapped to AttributeType objects.\n * @returns an array of AttributeType objects.\n */\nfunction toAttributeType(attributes) {\n    return Object.entries(attributes).map(([key, value]) => ({\n        Name: key,\n        Value: value,\n    }));\n}\n/**\n * Transforms an array of AttributeType objects into a user attributes object.\n *\n * @param attributes - an array of AttributeType objects.\n * @returns AuthUserAttributes object.\n */\nfunction toAuthUserAttribute(attributes) {\n    const userAttributes = {};\n    attributes?.forEach(attribute => {\n        if (attribute.Name)\n            userAttributes[attribute.Name] = attribute.Value;\n    });\n    return userAttributes;\n}\n\nexport { toAttributeType, toAuthUserAttribute };\n//# sourceMappingURL=apiHelpers.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Logging constants\nconst AWS_CLOUDWATCH_CATEGORY = 'Logging';\nconst USER_AGENT_HEADER = 'x-amz-user-agent';\n// Error exception code constants\nconst NO_HUBCALLBACK_PROVIDED_EXCEPTION = 'NoHubcallbackProvidedException';\n\nexport { AWS_CLOUDWATCH_CATEGORY, NO_HUBCALLBACK_PROVIDED_EXCEPTION, USER_AGENT_HEADER };\n//# sourceMappingURL=constants.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar LogType;\n(function (LogType) {\n    LogType[\"DEBUG\"] = \"DEBUG\";\n    LogType[\"ERROR\"] = \"ERROR\";\n    LogType[\"INFO\"] = \"INFO\";\n    LogType[\"WARN\"] = \"WARN\";\n    LogType[\"VERBOSE\"] = \"VERBOSE\";\n    LogType[\"NONE\"] = \"NONE\";\n})(LogType || (LogType = {}));\n\nexport { LogType };\n//# sourceMappingURL=types.mjs.map\n","import { AWS_CLOUDWATCH_CATEGORY } from '../constants.mjs';\nimport { LogType } from './types.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst LOG_LEVELS = {\n    VERBOSE: 1,\n    DEBUG: 2,\n    INFO: 3,\n    WARN: 4,\n    ERROR: 5,\n    NONE: 6,\n};\n/**\n * Write logs\n * @class Logger\n */\nclass ConsoleLogger {\n    /**\n     * @constructor\n     * @param {string} name - Name of the logger\n     */\n    constructor(name, level = LogType.WARN) {\n        this.name = name;\n        this.level = level;\n        this._pluggables = [];\n    }\n    _padding(n) {\n        return n < 10 ? '0' + n : '' + n;\n    }\n    _ts() {\n        const dt = new Date();\n        return ([this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(':') +\n            '.' +\n            dt.getMilliseconds());\n    }\n    configure(config) {\n        if (!config)\n            return this._config;\n        this._config = config;\n        return this._config;\n    }\n    /**\n     * Write log\n     * @method\n     * @memeberof Logger\n     * @param {LogType|string} type - log type, default INFO\n     * @param {string|object} msg - Logging message or object\n     */\n    _log(type, ...msg) {\n        let loggerLevelName = this.level;\n        if (ConsoleLogger.LOG_LEVEL) {\n            loggerLevelName = ConsoleLogger.LOG_LEVEL;\n        }\n        if (typeof window !== 'undefined' && window.LOG_LEVEL) {\n            loggerLevelName = window.LOG_LEVEL;\n        }\n        const loggerLevel = LOG_LEVELS[loggerLevelName];\n        const typeLevel = LOG_LEVELS[type];\n        if (!(typeLevel >= loggerLevel)) {\n            // Do nothing if type is not greater than or equal to logger level (handle undefined)\n            return;\n        }\n        let log = console.log.bind(console);\n        if (type === LogType.ERROR && console.error) {\n            log = console.error.bind(console);\n        }\n        if (type === LogType.WARN && console.warn) {\n            log = console.warn.bind(console);\n        }\n        if (ConsoleLogger.BIND_ALL_LOG_LEVELS) {\n            if (type === LogType.INFO && console.info) {\n                log = console.info.bind(console);\n            }\n            if (type === LogType.DEBUG && console.debug) {\n                log = console.debug.bind(console);\n            }\n        }\n        const prefix = `[${type}] ${this._ts()} ${this.name}`;\n        let message = '';\n        if (msg.length === 1 && typeof msg[0] === 'string') {\n            message = `${prefix} - ${msg[0]}`;\n            log(message);\n        }\n        else if (msg.length === 1) {\n            message = `${prefix} ${msg[0]}`;\n            log(prefix, msg[0]);\n        }\n        else if (typeof msg[0] === 'string') {\n            let obj = msg.slice(1);\n            if (obj.length === 1) {\n                obj = obj[0];\n            }\n            message = `${prefix} - ${msg[0]} ${obj}`;\n            log(`${prefix} - ${msg[0]}`, obj);\n        }\n        else {\n            message = `${prefix} ${msg}`;\n            log(prefix, msg);\n        }\n        for (const plugin of this._pluggables) {\n            const logEvent = { message, timestamp: Date.now() };\n            plugin.pushLogs([logEvent]);\n        }\n    }\n    /**\n     * Write General log. Default to INFO\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    log(...msg) {\n        this._log(LogType.INFO, ...msg);\n    }\n    /**\n     * Write INFO log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    info(...msg) {\n        this._log(LogType.INFO, ...msg);\n    }\n    /**\n     * Write WARN log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    warn(...msg) {\n        this._log(LogType.WARN, ...msg);\n    }\n    /**\n     * Write ERROR log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    error(...msg) {\n        this._log(LogType.ERROR, ...msg);\n    }\n    /**\n     * Write DEBUG log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    debug(...msg) {\n        this._log(LogType.DEBUG, ...msg);\n    }\n    /**\n     * Write VERBOSE log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    verbose(...msg) {\n        this._log(LogType.VERBOSE, ...msg);\n    }\n    addPluggable(pluggable) {\n        if (pluggable && pluggable.getCategoryName() === AWS_CLOUDWATCH_CATEGORY) {\n            this._pluggables.push(pluggable);\n            pluggable.configure(this._config);\n        }\n    }\n    listPluggables() {\n        return this._pluggables;\n    }\n}\nConsoleLogger.LOG_LEVEL = null;\nConsoleLogger.BIND_ALL_LOG_LEVELS = false;\n\nexport { ConsoleLogger };\n//# sourceMappingURL=ConsoleLogger.mjs.map\n","import { ConsoleLogger } from '../Logger/ConsoleLogger.mjs';\nimport { NO_HUBCALLBACK_PROVIDED_EXCEPTION } from '../constants.mjs';\nimport { AmplifyError } from '../errors/AmplifyError.mjs';\nimport '../types/errors.mjs';\nimport '../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined'\n    ? Symbol('amplify_default')\n    : '@@amplify_default');\nconst logger = new ConsoleLogger('Hub');\nclass HubClass {\n    constructor(name) {\n        this.listeners = new Map();\n        this.protectedChannels = [\n            'core',\n            'auth',\n            'api',\n            'analytics',\n            'interactions',\n            'pubsub',\n            'storage',\n            'ui',\n            'xr',\n        ];\n        this.name = name;\n    }\n    /**\n     * Used internally to remove a Hub listener.\n     *\n     * @remarks\n     * This private method is for internal use only. Instead of calling Hub.remove, call the result of Hub.listen.\n     */\n    _remove(channel, listener) {\n        const holder = this.listeners.get(channel);\n        if (!holder) {\n            logger.warn(`No listeners for ${channel}`);\n            return;\n        }\n        this.listeners.set(channel, [\n            ...holder.filter(({ callback }) => callback !== listener),\n        ]);\n    }\n    dispatch(channel, payload, source, ampSymbol) {\n        if (typeof channel === 'string' &&\n            this.protectedChannels.indexOf(channel) > -1) {\n            const hasAccess = ampSymbol === AMPLIFY_SYMBOL;\n            if (!hasAccess) {\n                logger.warn(`WARNING: ${channel} is protected and dispatching on it can have unintended consequences`);\n            }\n        }\n        const capsule = {\n            channel,\n            payload: { ...payload },\n            source,\n            patternInfo: [],\n        };\n        try {\n            this._toListeners(capsule);\n        }\n        catch (e) {\n            logger.error(e);\n        }\n    }\n    listen(channel, callback, listenerName = 'noname') {\n        let cb;\n        if (typeof callback !== 'function') {\n            throw new AmplifyError({\n                name: NO_HUBCALLBACK_PROVIDED_EXCEPTION,\n                message: 'No callback supplied to Hub',\n            });\n        }\n        else {\n            // Needs to be casted as a more generic type\n            cb = callback;\n        }\n        let holder = this.listeners.get(channel);\n        if (!holder) {\n            holder = [];\n            this.listeners.set(channel, holder);\n        }\n        holder.push({\n            name: listenerName,\n            callback: cb,\n        });\n        return () => {\n            this._remove(channel, cb);\n        };\n    }\n    _toListeners(capsule) {\n        const { channel, payload } = capsule;\n        const holder = this.listeners.get(channel);\n        if (holder) {\n            holder.forEach(listener => {\n                logger.debug(`Dispatching to ${channel} with `, payload);\n                try {\n                    listener.callback(capsule);\n                }\n                catch (e) {\n                    logger.error(e);\n                }\n            });\n        }\n    }\n}\n/* We export a __default__ instance of HubClass to use it as a\npseudo Singleton for the main messaging bus, however you can still create\nyour own instance of HubClass() for a separate \"private bus\" of events. */\nconst Hub = new HubClass('__default__');\n/**\n * @internal\n *\n * Internal hub used for core Amplify functionality. Not intended for use outside of Amplify.\n *\n */\nconst HubInternal = new HubClass('internal-hub');\n\nexport { AMPLIFY_SYMBOL, Hub, HubClass, HubInternal };\n//# sourceMappingURL=index.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst AmplifyUrl = URL;\nconst AmplifyUrlSearchParams = URLSearchParams;\n\nexport { AmplifyUrl, AmplifyUrlSearchParams };\n//# sourceMappingURL=index.mjs.map\n","import { getBtoa } from '../../globalHelpers/index.mjs';\nimport { bytesToString } from './bytesToString.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst base64Encoder = {\n    /**\n     * Convert input to base64-encoded string\n     * @param input - string to convert to base64\n     * @param options - encoding options that can optionally produce a base64url string\n     * @returns base64-encoded string\n     */\n    convert(input, options = {\n        urlSafe: false,\n        skipPadding: false,\n    }) {\n        const inputStr = typeof input === 'string' ? input : bytesToString(input);\n        let encodedStr = getBtoa()(inputStr);\n        // urlSafe char replacement and skipPadding options conform to the base64url spec\n        // https://datatracker.ietf.org/doc/html/rfc4648#section-5\n        if (options.urlSafe) {\n            encodedStr = encodedStr.replace(/\\+/g, '-').replace(/\\//g, '_');\n        }\n        if (options.skipPadding) {\n            encodedStr = encodedStr.replace(/=/g, '');\n        }\n        return encodedStr;\n    },\n};\n\nexport { base64Encoder };\n//# sourceMappingURL=base64Encoder.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction bytesToString(input) {\n    return Array.from(input, byte => String.fromCodePoint(byte)).join('');\n}\n\nexport { bytesToString };\n//# sourceMappingURL=bytesToString.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Retrieves the device name using the User-Agent Client Hints API if available,\n * falling back to the traditional userAgent string if not.\n *\n * @returns {Promise<string>} A promise that resolves with a string representing the device name.\n *\n * Example Output:\n * navigator.userAgentData:\n *   'macOS 14.2.1 arm macOS Not A(Brand/99.0.0.0;Google Chrome/121.0.6167.160;Chromium/121.0.6167.160'\n * navigator.userAgent:\n *   'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0'\n */\nconst getDeviceName = async () => {\n    const { userAgentData } = navigator;\n    if (!userAgentData)\n        return navigator.userAgent;\n    const { platform = '', platformVersion = '', model = '', architecture = '', fullVersionList = [], } = await userAgentData.getHighEntropyValues([\n        'platform',\n        'platformVersion',\n        'architecture',\n        'model',\n        'fullVersionList',\n    ]);\n    const versionList = fullVersionList\n        .map((v) => `${v.brand}/${v.version}`)\n        .join(';');\n    const deviceName = [\n        platform,\n        platformVersion,\n        architecture,\n        model,\n        platform,\n        versionList,\n    ]\n        .filter(value => value)\n        .join(' ');\n    return deviceName;\n};\n\nexport { getDeviceName };\n//# sourceMappingURL=getDeviceName.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar AssociateSoftwareTokenException;\n(function (AssociateSoftwareTokenException) {\n    AssociateSoftwareTokenException[\"ConcurrentModificationException\"] = \"ConcurrentModificationException\";\n    AssociateSoftwareTokenException[\"ForbiddenException\"] = \"ForbiddenException\";\n    AssociateSoftwareTokenException[\"InternalErrorException\"] = \"InternalErrorException\";\n    AssociateSoftwareTokenException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    AssociateSoftwareTokenException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    AssociateSoftwareTokenException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    AssociateSoftwareTokenException[\"SoftwareTokenMFANotFoundException\"] = \"SoftwareTokenMFANotFoundException\";\n})(AssociateSoftwareTokenException || (AssociateSoftwareTokenException = {}));\nvar ChangePasswordException;\n(function (ChangePasswordException) {\n    ChangePasswordException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ChangePasswordException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ChangePasswordException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ChangePasswordException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    ChangePasswordException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ChangePasswordException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ChangePasswordException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    ChangePasswordException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ChangePasswordException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ChangePasswordException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ChangePasswordException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ChangePasswordException || (ChangePasswordException = {}));\nvar ConfirmDeviceException;\n(function (ConfirmDeviceException) {\n    ConfirmDeviceException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ConfirmDeviceException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ConfirmDeviceException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ConfirmDeviceException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ConfirmDeviceException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    ConfirmDeviceException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    ConfirmDeviceException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ConfirmDeviceException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    ConfirmDeviceException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ConfirmDeviceException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ConfirmDeviceException[\"UsernameExistsException\"] = \"UsernameExistsException\";\n    ConfirmDeviceException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ConfirmDeviceException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ConfirmDeviceException || (ConfirmDeviceException = {}));\nvar ConfirmForgotPasswordException;\n(function (ConfirmForgotPasswordException) {\n    ConfirmForgotPasswordException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    ConfirmForgotPasswordException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    ConfirmForgotPasswordException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ConfirmForgotPasswordException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ConfirmForgotPasswordException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ConfirmForgotPasswordException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ConfirmForgotPasswordException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    ConfirmForgotPasswordException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ConfirmForgotPasswordException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ConfirmForgotPasswordException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ConfirmForgotPasswordException[\"TooManyFailedAttemptsException\"] = \"TooManyFailedAttemptsException\";\n    ConfirmForgotPasswordException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ConfirmForgotPasswordException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    ConfirmForgotPasswordException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    ConfirmForgotPasswordException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ConfirmForgotPasswordException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ConfirmForgotPasswordException || (ConfirmForgotPasswordException = {}));\nvar ConfirmSignUpException;\n(function (ConfirmSignUpException) {\n    ConfirmSignUpException[\"AliasExistsException\"] = \"AliasExistsException\";\n    ConfirmSignUpException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    ConfirmSignUpException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    ConfirmSignUpException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ConfirmSignUpException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ConfirmSignUpException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ConfirmSignUpException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ConfirmSignUpException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ConfirmSignUpException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ConfirmSignUpException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ConfirmSignUpException[\"TooManyFailedAttemptsException\"] = \"TooManyFailedAttemptsException\";\n    ConfirmSignUpException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ConfirmSignUpException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    ConfirmSignUpException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    ConfirmSignUpException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ConfirmSignUpException || (ConfirmSignUpException = {}));\nvar DeleteUserAttributesException;\n(function (DeleteUserAttributesException) {\n    DeleteUserAttributesException[\"ForbiddenException\"] = \"ForbiddenException\";\n    DeleteUserAttributesException[\"InternalErrorException\"] = \"InternalErrorException\";\n    DeleteUserAttributesException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    DeleteUserAttributesException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    DeleteUserAttributesException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    DeleteUserAttributesException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    DeleteUserAttributesException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    DeleteUserAttributesException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    DeleteUserAttributesException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(DeleteUserAttributesException || (DeleteUserAttributesException = {}));\nvar DeleteUserException;\n(function (DeleteUserException) {\n    DeleteUserException[\"ForbiddenException\"] = \"ForbiddenException\";\n    DeleteUserException[\"InternalErrorException\"] = \"InternalErrorException\";\n    DeleteUserException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    DeleteUserException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    DeleteUserException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    DeleteUserException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    DeleteUserException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    DeleteUserException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    DeleteUserException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(DeleteUserException || (DeleteUserException = {}));\nvar ForgetDeviceException;\n(function (ForgetDeviceException) {\n    ForgetDeviceException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ForgetDeviceException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ForgetDeviceException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ForgetDeviceException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    ForgetDeviceException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ForgetDeviceException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    ForgetDeviceException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ForgetDeviceException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ForgetDeviceException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ForgetDeviceException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ForgetDeviceException || (ForgetDeviceException = {}));\nvar ForgotPasswordException;\n(function (ForgotPasswordException) {\n    ForgotPasswordException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    ForgotPasswordException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ForgotPasswordException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ForgotPasswordException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    ForgotPasswordException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ForgotPasswordException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ForgotPasswordException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    ForgotPasswordException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    ForgotPasswordException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ForgotPasswordException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ForgotPasswordException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ForgotPasswordException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ForgotPasswordException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    ForgotPasswordException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    ForgotPasswordException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ForgotPasswordException || (ForgotPasswordException = {}));\nvar GetUserException;\n(function (GetUserException) {\n    GetUserException[\"ForbiddenException\"] = \"ForbiddenException\";\n    GetUserException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GetUserException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GetUserException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GetUserException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    GetUserException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GetUserException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    GetUserException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    GetUserException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(GetUserException || (GetUserException = {}));\nvar GetIdException;\n(function (GetIdException) {\n    GetIdException[\"ExternalServiceException\"] = \"ExternalServiceException\";\n    GetIdException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GetIdException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GetIdException[\"LimitExceededException\"] = \"LimitExceededException\";\n    GetIdException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GetIdException[\"ResourceConflictException\"] = \"ResourceConflictException\";\n    GetIdException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GetIdException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n})(GetIdException || (GetIdException = {}));\nvar GetCredentialsForIdentityException;\n(function (GetCredentialsForIdentityException) {\n    GetCredentialsForIdentityException[\"ExternalServiceException\"] = \"ExternalServiceException\";\n    GetCredentialsForIdentityException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GetCredentialsForIdentityException[\"InvalidIdentityPoolConfigurationException\"] = \"InvalidIdentityPoolConfigurationException\";\n    GetCredentialsForIdentityException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GetCredentialsForIdentityException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GetCredentialsForIdentityException[\"ResourceConflictException\"] = \"ResourceConflictException\";\n    GetCredentialsForIdentityException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GetCredentialsForIdentityException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n})(GetCredentialsForIdentityException || (GetCredentialsForIdentityException = {}));\nvar GetUserAttributeVerificationException;\n(function (GetUserAttributeVerificationException) {\n    GetUserAttributeVerificationException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    GetUserAttributeVerificationException[\"ForbiddenException\"] = \"ForbiddenException\";\n    GetUserAttributeVerificationException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GetUserAttributeVerificationException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    GetUserAttributeVerificationException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    GetUserAttributeVerificationException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GetUserAttributeVerificationException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    GetUserAttributeVerificationException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    GetUserAttributeVerificationException[\"LimitExceededException\"] = \"LimitExceededException\";\n    GetUserAttributeVerificationException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GetUserAttributeVerificationException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    GetUserAttributeVerificationException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GetUserAttributeVerificationException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    GetUserAttributeVerificationException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    GetUserAttributeVerificationException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    GetUserAttributeVerificationException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    GetUserAttributeVerificationException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(GetUserAttributeVerificationException || (GetUserAttributeVerificationException = {}));\nvar GlobalSignOutException;\n(function (GlobalSignOutException) {\n    GlobalSignOutException[\"ForbiddenException\"] = \"ForbiddenException\";\n    GlobalSignOutException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GlobalSignOutException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GlobalSignOutException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GlobalSignOutException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    GlobalSignOutException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GlobalSignOutException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    GlobalSignOutException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n})(GlobalSignOutException || (GlobalSignOutException = {}));\nvar InitiateAuthException;\n(function (InitiateAuthException) {\n    InitiateAuthException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    InitiateAuthException[\"ForbiddenException\"] = \"ForbiddenException\";\n    InitiateAuthException[\"InternalErrorException\"] = \"InternalErrorException\";\n    InitiateAuthException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    InitiateAuthException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    InitiateAuthException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    InitiateAuthException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    InitiateAuthException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    InitiateAuthException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    InitiateAuthException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    InitiateAuthException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    InitiateAuthException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    InitiateAuthException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    InitiateAuthException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    InitiateAuthException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(InitiateAuthException || (InitiateAuthException = {}));\nvar ResendConfirmationException;\n(function (ResendConfirmationException) {\n    ResendConfirmationException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    ResendConfirmationException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ResendConfirmationException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ResendConfirmationException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    ResendConfirmationException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ResendConfirmationException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ResendConfirmationException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    ResendConfirmationException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    ResendConfirmationException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ResendConfirmationException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ResendConfirmationException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ResendConfirmationException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ResendConfirmationException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    ResendConfirmationException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    ResendConfirmationException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ResendConfirmationException || (ResendConfirmationException = {}));\nvar RespondToAuthChallengeException;\n(function (RespondToAuthChallengeException) {\n    RespondToAuthChallengeException[\"AliasExistsException\"] = \"AliasExistsException\";\n    RespondToAuthChallengeException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    RespondToAuthChallengeException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    RespondToAuthChallengeException[\"ForbiddenException\"] = \"ForbiddenException\";\n    RespondToAuthChallengeException[\"InternalErrorException\"] = \"InternalErrorException\";\n    RespondToAuthChallengeException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    RespondToAuthChallengeException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    RespondToAuthChallengeException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    RespondToAuthChallengeException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    RespondToAuthChallengeException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    RespondToAuthChallengeException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    RespondToAuthChallengeException[\"MFAMethodNotFoundException\"] = \"MFAMethodNotFoundException\";\n    RespondToAuthChallengeException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    RespondToAuthChallengeException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    RespondToAuthChallengeException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    RespondToAuthChallengeException[\"SoftwareTokenMFANotFoundException\"] = \"SoftwareTokenMFANotFoundException\";\n    RespondToAuthChallengeException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    RespondToAuthChallengeException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    RespondToAuthChallengeException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    RespondToAuthChallengeException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    RespondToAuthChallengeException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(RespondToAuthChallengeException || (RespondToAuthChallengeException = {}));\nvar SetUserMFAPreferenceException;\n(function (SetUserMFAPreferenceException) {\n    SetUserMFAPreferenceException[\"ForbiddenException\"] = \"ForbiddenException\";\n    SetUserMFAPreferenceException[\"InternalErrorException\"] = \"InternalErrorException\";\n    SetUserMFAPreferenceException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    SetUserMFAPreferenceException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    SetUserMFAPreferenceException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    SetUserMFAPreferenceException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    SetUserMFAPreferenceException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    SetUserMFAPreferenceException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(SetUserMFAPreferenceException || (SetUserMFAPreferenceException = {}));\nvar SignUpException;\n(function (SignUpException) {\n    SignUpException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    SignUpException[\"InternalErrorException\"] = \"InternalErrorException\";\n    SignUpException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    SignUpException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    SignUpException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    SignUpException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    SignUpException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    SignUpException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    SignUpException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    SignUpException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    SignUpException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    SignUpException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    SignUpException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    SignUpException[\"UsernameExistsException\"] = \"UsernameExistsException\";\n})(SignUpException || (SignUpException = {}));\nvar UpdateUserAttributesException;\n(function (UpdateUserAttributesException) {\n    UpdateUserAttributesException[\"AliasExistsException\"] = \"AliasExistsException\";\n    UpdateUserAttributesException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    UpdateUserAttributesException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    UpdateUserAttributesException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    UpdateUserAttributesException[\"ForbiddenException\"] = \"ForbiddenException\";\n    UpdateUserAttributesException[\"InternalErrorException\"] = \"InternalErrorException\";\n    UpdateUserAttributesException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    UpdateUserAttributesException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    UpdateUserAttributesException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    UpdateUserAttributesException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    UpdateUserAttributesException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    UpdateUserAttributesException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    UpdateUserAttributesException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    UpdateUserAttributesException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    UpdateUserAttributesException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    UpdateUserAttributesException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    UpdateUserAttributesException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    UpdateUserAttributesException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    UpdateUserAttributesException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(UpdateUserAttributesException || (UpdateUserAttributesException = {}));\nvar VerifySoftwareTokenException;\n(function (VerifySoftwareTokenException) {\n    VerifySoftwareTokenException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    VerifySoftwareTokenException[\"EnableSoftwareTokenMFAException\"] = \"EnableSoftwareTokenMFAException\";\n    VerifySoftwareTokenException[\"ForbiddenException\"] = \"ForbiddenException\";\n    VerifySoftwareTokenException[\"InternalErrorException\"] = \"InternalErrorException\";\n    VerifySoftwareTokenException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    VerifySoftwareTokenException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    VerifySoftwareTokenException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    VerifySoftwareTokenException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    VerifySoftwareTokenException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    VerifySoftwareTokenException[\"SoftwareTokenMFANotFoundException\"] = \"SoftwareTokenMFANotFoundException\";\n    VerifySoftwareTokenException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    VerifySoftwareTokenException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    VerifySoftwareTokenException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(VerifySoftwareTokenException || (VerifySoftwareTokenException = {}));\nvar VerifyUserAttributeException;\n(function (VerifyUserAttributeException) {\n    VerifyUserAttributeException[\"AliasExistsException\"] = \"AliasExistsException\";\n    VerifyUserAttributeException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    VerifyUserAttributeException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    VerifyUserAttributeException[\"ForbiddenException\"] = \"ForbiddenException\";\n    VerifyUserAttributeException[\"InternalErrorException\"] = \"InternalErrorException\";\n    VerifyUserAttributeException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    VerifyUserAttributeException[\"LimitExceededException\"] = \"LimitExceededException\";\n    VerifyUserAttributeException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    VerifyUserAttributeException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    VerifyUserAttributeException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    VerifyUserAttributeException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    VerifyUserAttributeException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    VerifyUserAttributeException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(VerifyUserAttributeException || (VerifyUserAttributeException = {}));\nvar UpdateDeviceStatusException;\n(function (UpdateDeviceStatusException) {\n    UpdateDeviceStatusException[\"ForbiddenException\"] = \"ForbiddenException\";\n    UpdateDeviceStatusException[\"InternalErrorException\"] = \"InternalErrorException\";\n    UpdateDeviceStatusException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    UpdateDeviceStatusException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    UpdateDeviceStatusException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    UpdateDeviceStatusException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    UpdateDeviceStatusException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    UpdateDeviceStatusException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    UpdateDeviceStatusException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    UpdateDeviceStatusException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(UpdateDeviceStatusException || (UpdateDeviceStatusException = {}));\nvar ListDevicesException;\n(function (ListDevicesException) {\n    ListDevicesException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ListDevicesException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ListDevicesException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ListDevicesException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    ListDevicesException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ListDevicesException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    ListDevicesException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ListDevicesException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ListDevicesException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ListDevicesException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ListDevicesException || (ListDevicesException = {}));\nconst SETUP_TOTP_EXCEPTION = 'SetUpTOTPException';\n\nexport { AssociateSoftwareTokenException, ChangePasswordException, ConfirmDeviceException, ConfirmForgotPasswordException, ConfirmSignUpException, DeleteUserAttributesException, DeleteUserException, ForgetDeviceException, ForgotPasswordException, GetCredentialsForIdentityException, GetIdException, GetUserAttributeVerificationException, GetUserException, GlobalSignOutException, InitiateAuthException, ListDevicesException, ResendConfirmationException, RespondToAuthChallengeException, SETUP_TOTP_EXCEPTION, SetUserMFAPreferenceException, SignUpException, UpdateDeviceStatusException, UpdateUserAttributesException, VerifySoftwareTokenException, VerifyUserAttributeException };\n//# sourceMappingURL=errors.mjs.map\n","import { AuthError } from './AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst USER_UNAUTHENTICATED_EXCEPTION = 'UserUnAuthenticatedException';\nconst USER_ALREADY_AUTHENTICATED_EXCEPTION = 'UserAlreadyAuthenticatedException';\nconst DEVICE_METADATA_NOT_FOUND_EXCEPTION = 'DeviceMetadataNotFoundException';\nconst AUTO_SIGN_IN_EXCEPTION = 'AutoSignInException';\nconst INVALID_REDIRECT_EXCEPTION = 'InvalidRedirectException';\nconst INVALID_APP_SCHEME_EXCEPTION = 'InvalidAppSchemeException';\nconst INVALID_PREFERRED_REDIRECT_EXCEPTION = 'InvalidPreferredRedirectUrlException';\nconst invalidRedirectException = new AuthError({\n    name: INVALID_REDIRECT_EXCEPTION,\n    message: 'signInRedirect or signOutRedirect had an invalid format or was not found.',\n    recoverySuggestion: 'Please make sure the signIn/Out redirect in your oauth config is valid.',\n});\nconst invalidAppSchemeException = new AuthError({\n    name: INVALID_APP_SCHEME_EXCEPTION,\n    message: 'A valid non-http app scheme was not found in the config.',\n    recoverySuggestion: 'Please make sure a valid custom app scheme is present in the config.',\n});\nconst invalidPreferredRedirectUrlException = new AuthError({\n    name: INVALID_PREFERRED_REDIRECT_EXCEPTION,\n    message: 'The given preferredRedirectUrl does not match any items in the redirectSignOutUrls array from the config.',\n    recoverySuggestion: 'Please make sure a matching preferredRedirectUrl is provided.',\n});\nconst INVALID_ORIGIN_EXCEPTION = 'InvalidOriginException';\nconst invalidOriginException = new AuthError({\n    name: INVALID_ORIGIN_EXCEPTION,\n    message: 'redirect is coming from a different origin. The oauth flow needs to be initiated from the same origin',\n    recoverySuggestion: 'Please call signInWithRedirect from the same origin.',\n});\nconst OAUTH_SIGNOUT_EXCEPTION = 'OAuthSignOutException';\nconst TOKEN_REFRESH_EXCEPTION = 'TokenRefreshException';\nconst UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION = 'UnexpectedSignInInterruptionException';\n\nexport { AUTO_SIGN_IN_EXCEPTION, DEVICE_METADATA_NOT_FOUND_EXCEPTION, INVALID_APP_SCHEME_EXCEPTION, INVALID_ORIGIN_EXCEPTION, INVALID_PREFERRED_REDIRECT_EXCEPTION, INVALID_REDIRECT_EXCEPTION, OAUTH_SIGNOUT_EXCEPTION, TOKEN_REFRESH_EXCEPTION, UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION, USER_ALREADY_AUTHENTICATED_EXCEPTION, USER_UNAUTHENTICATED_EXCEPTION, invalidAppSchemeException, invalidOriginException, invalidPreferredRedirectUrlException, invalidRedirectException };\n//# sourceMappingURL=constants.mjs.map\n","import { AuthError } from '../../../errors/AuthError.mjs';\nimport { TOKEN_REFRESH_EXCEPTION, USER_UNAUTHENTICATED_EXCEPTION, DEVICE_METADATA_NOT_FOUND_EXCEPTION } from '../../../errors/constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction isTypeUserPoolConfig(authConfig) {\n    if (authConfig &&\n        authConfig.Cognito.userPoolId &&\n        authConfig.Cognito.userPoolClientId) {\n        return true;\n    }\n    return false;\n}\nfunction assertAuthTokens(tokens) {\n    if (!tokens || !tokens.accessToken) {\n        throw new AuthError({\n            name: USER_UNAUTHENTICATED_EXCEPTION,\n            message: 'User needs to be authenticated to call this API.',\n            recoverySuggestion: 'Sign in before calling this API again.',\n        });\n    }\n}\nfunction assertIdTokenInAuthTokens(tokens) {\n    if (!tokens || !tokens.idToken) {\n        throw new AuthError({\n            name: USER_UNAUTHENTICATED_EXCEPTION,\n            message: 'User needs to be authenticated to call this API.',\n            recoverySuggestion: 'Sign in before calling this API again.',\n        });\n    }\n}\nconst oAuthTokenRefreshException = new AuthError({\n    name: TOKEN_REFRESH_EXCEPTION,\n    message: `Token refresh is not supported when authenticated with the 'implicit grant' (token) oauth flow. \n\tPlease change your oauth configuration to use 'code grant' flow.`,\n    recoverySuggestion: `Please logout and change your Amplify configuration to use \"code grant\" flow. \n\tE.g { responseType: 'code' }`,\n});\nconst tokenRefreshException = new AuthError({\n    name: USER_UNAUTHENTICATED_EXCEPTION,\n    message: 'User needs to be authenticated to call this API.',\n    recoverySuggestion: 'Sign in before calling this API again.',\n});\nfunction assertAuthTokensWithRefreshToken(tokens) {\n    if (isAuthenticatedWithImplicitOauthFlow(tokens)) {\n        throw oAuthTokenRefreshException;\n    }\n    if (!isAuthenticatedWithRefreshToken(tokens)) {\n        throw tokenRefreshException;\n    }\n}\nfunction assertDeviceMetadata(deviceMetadata) {\n    if (!deviceMetadata ||\n        !deviceMetadata.deviceKey ||\n        !deviceMetadata.deviceGroupKey ||\n        !deviceMetadata.randomPassword) {\n        throw new AuthError({\n            name: DEVICE_METADATA_NOT_FOUND_EXCEPTION,\n            message: 'Either deviceKey, deviceGroupKey or secretPassword were not found during the sign-in process.',\n            recoverySuggestion: 'Make sure to not clear storage after calling the signIn API.',\n        });\n    }\n}\nconst OAuthStorageKeys = {\n    inflightOAuth: 'inflightOAuth',\n    oauthSignIn: 'oauthSignIn',\n    oauthPKCE: 'oauthPKCE',\n    oauthState: 'oauthState',\n};\nfunction isAuthenticated(tokens) {\n    return tokens?.accessToken || tokens?.idToken;\n}\nfunction isAuthenticatedWithRefreshToken(tokens) {\n    return isAuthenticated(tokens) && tokens?.refreshToken;\n}\nfunction isAuthenticatedWithImplicitOauthFlow(tokens) {\n    return isAuthenticated(tokens) && !tokens?.refreshToken;\n}\n\nexport { OAuthStorageKeys, assertAuthTokens, assertAuthTokensWithRefreshToken, assertDeviceMetadata, assertIdTokenInAuthTokens, isTypeUserPoolConfig, oAuthTokenRefreshException, tokenRefreshException };\n//# sourceMappingURL=types.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { getCurrentUser as getCurrentUser$1 } from './internal/getCurrentUser.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Gets the current user from the idToken.\n *\n * @param input -  The GetCurrentUserInput object.\n * @returns GetCurrentUserOutput\n * @throws - {@link InitiateAuthException} - Thrown when the service fails to refresh the tokens.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nconst getCurrentUser = async () => {\n    return getCurrentUser$1(Amplify);\n};\n\nexport { getCurrentUser };\n//# sourceMappingURL=getCurrentUser.mjs.map\n","import { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../../utils/types.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getCurrentUser = async (amplify) => {\n    const authConfig = amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const tokens = await amplify.Auth.getTokens({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const { 'cognito:username': username, sub } = tokens.idToken?.payload ?? {};\n    const authUser = {\n        username: username,\n        userId: sub,\n    };\n    const signInDetails = getSignInDetailsFromTokens(tokens);\n    if (signInDetails) {\n        authUser.signInDetails = signInDetails;\n    }\n    return authUser;\n};\nfunction getSignInDetailsFromTokens(tokens) {\n    return tokens?.signInDetails;\n}\n\nexport { getCurrentUser };\n//# sourceMappingURL=getCurrentUser.mjs.map\n","// generated by genversion\nconst version = '6.10.2';\n\nexport { version };\n//# sourceMappingURL=version.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst globalExists = () => {\n    return typeof global !== 'undefined';\n};\nconst globalThisExists = () => {\n    return typeof globalThis !== 'undefined';\n};\nconst windowExists = () => {\n    return typeof window !== 'undefined';\n};\nconst documentExists = () => {\n    return typeof document !== 'undefined';\n};\nconst processExists = () => {\n    return typeof process !== 'undefined';\n};\nconst keyPrefixMatch = (object, prefix) => {\n    return !!Object.keys(object).find(key => key.startsWith(prefix));\n};\n\nexport { documentExists, globalExists, globalThisExists, keyPrefixMatch, processExists, windowExists };\n//# sourceMappingURL=helpers.mjs.map\n","import { Framework } from '../types.mjs';\nimport { reactWebDetect, reactSSRDetect } from './React.mjs';\nimport { vueWebDetect, vueSSRDetect } from './Vue.mjs';\nimport { svelteWebDetect, svelteSSRDetect } from './Svelte.mjs';\nimport { nextWebDetect, nextSSRDetect } from './Next.mjs';\nimport { nuxtWebDetect, nuxtSSRDetect } from './Nuxt.mjs';\nimport { angularWebDetect, angularSSRDetect } from './Angular.mjs';\nimport { reactNativeDetect } from './ReactNative.mjs';\nimport { expoDetect } from './Expo.mjs';\nimport { webDetect } from './Web.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// These are in the order of detection where when both are detectable, the early Framework will be reported\nconst detectionMap = [\n    // First, detect mobile\n    { platform: Framework.Expo, detectionMethod: expoDetect },\n    { platform: Framework.ReactNative, detectionMethod: reactNativeDetect },\n    // Next, detect web frameworks\n    { platform: Framework.NextJs, detectionMethod: nextWebDetect },\n    { platform: Framework.Nuxt, detectionMethod: nuxtWebDetect },\n    { platform: Framework.Angular, detectionMethod: angularWebDetect },\n    { platform: Framework.React, detectionMethod: reactWebDetect },\n    { platform: Framework.VueJs, detectionMethod: vueWebDetect },\n    { platform: Framework.Svelte, detectionMethod: svelteWebDetect },\n    { platform: Framework.WebUnknown, detectionMethod: webDetect },\n    // Last, detect ssr frameworks\n    { platform: Framework.NextJsSSR, detectionMethod: nextSSRDetect },\n    { platform: Framework.NuxtSSR, detectionMethod: nuxtSSRDetect },\n    { platform: Framework.ReactSSR, detectionMethod: reactSSRDetect },\n    { platform: Framework.VueJsSSR, detectionMethod: vueSSRDetect },\n    { platform: Framework.AngularSSR, detectionMethod: angularSSRDetect },\n    { platform: Framework.SvelteSSR, detectionMethod: svelteSSRDetect },\n];\nfunction detect() {\n    return (detectionMap.find(detectionEntry => detectionEntry.detectionMethod())\n        ?.platform || Framework.ServerSideUnknown);\n}\n\nexport { detect };\n//# sourceMappingURL=index.mjs.map\n","import { globalExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with expo 48 / react-native 0.71.3\nfunction expoDetect() {\n    return globalExists() && typeof global.expo !== 'undefined';\n}\n\nexport { expoDetect };\n//# sourceMappingURL=Expo.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with react-native 0.17.7\nfunction reactNativeDetect() {\n    return (typeof navigator !== 'undefined' &&\n        typeof navigator.product !== 'undefined' &&\n        navigator.product === 'ReactNative');\n}\n\nexport { reactNativeDetect };\n//# sourceMappingURL=ReactNative.mjs.map\n","import { windowExists, globalExists, keyPrefixMatch } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with next 13.4 / react 18.2\nfunction nextWebDetect() {\n    return (windowExists() &&\n        window.next &&\n        typeof window.next === 'object');\n}\nfunction nextSSRDetect() {\n    return (globalExists() &&\n        (keyPrefixMatch(global, '__next') || keyPrefixMatch(global, '__NEXT')));\n}\n\nexport { nextSSRDetect, nextWebDetect };\n//# sourceMappingURL=Next.mjs.map\n","import { windowExists, globalExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with nuxt 2.15 / vue 2.7\nfunction nuxtWebDetect() {\n    return (windowExists() &&\n        (window.__NUXT__ !== undefined ||\n            window.$nuxt !== undefined));\n}\nfunction nuxtSSRDetect() {\n    return (globalExists() && typeof global.__NUXT_PATHS__ !== 'undefined');\n}\n\nexport { nuxtSSRDetect, nuxtWebDetect };\n//# sourceMappingURL=Nuxt.mjs.map\n","import { documentExists, processExists, windowExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with @angular/core 16.0.0\nfunction angularWebDetect() {\n    const angularVersionSetInDocument = Boolean(documentExists() && document.querySelector('[ng-version]'));\n    const angularContentSetInWindow = Boolean(windowExists() && typeof window.ng !== 'undefined');\n    return angularVersionSetInDocument || angularContentSetInWindow;\n}\nfunction angularSSRDetect() {\n    return ((processExists() &&\n        typeof process.env === 'object' &&\n        process.env.npm_lifecycle_script?.startsWith('ng ')) ||\n        false);\n}\n\nexport { angularSSRDetect, angularWebDetect };\n//# sourceMappingURL=Angular.mjs.map\n","import { documentExists, processExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with react 18.2 - built using Vite\nfunction reactWebDetect() {\n    const elementKeyPrefixedWithReact = (key) => {\n        return key.startsWith('_react') || key.startsWith('__react');\n    };\n    const elementIsReactEnabled = (element) => {\n        return Object.keys(element).find(elementKeyPrefixedWithReact);\n    };\n    const allElementsWithId = () => Array.from(document.querySelectorAll('[id]'));\n    return documentExists() && allElementsWithId().some(elementIsReactEnabled);\n}\nfunction reactSSRDetect() {\n    return (processExists() &&\n        typeof process.env !== 'undefined' &&\n        !!Object.keys(process.env).find(key => key.includes('react')));\n}\n// use the some\n\nexport { reactSSRDetect, reactWebDetect };\n//# sourceMappingURL=React.mjs.map\n","import { windowExists, keyPrefixMatch, globalExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with vue 3.3.2\nfunction vueWebDetect() {\n    return windowExists() && keyPrefixMatch(window, '__VUE');\n}\nfunction vueSSRDetect() {\n    return globalExists() && keyPrefixMatch(global, '__VUE');\n}\n\nexport { vueSSRDetect, vueWebDetect };\n//# sourceMappingURL=Vue.mjs.map\n","import { windowExists, keyPrefixMatch, processExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with svelte 3.59\nfunction svelteWebDetect() {\n    return windowExists() && keyPrefixMatch(window, '__SVELTE');\n}\nfunction svelteSSRDetect() {\n    return (processExists() &&\n        typeof process.env !== 'undefined' &&\n        !!Object.keys(process.env).find(key => key.includes('svelte')));\n}\n\nexport { svelteSSRDetect, svelteWebDetect };\n//# sourceMappingURL=Svelte.mjs.map\n","import { windowExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction webDetect() {\n    return windowExists();\n}\n\nexport { webDetect };\n//# sourceMappingURL=Web.mjs.map\n","import { Framework } from './types.mjs';\nimport { detect } from './detection/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// We want to cache detection since the framework won't change\nlet frameworkCache;\nconst frameworkChangeObservers = [];\n// Setup the detection reset tracking / timeout delays\nlet resetTriggered = false;\nconst SSR_RESET_TIMEOUT = 10; // ms\nconst WEB_RESET_TIMEOUT = 10; // ms\nconst PRIME_FRAMEWORK_DELAY = 1000; // ms\nconst detectFramework = () => {\n    if (!frameworkCache) {\n        frameworkCache = detect();\n        if (resetTriggered) {\n            // The final run of detectFramework:\n            // Starting from this point, the `frameworkCache` becomes \"final\".\n            // So we don't need to notify the observers again so the observer\n            // can be removed after the final notice.\n            while (frameworkChangeObservers.length) {\n                frameworkChangeObservers.pop()?.();\n            }\n        }\n        else {\n            // The first run of detectFramework:\n            // Every time we update the cache, call each observer function\n            frameworkChangeObservers.forEach(fcn => {\n                fcn();\n            });\n        }\n        // Retry once for either Unknown type after a delay (explained below)\n        resetTimeout(Framework.ServerSideUnknown, SSR_RESET_TIMEOUT);\n        resetTimeout(Framework.WebUnknown, WEB_RESET_TIMEOUT);\n    }\n    return frameworkCache;\n};\n/**\n * @internal Setup observer callback that will be called everytime the framework changes\n */\nconst observeFrameworkChanges = (fcn) => {\n    // When the `frameworkCache` won't be updated again, we ignore all incoming\n    // observers.\n    if (resetTriggered) {\n        return;\n    }\n    frameworkChangeObservers.push(fcn);\n};\nfunction clearCache() {\n    frameworkCache = undefined;\n}\n// For a framework type and a delay amount, setup the event to re-detect\n//   During the runtime boot, it is possible that framework detection will\n//   be triggered before the framework has made modifications to the\n//   global/window/etc needed for detection. When no framework is detected\n//   we will reset and try again to ensure we don't use a cached\n//   non-framework detection result for all requests.\nfunction resetTimeout(framework, delay) {\n    if (frameworkCache === framework && !resetTriggered) {\n        setTimeout(() => {\n            clearCache();\n            resetTriggered = true;\n            setTimeout(detectFramework, PRIME_FRAMEWORK_DELAY);\n        }, delay);\n    }\n}\n\nexport { clearCache, detectFramework, frameworkChangeObservers, observeFrameworkChanges };\n//# sourceMappingURL=detectFramework.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Maintains custom user-agent state set by external consumers.\nconst customUserAgentState = {};\n/**\n * Sets custom user agent state which will be appended to applicable requests. Returns a function that can be used to\n * clean up any custom state set with this API.\n *\n * @note\n * This API operates globally. Calling this API multiple times will result in the most recently set values for a\n * particular API being used.\n *\n * @note\n * This utility IS NOT compatible with SSR.\n *\n * @param input - SetCustomUserAgentInput that defines custom state to apply to the specified APIs.\n */\nconst setCustomUserAgent = (input) => {\n    // Save custom user-agent state & increment reference counter\n    // TODO Remove `any` when we upgrade to TypeScript 5.2, see: https://github.com/microsoft/TypeScript/issues/44373\n    customUserAgentState[input.category] = input.apis.reduce((acc, api) => ({\n        ...acc,\n        [api]: {\n            refCount: acc[api]?.refCount ? acc[api].refCount + 1 : 1,\n            additionalDetails: input.additionalDetails,\n        },\n    }), customUserAgentState[input.category] ?? {});\n    // Callback that cleans up state for APIs recorded by this call\n    let cleanUpCallbackCalled = false;\n    const cleanUpCallback = () => {\n        // Only allow the cleanup callback to be called once\n        if (cleanUpCallbackCalled) {\n            return;\n        }\n        cleanUpCallbackCalled = true;\n        input.apis.forEach(api => {\n            const apiRefCount = customUserAgentState[input.category][api].refCount;\n            if (apiRefCount > 1) {\n                customUserAgentState[input.category][api].refCount = apiRefCount - 1;\n            }\n            else {\n                delete customUserAgentState[input.category][api];\n                // Clean up category if no more APIs set\n                if (!Object.keys(customUserAgentState[input.category]).length) {\n                    delete customUserAgentState[input.category];\n                }\n            }\n        });\n    };\n    return cleanUpCallback;\n};\nconst getCustomUserAgent = (category, api) => customUserAgentState[category]?.[api]?.additionalDetails;\n\nexport { getCustomUserAgent, setCustomUserAgent };\n//# sourceMappingURL=customUserAgent.mjs.map\n","import { Framework } from './types.mjs';\nimport { version } from './version.mjs';\nimport { detectFramework, observeFrameworkChanges } from './detectFramework.mjs';\nimport { getCustomUserAgent } from './customUserAgent.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst BASE_USER_AGENT = `aws-amplify`;\n/** Sanitize Amplify version string be removing special character + and character post the special character  */\nconst sanitizeAmplifyVersion = (amplifyVersion) => amplifyVersion.replace(/\\+.*/, '');\nclass PlatformBuilder {\n    constructor() {\n        this.userAgent = `${BASE_USER_AGENT}/${sanitizeAmplifyVersion(version)}`;\n    }\n    get framework() {\n        return detectFramework();\n    }\n    get isReactNative() {\n        return (this.framework === Framework.ReactNative ||\n            this.framework === Framework.Expo);\n    }\n    observeFrameworkChanges(fcn) {\n        observeFrameworkChanges(fcn);\n    }\n}\nconst Platform = new PlatformBuilder();\nconst getAmplifyUserAgentObject = ({ category, action, } = {}) => {\n    const userAgent = [\n        [BASE_USER_AGENT, sanitizeAmplifyVersion(version)],\n    ];\n    if (category) {\n        userAgent.push([category, action]);\n    }\n    userAgent.push(['framework', detectFramework()]);\n    if (category && action) {\n        const customState = getCustomUserAgent(category, action);\n        if (customState) {\n            customState.forEach(state => {\n                userAgent.push(state);\n            });\n        }\n    }\n    return userAgent;\n};\nconst getAmplifyUserAgent = (customUserAgentDetails) => {\n    const userAgent = getAmplifyUserAgentObject(customUserAgentDetails);\n    const userAgentString = userAgent\n        .map(([agentKey, agentValue]) => agentKey && agentValue ? `${agentKey}/${agentValue}` : agentKey)\n        .join(' ');\n    return userAgentString;\n};\n\nexport { Platform, getAmplifyUserAgent, getAmplifyUserAgentObject, sanitizeAmplifyVersion };\n//# sourceMappingURL=index.mjs.map\n","import { getAmplifyUserAgent, Category } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getAuthUserAgentValue = (action, customUserAgentDetails) => getAmplifyUserAgent({\n    category: Category.Auth,\n    action,\n    ...customUserAgentDetails,\n});\n\nexport { getAuthUserAgentValue };\n//# sourceMappingURL=getAuthUserAgentValue.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Compose a service API handler that accepts input as defined shape and responds conforming to defined output shape.\n * A service API handler is composed with:\n * * A transfer handler\n * * A serializer function\n * * A deserializer function\n * * A default config object\n *\n * The returned service API handler, when called, will trigger the following workflow:\n * 1. When calling the service API handler function, the default config object is merged into the input config\n * object to assign the default values of some omitted configs, resulting to a resolved config object.\n * 2. The `endpointResolver` function from the default config object will be invoked with the resolved config object and\n * API input object resulting to an endpoint instance.\n * 3. The serializer function is invoked with API input object and the endpoint instance resulting to an HTTP request\n * instance.\n * 4. The HTTP request instance and the resolved config object is passed to the transfer handler function.\n * 5. The transfer handler function resolves to an HTTP response instance(can be either successful or failed status code).\n * 6. The deserializer function is invoked with the HTTP response instance resulting to the API output object, and\n * return to the caller.\n *\n *\n * @param transferHandler Async function for dispatching HTTP requests and returning HTTP response.\n * @param serializer  Async function for converting object in defined input shape into HTTP request targeting a given\n * \tendpoint.\n * @param deserializer Async function for converting HTTP response into output object in defined output shape, or error\n * \tshape.\n * @param defaultConfig  object containing default options to be consumed by transfer handler, serializer and\n *  deserializer.\n * @returns a async service API handler function that accepts a config object and input object in defined shape, returns\n * \tan output object in defined shape. It may also throw error instance in defined shape in deserializer. The config\n *  object type is composed with options type of transferHandler, endpointResolver function as well as endpointResolver\n *  function's input options type, region string. The config object property will be marked as optional if it's also\n * \tdefined in defaultConfig.\n *\n * @internal\n */\nconst composeServiceApi = (transferHandler, serializer, deserializer, defaultConfig) => {\n    return async (config, input) => {\n        const resolvedConfig = {\n            ...defaultConfig,\n            ...config,\n        };\n        // We need to allow different endpoints based on both given config(other than region) and input.\n        // However for most of non-S3 services, region is the only input for endpoint resolver.\n        const endpoint = await resolvedConfig.endpointResolver(resolvedConfig, input);\n        // Unlike AWS SDK clients, a serializer should NOT populate the `host` or `content-length` headers.\n        // Both of these headers are prohibited per Spec(https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name).\n        // They will be populated automatically by browser, or node-fetch polyfill.\n        const request = await serializer(input, endpoint);\n        const response = await transferHandler(request, {\n            ...resolvedConfig,\n        });\n        return deserializer(response);\n    };\n};\n\nexport { composeServiceApi };\n//# sourceMappingURL=composeServiceApi.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createUserPoolSerializer = (operation) => (input, endpoint) => {\n    const headers = getSharedHeaders(operation);\n    const body = JSON.stringify(input);\n    return buildHttpRpcRequest(endpoint, headers, body);\n};\nconst getSharedHeaders = (operation) => ({\n    'content-type': 'application/x-amz-json-1.1',\n    'x-amz-target': `AWSCognitoIdentityProviderService.${operation}`,\n});\nconst buildHttpRpcRequest = ({ url }, headers, body) => ({\n    headers,\n    url,\n    body,\n    method: 'POST',\n});\n\nexport { createUserPoolSerializer };\n//# sourceMappingURL=createUserPoolSerializer.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst parseMetadata = (response) => {\n    const { headers, statusCode } = response;\n    return {\n        ...(isMetadataBearer(response) ? response.$metadata : {}),\n        httpStatusCode: statusCode,\n        requestId: headers['x-amzn-requestid'] ??\n            headers['x-amzn-request-id'] ??\n            headers['x-amz-request-id'],\n        extendedRequestId: headers['x-amz-id-2'],\n        cfId: headers['x-amz-cf-id'],\n    };\n};\nconst isMetadataBearer = (response) => typeof response?.$metadata === 'object';\n\nexport { parseMetadata };\n//# sourceMappingURL=responseInfo.mjs.map\n","import { parseMetadata } from './responseInfo.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Utility functions for serializing and deserializing of JSON protocol in general(including: REST-JSON, JSON-RPC, etc.)\n */\n/**\n * Error parser for AWS JSON protocol.\n */\nconst parseJsonError = async (response) => {\n    if (!response || response.statusCode < 300) {\n        return;\n    }\n    const body = await parseJsonBody(response);\n    const sanitizeErrorCode = (rawValue) => {\n        const [cleanValue] = rawValue.toString().split(/[,:]+/);\n        if (cleanValue.includes('#')) {\n            return cleanValue.split('#')[1];\n        }\n        return cleanValue;\n    };\n    const code = sanitizeErrorCode(response.headers['x-amzn-errortype'] ??\n        body.code ??\n        body.__type ??\n        'UnknownError');\n    const message = body.message ?? body.Message ?? 'Unknown error';\n    const error = new Error(message);\n    return Object.assign(error, {\n        name: code,\n        $metadata: parseMetadata(response),\n    });\n};\n/**\n * Parse JSON response body to JavaScript object.\n */\nconst parseJsonBody = async (response) => {\n    if (!response.body) {\n        throw new Error('Missing response payload');\n    }\n    const output = await response.body.json();\n    return Object.assign(output, {\n        $metadata: parseMetadata(response),\n    });\n};\n\nexport { parseJsonBody, parseJsonError };\n//# sourceMappingURL=json.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar AmplifyErrorCode;\n(function (AmplifyErrorCode) {\n    AmplifyErrorCode[\"NoEndpointId\"] = \"NoEndpointId\";\n    AmplifyErrorCode[\"PlatformNotSupported\"] = \"PlatformNotSupported\";\n    AmplifyErrorCode[\"Unknown\"] = \"Unknown\";\n    AmplifyErrorCode[\"NetworkError\"] = \"NetworkError\";\n})(AmplifyErrorCode || (AmplifyErrorCode = {}));\n\nexport { AmplifyErrorCode };\n//# sourceMappingURL=errors.mjs.map\n","import { AmplifyErrorCode } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction assertServiceError(error) {\n    if (!error ||\n        error.name === 'Error' ||\n        error instanceof TypeError) {\n        throw new AuthError({\n            name: AmplifyErrorCode.Unknown,\n            message: 'An unknown error has occurred.',\n            underlyingError: error,\n        });\n    }\n}\n\nexport { assertServiceError };\n//# sourceMappingURL=assertServiceError.mjs.map\n","import { parseJsonError, parseJsonBody } from '@aws-amplify/core/internals/aws-client-utils';\nimport { assertServiceError } from '../../../../../../errors/utils/assertServiceError.mjs';\nimport { AuthError } from '../../../../../../errors/AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createUserPoolDeserializer = () => async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        assertServiceError(error);\n        throw new AuthError({ name: error.name, message: error.message });\n    }\n    return parseJsonBody(response);\n};\n\nexport { createUserPoolDeserializer };\n//# sourceMappingURL=createUserPoolDeserializer.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Compose a transfer handler with a core transfer handler and a list of middleware.\n * @param coreHandler Core transfer handler\n * @param middleware\tList of middleware\n * @returns A transfer handler whose option type is the union of the core\n * \ttransfer handler's option type and the middleware's option type.\n * @internal\n */\nconst composeTransferHandler = (coreHandler, middleware) => (request, options) => {\n    const context = {};\n    let composedHandler = (composeHandlerRequest) => coreHandler(composeHandlerRequest, options);\n    for (let i = middleware.length - 1; i >= 0; i--) {\n        const m = middleware[i];\n        const resolvedMiddleware = m(options);\n        composedHandler = resolvedMiddleware(composedHandler, context);\n    }\n    return composedHandler(request);\n};\n\nexport { composeTransferHandler };\n//# sourceMappingURL=composeTransferHandler.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst DEFAULT_RETRY_ATTEMPTS = 3;\n/**\n * Retry middleware\n */\nconst retryMiddlewareFactory = ({ maxAttempts = DEFAULT_RETRY_ATTEMPTS, retryDecider, computeDelay, abortSignal, }) => {\n    if (maxAttempts < 1) {\n        throw new Error('maxAttempts must be greater than 0');\n    }\n    return (next, context) => async function retryMiddleware(request) {\n        let error;\n        let attemptsCount = context.attemptsCount ?? 0;\n        let response;\n        // When retry is not needed or max attempts is reached, either error or response will be set. This function handles either cases.\n        const handleTerminalErrorOrResponse = () => {\n            if (response) {\n                addOrIncrementMetadataAttempts(response, attemptsCount);\n                return response;\n            }\n            else {\n                addOrIncrementMetadataAttempts(error, attemptsCount);\n                throw error;\n            }\n        };\n        while (!abortSignal?.aborted && attemptsCount < maxAttempts) {\n            try {\n                response = await next(request);\n                error = undefined;\n            }\n            catch (e) {\n                error = e;\n                response = undefined;\n            }\n            // context.attemptsCount may be updated after calling next handler which may retry the request by itself.\n            attemptsCount =\n                (context.attemptsCount ?? 0) > attemptsCount\n                    ? (context.attemptsCount ?? 0)\n                    : attemptsCount + 1;\n            context.attemptsCount = attemptsCount;\n            const { isCredentialsExpiredError, retryable } = await retryDecider(response, error, context);\n            if (retryable) {\n                // Setting isCredentialsInvalid flag to notify signing middleware to forceRefresh credentials provider.\n                context.isCredentialsExpired = !!isCredentialsExpiredError;\n                if (!abortSignal?.aborted && attemptsCount < maxAttempts) {\n                    // prevent sleep for last attempt or cancelled request;\n                    const delay = computeDelay(attemptsCount);\n                    await cancellableSleep(delay, abortSignal);\n                }\n                continue;\n            }\n            else {\n                return handleTerminalErrorOrResponse();\n            }\n        }\n        if (abortSignal?.aborted) {\n            throw new Error('Request aborted.');\n        }\n        else {\n            return handleTerminalErrorOrResponse();\n        }\n    };\n};\nconst cancellableSleep = (timeoutMs, abortSignal) => {\n    if (abortSignal?.aborted) {\n        return Promise.resolve();\n    }\n    let timeoutId;\n    let sleepPromiseResolveFn;\n    const sleepPromise = new Promise(resolve => {\n        sleepPromiseResolveFn = resolve;\n        timeoutId = setTimeout(resolve, timeoutMs);\n    });\n    abortSignal?.addEventListener('abort', function cancelSleep(_) {\n        clearTimeout(timeoutId);\n        abortSignal?.removeEventListener('abort', cancelSleep);\n        sleepPromiseResolveFn();\n    });\n    return sleepPromise;\n};\nconst addOrIncrementMetadataAttempts = (nextHandlerOutput, attempts) => {\n    if (Object.prototype.toString.call(nextHandlerOutput) !== '[object Object]') {\n        return;\n    }\n    nextHandlerOutput.$metadata = {\n        ...(nextHandlerOutput.$metadata ?? {}),\n        attempts,\n    };\n};\n\nexport { retryMiddlewareFactory };\n//# sourceMappingURL=middleware.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Cache the payload of a response body. It allows multiple calls to the body,\n * for example, when reading the body in both retry decider and error deserializer.\n * Caching body is allowed here because we call the body accessor(blob(), json(),\n * etc.) when body is small or streaming implementation is not available(RN).\n *\n * @internal\n */\nconst withMemoization = (payloadAccessor) => {\n    let cached;\n    return () => {\n        if (!cached) {\n            // Explicitly not awaiting. Intermediate await would add overhead and\n            // introduce a possible race in the event that this wrapper is called\n            // again before the first `payloadAccessor` call resolves.\n            cached = payloadAccessor();\n        }\n        return cached;\n    };\n};\n\nexport { withMemoization };\n//# sourceMappingURL=memoization.mjs.map\n","import { AmplifyError } from '../../errors/AmplifyError.mjs';\nimport { AmplifyErrorCode } from '../../types/errors.mjs';\nimport '../../errors/errorHelpers.mjs';\nimport { withMemoization } from '../utils/memoization.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst shouldSendBody = (method) => !['HEAD', 'GET', 'DELETE'].includes(method.toUpperCase());\n// TODO[AllanZhengYP]: we need to provide isCanceledError utility\nconst fetchTransferHandler = async ({ url, method, headers, body }, { abortSignal, cache, withCrossDomainCredentials }) => {\n    let resp;\n    try {\n        resp = await fetch(url, {\n            method,\n            headers,\n            body: shouldSendBody(method) ? body : undefined,\n            signal: abortSignal,\n            cache,\n            credentials: withCrossDomainCredentials ? 'include' : 'same-origin',\n        });\n    }\n    catch (e) {\n        if (e instanceof TypeError) {\n            throw new AmplifyError({\n                name: AmplifyErrorCode.NetworkError,\n                message: 'A network error has occurred.',\n                underlyingError: e,\n            });\n        }\n        throw e;\n    }\n    const responseHeaders = {};\n    resp.headers?.forEach((value, key) => {\n        responseHeaders[key.toLowerCase()] = value;\n    });\n    const httpResponse = {\n        statusCode: resp.status,\n        headers: responseHeaders,\n        body: null,\n    };\n    // resp.body is a ReadableStream according to Fetch API spec, but React Native\n    // does not implement it.\n    const bodyWithMixin = Object.assign(resp.body ?? {}, {\n        text: withMemoization(() => resp.text()),\n        blob: withMemoization(() => resp.blob()),\n        json: withMemoization(() => resp.json()),\n    });\n    return {\n        ...httpResponse,\n        body: bodyWithMixin,\n    };\n};\n\nexport { fetchTransferHandler };\n//# sourceMappingURL=fetch.mjs.map\n","import { retryMiddlewareFactory } from '../middleware/retry/middleware.mjs';\nimport '../../utils/getClientInfo/getClientInfo.mjs';\nimport '../../utils/retry/retry.mjs';\nimport '../../types/errors.mjs';\nimport { userAgentMiddlewareFactory } from '../middleware/userAgent/middleware.mjs';\nimport { composeTransferHandler } from '../internal/composeTransferHandler.mjs';\nimport { fetchTransferHandler } from './fetch.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst unauthenticatedHandler = composeTransferHandler(fetchTransferHandler, [userAgentMiddlewareFactory, retryMiddlewareFactory]);\n\nexport { unauthenticatedHandler };\n//# sourceMappingURL=unauthenticated.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Middleware injects user agent string to specified header(default to 'x-amz-user-agent'),\n * if the header is not set already.\n *\n * TODO: incorporate new user agent design\n */\nconst userAgentMiddlewareFactory = ({ userAgentHeader = 'x-amz-user-agent', userAgentValue = '', }) => next => {\n    return async function userAgentMiddleware(request) {\n        if (userAgentValue.trim().length === 0) {\n            const result = await next(request);\n            return result;\n        }\n        else {\n            const headerName = userAgentHeader.toLowerCase();\n            request.headers[headerName] = request.headers[headerName]\n                ? `${request.headers[headerName]} ${userAgentValue}`\n                : userAgentValue;\n            const response = await next(request);\n            return response;\n        }\n    };\n};\n\nexport { userAgentMiddlewareFactory };\n//# sourceMappingURL=middleware.mjs.map\n","import { composeTransferHandler } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { unauthenticatedHandler } from '@aws-amplify/core/internals/aws-client-utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * A Cognito Identity-specific middleware that disables caching for all requests.\n */\nconst disableCacheMiddlewareFactory = () => (next, _) => async function disableCacheMiddleware(request) {\n    request.headers['cache-control'] = 'no-store';\n    return next(request);\n};\n/**\n * A Cognito Identity-specific transfer handler that does NOT sign requests, and\n * disables caching.\n *\n * @internal\n */\nconst cognitoUserPoolTransferHandler = composeTransferHandler(unauthenticatedHandler, [disableCacheMiddlewareFactory]);\n\nexport { cognitoUserPoolTransferHandler };\n//# sourceMappingURL=cognitoUserPoolTransferHandler.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// via https://github.com/aws/aws-sdk-js-v3/blob/ab0e7be36e7e7f8a0c04834357aaad643c7912c3/packages/service-error-classification/src/constants.ts#L8\nconst CLOCK_SKEW_ERROR_CODES = [\n    'AuthFailure',\n    'InvalidSignatureException',\n    'RequestExpired',\n    'RequestInTheFuture',\n    'RequestTimeTooSkewed',\n    'SignatureDoesNotMatch',\n    'BadRequestException', // API Gateway\n];\n/**\n * Given an error code, returns true if it is related to a clock skew error.\n *\n * @param errorCode String representation of some error.\n * @returns True if given error is present in `CLOCK_SKEW_ERROR_CODES`, false otherwise.\n *\n * @internal\n */\nconst isClockSkewError = (errorCode) => !!errorCode && CLOCK_SKEW_ERROR_CODES.includes(errorCode);\n\nexport { isClockSkewError };\n//# sourceMappingURL=isClockSkewError.mjs.map\n","import { AmplifyErrorCode } from '../../../types/errors.mjs';\nimport { isClockSkewError } from './isClockSkewError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Get retry decider function\n * @param errorParser Function to load JavaScript error from HTTP response\n */\nconst getRetryDecider = (errorParser) => async (response, error) => {\n    const parsedError = error ??\n        (await errorParser(response)) ??\n        undefined;\n    const errorCode = parsedError?.code || parsedError?.name;\n    const statusCode = response?.statusCode;\n    const isRetryable = isConnectionError(error) ||\n        isThrottlingError(statusCode, errorCode) ||\n        isClockSkewError(errorCode) ||\n        isServerSideError(statusCode, errorCode);\n    return {\n        retryable: isRetryable,\n    };\n};\n// reference: https://github.com/aws/aws-sdk-js-v3/blob/ab0e7be36e7e7f8a0c04834357aaad643c7912c3/packages/service-error-classification/src/constants.ts#L22-L37\nconst THROTTLING_ERROR_CODES = [\n    'BandwidthLimitExceeded',\n    'EC2ThrottledException',\n    'LimitExceededException',\n    'PriorRequestNotComplete',\n    'ProvisionedThroughputExceededException',\n    'RequestLimitExceeded',\n    'RequestThrottled',\n    'RequestThrottledException',\n    'SlowDown',\n    'ThrottledException',\n    'Throttling',\n    'ThrottlingException',\n    'TooManyRequestsException',\n];\nconst TIMEOUT_ERROR_CODES = [\n    'TimeoutError',\n    'RequestTimeout',\n    'RequestTimeoutException',\n];\nconst isThrottlingError = (statusCode, errorCode) => statusCode === 429 ||\n    (!!errorCode && THROTTLING_ERROR_CODES.includes(errorCode));\nconst isConnectionError = (error) => [\n    AmplifyErrorCode.NetworkError,\n    // TODO(vNext): unify the error code `ERR_NETWORK` used by the Storage XHR handler\n    'ERR_NETWORK',\n].includes(error?.name);\nconst isServerSideError = (statusCode, errorCode) => (!!statusCode && [500, 502, 503, 504].includes(statusCode)) ||\n    (!!errorCode && TIMEOUT_ERROR_CODES.includes(errorCode));\n\nexport { getRetryDecider };\n//# sourceMappingURL=defaultRetryDecider.mjs.map\n","import '../../../utils/getClientInfo/getClientInfo.mjs';\nimport { jitteredBackoff as jitteredBackoff$1 } from '../../../utils/retry/jitteredBackoff.mjs';\nimport '../../../utils/retry/retry.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO: [v6] The separate retry utility is used by Data packages now and will replaced by retry middleware.\nconst DEFAULT_MAX_DELAY_MS = 5 * 60 * 1000;\nconst jitteredBackoff = attempt => {\n    const delayFunction = jitteredBackoff$1(DEFAULT_MAX_DELAY_MS);\n    const delay = delayFunction(attempt);\n    // The delayFunction returns false when the delay is greater than the max delay(5 mins).\n    // In this case, the retry middleware will delay 5 mins instead, as a ceiling of the delay.\n    return delay === false ? DEFAULT_MAX_DELAY_MS : delay;\n};\n\nexport { jitteredBackoff };\n//# sourceMappingURL=jitteredBackoff.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nconst COGNITO_IDP_SERVICE_NAME = 'cognito-idp';\n\nexport { COGNITO_IDP_SERVICE_NAME };\n//# sourceMappingURL=constants.mjs.map\n","import { getRetryDecider, parseJsonError, jitteredBackoff } from '@aws-amplify/core/internals/aws-client-utils';\nimport { getAmplifyUserAgent } from '@aws-amplify/core/internals/utils';\nimport { COGNITO_IDP_SERVICE_NAME } from '../../../constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst DEFAULT_SERVICE_CLIENT_API_CONFIG = {\n    service: COGNITO_IDP_SERVICE_NAME,\n    retryDecider: getRetryDecider(parseJsonError),\n    computeDelay: jitteredBackoff,\n    userAgentValue: getAmplifyUserAgent(),\n    cache: 'no-store',\n};\n\nexport { DEFAULT_SERVICE_CLIENT_API_CONFIG };\n//# sourceMappingURL=constants.mjs.map\n","import { MAX_DELAY_MS } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @private\n * Internal use of Amplify only\n */\nfunction jitteredBackoff(maxDelayMs = MAX_DELAY_MS) {\n    const BASE_TIME_MS = 100;\n    const JITTER_FACTOR = 100;\n    return attempt => {\n        const delay = 2 ** attempt * BASE_TIME_MS + JITTER_FACTOR * Math.random();\n        return delay > maxDelayMs ? false : delay;\n    };\n}\n\nexport { jitteredBackoff };\n//# sourceMappingURL=jitteredBackoff.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst MAX_DELAY_MS = 5 * 60 * 1000;\n\nexport { MAX_DELAY_MS };\n//# sourceMappingURL=constants.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createInitiateAuthClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('InitiateAuth'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createInitiateAuthClient };\n//# sourceMappingURL=createInitiateAuthClient.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createRespondToAuthChallengeClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('RespondToAuthChallenge'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createRespondToAuthChallengeClient };\n//# sourceMappingURL=createRespondToAuthChallengeClient.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createVerifySoftwareTokenClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('VerifySoftwareToken'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createVerifySoftwareTokenClient };\n//# sourceMappingURL=createVerifySoftwareTokenClient.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createAssociateSoftwareTokenClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('AssociateSoftwareToken'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createAssociateSoftwareTokenClient };\n//# sourceMappingURL=createAssociateSoftwareTokenClient.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createConfirmDeviceClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ConfirmDevice'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createConfirmDeviceClient };\n//# sourceMappingURL=createConfirmDeviceClient.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Default partition for AWS services. This is used when the region is not provided or the region is not recognized.\n *\n * @internal\n */\nconst defaultPartition = {\n    id: 'aws',\n    outputs: {\n        dnsSuffix: 'amazonaws.com',\n    },\n    regionRegex: '^(us|eu|ap|sa|ca|me|af)\\\\-\\\\w+\\\\-\\\\d+$',\n    regions: ['aws-global'],\n};\n/**\n * This data is adapted from the partition file from AWS SDK shared utilities but remove some contents for bundle size\n * concern. Information removed are `dualStackDnsSuffix`, `supportDualStack`, `supportFIPS`, restricted partitions, and\n * list of regions for each partition other than global regions.\n *\n * * Ref: https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints\n * * Ref: https://github.com/aws/aws-sdk-js-v3/blob/0201baef03c2379f1f6f7150b9d401d4b230d488/packages/util-endpoints/src/lib/aws/partitions.json#L1\n *\n * @internal\n */\nconst partitionsInfo = {\n    partitions: [\n        defaultPartition,\n        {\n            id: 'aws-cn',\n            outputs: {\n                dnsSuffix: 'amazonaws.com.cn',\n            },\n            regionRegex: '^cn\\\\-\\\\w+\\\\-\\\\d+$',\n            regions: ['aws-cn-global'],\n        },\n    ],\n};\n\nexport { defaultPartition, partitionsInfo };\n//# sourceMappingURL=partitions.mjs.map\n","import { defaultPartition, partitionsInfo } from './partitions.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Get the AWS Services endpoint URL's DNS suffix for a given region. A typical AWS regional service endpoint URL will\n * follow this pattern: {endpointPrefix}.{region}.{dnsSuffix}. For example, the endpoint URL for Cognito Identity in\n * us-east-1 will be cognito-identity.us-east-1.amazonaws.com. Here the DnsSuffix is `amazonaws.com`.\n *\n * @param region\n * @returns The DNS suffix\n *\n * @internal\n */\nconst getDnsSuffix = (region) => {\n    const { partitions } = partitionsInfo;\n    for (const { regions, outputs, regionRegex } of partitions) {\n        const regex = new RegExp(regionRegex);\n        if (regions.includes(region) || regex.test(region)) {\n            return outputs.dnsSuffix;\n        }\n    }\n    return defaultPartition.outputs.dnsSuffix;\n};\n\nexport { getDnsSuffix };\n//# sourceMappingURL=getDnsSuffix.mjs.map\n","import { AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { cognitoUserPoolEndpointResolver } from '../../../foundation/cognitoUserPoolEndpointResolver.mjs';\n\nconst createCognitoUserPoolEndpointResolver = ({ endpointOverride }) => (input) => {\n    if (endpointOverride) {\n        return { url: new AmplifyUrl(endpointOverride) };\n    }\n    return cognitoUserPoolEndpointResolver(input);\n};\n\nexport { createCognitoUserPoolEndpointResolver };\n//# sourceMappingURL=createCognitoUserPoolEndpointResolver.mjs.map\n","import { getDnsSuffix } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { COGNITO_IDP_SERVICE_NAME } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst cognitoUserPoolEndpointResolver = ({ region, }) => ({\n    url: new AmplifyUrl(`https://${COGNITO_IDP_SERVICE_NAME}.${region}.${getDnsSuffix(region)}`),\n});\n\nexport { cognitoUserPoolEndpointResolver };\n//# sourceMappingURL=cognitoUserPoolEndpointResolver.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction getUserContextData({ username, userPoolId, userPoolClientId, }) {\n    if (typeof window === 'undefined') {\n        return undefined;\n    }\n    const amazonCognitoAdvancedSecurityData = window\n        .AmazonCognitoAdvancedSecurityData;\n    if (typeof amazonCognitoAdvancedSecurityData === 'undefined') {\n        return undefined;\n    }\n    const advancedSecurityData = amazonCognitoAdvancedSecurityData.getData(username, userPoolId, userPoolClientId);\n    if (advancedSecurityData) {\n        const userContextData = {\n            EncodedData: advancedSecurityData,\n        };\n        return userContextData;\n    }\n    return {};\n}\n\nexport { getUserContextData };\n//# sourceMappingURL=userContextData.mjs.map\n","import { deDupeAsyncFunction, assertTokenProviderConfig, decodeJWT } from '@aws-amplify/core/internals/utils';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokensWithRefreshToken } from './types.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { createInitiateAuthClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createInitiateAuthClient.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\nimport '@aws-amplify/core';\nimport { getUserContextData } from './userContextData.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst refreshAuthTokensFunction = async ({ tokens, authConfig, username, }) => {\n    assertTokenProviderConfig(authConfig?.Cognito);\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = authConfig.Cognito;\n    const region = getRegionFromUserPoolId(userPoolId);\n    assertAuthTokensWithRefreshToken(tokens);\n    const refreshTokenString = tokens.refreshToken;\n    const AuthParameters = {\n        REFRESH_TOKEN: refreshTokenString,\n    };\n    if (tokens.deviceMetadata?.deviceKey) {\n        AuthParameters.DEVICE_KEY = tokens.deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const initiateAuth = createInitiateAuthClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { AuthenticationResult } = await initiateAuth({ region }, {\n        ClientId: userPoolClientId,\n        AuthFlow: 'REFRESH_TOKEN_AUTH',\n        AuthParameters,\n        UserContextData,\n    });\n    const accessToken = decodeJWT(AuthenticationResult?.AccessToken ?? '');\n    const idToken = AuthenticationResult?.IdToken\n        ? decodeJWT(AuthenticationResult.IdToken)\n        : undefined;\n    const { iat } = accessToken.payload;\n    // This should never happen. If it does, it's a bug from the service.\n    if (!iat) {\n        throw new AuthError({\n            name: 'iatNotFoundException',\n            message: 'iat not found in access token',\n        });\n    }\n    const clockDrift = iat * 1000 - new Date().getTime();\n    return {\n        accessToken,\n        idToken,\n        clockDrift,\n        refreshToken: refreshTokenString,\n        username,\n    };\n};\nconst refreshAuthTokens = deDupeAsyncFunction(refreshAuthTokensFunction);\nconst refreshAuthTokensWithoutDedupe = refreshAuthTokensFunction;\n\nexport { refreshAuthTokens, refreshAuthTokensWithoutDedupe };\n//# sourceMappingURL=refreshAuthTokens.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * returns in-flight promise if there is one\n *\n * @param asyncFunction - asyncFunction to be deduped.\n * @returns - the return type of the callback\n */\nconst deDupeAsyncFunction = (asyncFunction) => {\n    let inflightPromise;\n    return async (...args) => {\n        if (inflightPromise)\n            return inflightPromise;\n        inflightPromise = new Promise((resolve, reject) => {\n            asyncFunction(...args)\n                .then(result => {\n                resolve(result);\n            })\n                .catch(error => {\n                reject(error);\n            })\n                .finally(() => {\n                inflightPromise = undefined;\n            });\n        });\n        return inflightPromise;\n    };\n};\n\nexport { deDupeAsyncFunction };\n//# sourceMappingURL=deDupeAsyncFunction.mjs.map\n","const AuthTokenStorageKeys = {\n    accessToken: 'accessToken',\n    idToken: 'idToken',\n    oidcProvider: 'oidcProvider',\n    clockDrift: 'clockDrift',\n    refreshToken: 'refreshToken',\n    deviceKey: 'deviceKey',\n    randomPasswordKey: 'randomPasswordKey',\n    deviceGroupKey: 'deviceGroupKey',\n    signInDetails: 'signInDetails',\n    oauthMetadata: 'oauthMetadata',\n};\n\nexport { AuthTokenStorageKeys };\n//# sourceMappingURL=types.mjs.map\n","import { createAssertionFunction } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar TokenProviderErrorCode;\n(function (TokenProviderErrorCode) {\n    TokenProviderErrorCode[\"InvalidAuthTokens\"] = \"InvalidAuthTokens\";\n})(TokenProviderErrorCode || (TokenProviderErrorCode = {}));\nconst tokenValidationErrorMap = {\n    [TokenProviderErrorCode.InvalidAuthTokens]: {\n        message: 'Invalid tokens.',\n        recoverySuggestion: 'Make sure the tokens are valid.',\n    },\n};\nconst assert = createAssertionFunction(tokenValidationErrorMap);\n\nexport { TokenProviderErrorCode, assert };\n//# sourceMappingURL=errorHelpers.mjs.map\n","import { decodeJWT, assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { AuthTokenStorageKeys } from './types.mjs';\nimport { assert, TokenProviderErrorCode } from './errorHelpers.mjs';\n\nclass DefaultTokenStore {\n    constructor() {\n        this.name = 'CognitoIdentityServiceProvider'; // To be backwards compatible with V5, no migration needed\n    }\n    getKeyValueStorage() {\n        if (!this.keyValueStorage) {\n            throw new AuthError({\n                name: 'KeyValueStorageNotFoundException',\n                message: 'KeyValueStorage was not found in TokenStore',\n            });\n        }\n        return this.keyValueStorage;\n    }\n    setKeyValueStorage(keyValueStorage) {\n        this.keyValueStorage = keyValueStorage;\n    }\n    setAuthConfig(authConfig) {\n        this.authConfig = authConfig;\n    }\n    async loadTokens() {\n        // TODO(v6): migration logic should be here\n        // Reading V5 tokens old format\n        try {\n            const authKeys = await this.getAuthKeys();\n            const accessTokenString = await this.getKeyValueStorage().getItem(authKeys.accessToken);\n            if (!accessTokenString) {\n                throw new AuthError({\n                    name: 'NoSessionFoundException',\n                    message: 'Auth session was not found. Make sure to call signIn.',\n                });\n            }\n            const accessToken = decodeJWT(accessTokenString);\n            const itString = await this.getKeyValueStorage().getItem(authKeys.idToken);\n            const idToken = itString ? decodeJWT(itString) : undefined;\n            const refreshToken = (await this.getKeyValueStorage().getItem(authKeys.refreshToken)) ??\n                undefined;\n            const clockDriftString = (await this.getKeyValueStorage().getItem(authKeys.clockDrift)) ?? '0';\n            const clockDrift = Number.parseInt(clockDriftString);\n            const signInDetails = await this.getKeyValueStorage().getItem(authKeys.signInDetails);\n            const tokens = {\n                accessToken,\n                idToken,\n                refreshToken,\n                deviceMetadata: (await this.getDeviceMetadata()) ?? undefined,\n                clockDrift,\n                username: await this.getLastAuthUser(),\n            };\n            if (signInDetails) {\n                tokens.signInDetails = JSON.parse(signInDetails);\n            }\n            return tokens;\n        }\n        catch (err) {\n            return null;\n        }\n    }\n    async storeTokens(tokens) {\n        assert(tokens !== undefined, TokenProviderErrorCode.InvalidAuthTokens);\n        await this.clearTokens();\n        const lastAuthUser = tokens.username;\n        await this.getKeyValueStorage().setItem(this.getLastAuthUserKey(), lastAuthUser);\n        const authKeys = await this.getAuthKeys();\n        await this.getKeyValueStorage().setItem(authKeys.accessToken, tokens.accessToken.toString());\n        if (tokens.idToken) {\n            await this.getKeyValueStorage().setItem(authKeys.idToken, tokens.idToken.toString());\n        }\n        if (tokens.refreshToken) {\n            await this.getKeyValueStorage().setItem(authKeys.refreshToken, tokens.refreshToken);\n        }\n        if (tokens.deviceMetadata) {\n            if (tokens.deviceMetadata.deviceKey) {\n                await this.getKeyValueStorage().setItem(authKeys.deviceKey, tokens.deviceMetadata.deviceKey);\n            }\n            if (tokens.deviceMetadata.deviceGroupKey) {\n                await this.getKeyValueStorage().setItem(authKeys.deviceGroupKey, tokens.deviceMetadata.deviceGroupKey);\n            }\n            await this.getKeyValueStorage().setItem(authKeys.randomPasswordKey, tokens.deviceMetadata.randomPassword);\n        }\n        if (tokens.signInDetails) {\n            await this.getKeyValueStorage().setItem(authKeys.signInDetails, JSON.stringify(tokens.signInDetails));\n        }\n        await this.getKeyValueStorage().setItem(authKeys.clockDrift, `${tokens.clockDrift}`);\n    }\n    async clearTokens() {\n        const authKeys = await this.getAuthKeys();\n        // Not calling clear because it can remove data that is not managed by AuthTokenStore\n        await Promise.all([\n            this.getKeyValueStorage().removeItem(authKeys.accessToken),\n            this.getKeyValueStorage().removeItem(authKeys.idToken),\n            this.getKeyValueStorage().removeItem(authKeys.clockDrift),\n            this.getKeyValueStorage().removeItem(authKeys.refreshToken),\n            this.getKeyValueStorage().removeItem(authKeys.signInDetails),\n            this.getKeyValueStorage().removeItem(this.getLastAuthUserKey()),\n            this.getKeyValueStorage().removeItem(authKeys.oauthMetadata),\n        ]);\n    }\n    async getDeviceMetadata(username) {\n        const authKeys = await this.getAuthKeys(username);\n        const deviceKey = await this.getKeyValueStorage().getItem(authKeys.deviceKey);\n        const deviceGroupKey = await this.getKeyValueStorage().getItem(authKeys.deviceGroupKey);\n        const randomPassword = await this.getKeyValueStorage().getItem(authKeys.randomPasswordKey);\n        return randomPassword && deviceGroupKey && deviceKey\n            ? {\n                deviceKey,\n                deviceGroupKey,\n                randomPassword,\n            }\n            : null;\n    }\n    async clearDeviceMetadata(username) {\n        const authKeys = await this.getAuthKeys(username);\n        await Promise.all([\n            this.getKeyValueStorage().removeItem(authKeys.deviceKey),\n            this.getKeyValueStorage().removeItem(authKeys.deviceGroupKey),\n            this.getKeyValueStorage().removeItem(authKeys.randomPasswordKey),\n        ]);\n    }\n    async getAuthKeys(username) {\n        assertTokenProviderConfig(this.authConfig?.Cognito);\n        const lastAuthUser = username ?? (await this.getLastAuthUser());\n        return createKeysForAuthStorage(this.name, `${this.authConfig.Cognito.userPoolClientId}.${lastAuthUser}`);\n    }\n    getLastAuthUserKey() {\n        assertTokenProviderConfig(this.authConfig?.Cognito);\n        const identifier = this.authConfig.Cognito.userPoolClientId;\n        return `${this.name}.${identifier}.LastAuthUser`;\n    }\n    async getLastAuthUser() {\n        const lastAuthUser = (await this.getKeyValueStorage().getItem(this.getLastAuthUserKey())) ??\n            'username';\n        return lastAuthUser;\n    }\n    async setOAuthMetadata(metadata) {\n        const { oauthMetadata: oauthMetadataKey } = await this.getAuthKeys();\n        await this.getKeyValueStorage().setItem(oauthMetadataKey, JSON.stringify(metadata));\n    }\n    async getOAuthMetadata() {\n        const { oauthMetadata: oauthMetadataKey } = await this.getAuthKeys();\n        const oauthMetadata = await this.getKeyValueStorage().getItem(oauthMetadataKey);\n        return oauthMetadata && JSON.parse(oauthMetadata);\n    }\n}\nconst createKeysForAuthStorage = (provider, identifier) => {\n    return getAuthStorageKeys(AuthTokenStorageKeys)(`${provider}`, identifier);\n};\nfunction getAuthStorageKeys(authKeys) {\n    const keys = Object.values({ ...authKeys });\n    return (prefix, identifier) => keys.reduce((acc, authKey) => ({\n        ...acc,\n        [authKey]: `${prefix}.${identifier}.${authKey}`,\n    }), {});\n}\n\nexport { DefaultTokenStore, createKeysForAuthStorage, getAuthStorageKeys };\n//# sourceMappingURL=TokenStore.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined';\n\nexport { isBrowser };\n//# sourceMappingURL=isBrowser.mjs.map\n","import { ConsoleLogger } from '../../Logger/ConsoleLogger.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('Auth');\nfunction isTokenExpired({ expiresAt, clockDrift, }) {\n    const currentTime = Date.now();\n    return currentTime + clockDrift > expiresAt;\n}\nclass AuthClass {\n    /**\n     * Configure Auth category\n     *\n     * @internal\n     *\n     * @param authResourcesConfig - Resources configurations required by Auth providers.\n     * @param authOptions - Client options used by library\n     *\n     * @returns void\n     */\n    configure(authResourcesConfig, authOptions) {\n        this.authConfig = authResourcesConfig;\n        this.authOptions = authOptions;\n        if (authResourcesConfig.Cognito.userPoolEndpoint) {\n            logger.warn(getCustomEndpointWarningMessage('Amazon Cognito User Pool'));\n        }\n        if (authResourcesConfig.Cognito.identityPoolEndpoint) {\n            logger.warn(getCustomEndpointWarningMessage('Amazon Cognito Identity Pool'));\n        }\n    }\n    /**\n     * Fetch the auth tokens, and the temporary AWS credentials and identity if they are configured. By default it\n     * does not refresh the auth tokens or credentials if they are loaded in storage already. You can force a refresh\n     * with `{ forceRefresh: true }` input.\n     *\n     * @param options - Options configuring the fetch behavior.\n     *\n     * @returns Promise of current auth session {@link AuthSession}.\n     */\n    async fetchAuthSession(options = {}) {\n        let credentialsAndIdentityId;\n        let userSub;\n        // Get tokens will throw if session cannot be refreshed (network or service error) or return null if not available\n        const tokens = await this.getTokens(options);\n        if (tokens) {\n            userSub = tokens.accessToken?.payload?.sub;\n            // getCredentialsAndIdentityId will throw if cannot get credentials (network or service error)\n            credentialsAndIdentityId =\n                await this.authOptions?.credentialsProvider?.getCredentialsAndIdentityId({\n                    authConfig: this.authConfig,\n                    tokens,\n                    authenticated: true,\n                    forceRefresh: options.forceRefresh,\n                });\n        }\n        else {\n            // getCredentialsAndIdentityId will throw if cannot get credentials (network or service error)\n            credentialsAndIdentityId =\n                await this.authOptions?.credentialsProvider?.getCredentialsAndIdentityId({\n                    authConfig: this.authConfig,\n                    authenticated: false,\n                    forceRefresh: options.forceRefresh,\n                });\n        }\n        return {\n            tokens,\n            credentials: credentialsAndIdentityId?.credentials,\n            identityId: credentialsAndIdentityId?.identityId,\n            userSub,\n        };\n    }\n    async clearCredentials() {\n        await this.authOptions?.credentialsProvider?.clearCredentialsAndIdentityId();\n    }\n    async getTokens(options) {\n        return ((await this.authOptions?.tokenProvider?.getTokens(options)) ?? undefined);\n    }\n}\nconst getCustomEndpointWarningMessage = (target) => `You are using a custom Amazon ${target} endpoint, ensure the endpoint is correct.`;\n\nexport { AuthClass, isTokenExpired };\n//# sourceMappingURL=index.mjs.map\n","import { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { getAuthStorageKeys } from '../tokenProvider/TokenStore.mjs';\nimport { OAuthStorageKeys } from './types.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst V5_HOSTED_UI_KEY = 'amplify-signin-with-hostedUI';\nconst name = 'CognitoIdentityServiceProvider';\nclass DefaultOAuthStore {\n    constructor(keyValueStorage) {\n        this.keyValueStorage = keyValueStorage;\n    }\n    async clearOAuthInflightData() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await Promise.all([\n            this.keyValueStorage.removeItem(authKeys.inflightOAuth),\n            this.keyValueStorage.removeItem(authKeys.oauthPKCE),\n            this.keyValueStorage.removeItem(authKeys.oauthState),\n        ]);\n    }\n    async clearOAuthData() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await this.clearOAuthInflightData();\n        await this.keyValueStorage.removeItem(V5_HOSTED_UI_KEY); // remove in case a customer migrated an App from v5 to v6\n        return this.keyValueStorage.removeItem(authKeys.oauthSignIn);\n    }\n    loadOAuthState() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.getItem(authKeys.oauthState);\n    }\n    storeOAuthState(state) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.setItem(authKeys.oauthState, state);\n    }\n    loadPKCE() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.getItem(authKeys.oauthPKCE);\n    }\n    storePKCE(pkce) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.setItem(authKeys.oauthPKCE, pkce);\n    }\n    setAuthConfig(authConfigParam) {\n        this.cognitoConfig = authConfigParam;\n    }\n    async loadOAuthInFlight() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return ((await this.keyValueStorage.getItem(authKeys.inflightOAuth)) === 'true');\n    }\n    async storeOAuthInFlight(inflight) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await this.keyValueStorage.setItem(authKeys.inflightOAuth, `${inflight}`);\n    }\n    async loadOAuthSignIn() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        const isLegacyHostedUISignIn = await this.keyValueStorage.getItem(V5_HOSTED_UI_KEY);\n        const [isOAuthSignIn, preferPrivateSession] = (await this.keyValueStorage.getItem(authKeys.oauthSignIn))?.split(',') ??\n            [];\n        return {\n            isOAuthSignIn: isOAuthSignIn === 'true' || isLegacyHostedUISignIn === 'true',\n            preferPrivateSession: preferPrivateSession === 'true',\n        };\n    }\n    async storeOAuthSignIn(oauthSignIn, preferPrivateSession = false) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await this.keyValueStorage.setItem(authKeys.oauthSignIn, `${oauthSignIn},${preferPrivateSession}`);\n    }\n}\nconst createKeysForAuthStorage = (provider, identifier) => {\n    return getAuthStorageKeys(OAuthStorageKeys)(provider, identifier);\n};\n\nexport { DefaultOAuthStore };\n//# sourceMappingURL=signInWithRedirectStore.mjs.map\n","import { defaultStorage } from '@aws-amplify/core';\nimport { DefaultOAuthStore } from '../signInWithRedirectStore.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst oAuthStore = new DefaultOAuthStore(defaultStorage);\n\nexport { oAuthStore };\n//# sourceMappingURL=oAuthStore.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst inflightPromises = [];\nconst addInflightPromise = (resolver) => {\n    inflightPromises.push(resolver);\n};\nconst resolveAndClearInflightPromises = () => {\n    while (inflightPromises.length) {\n        inflightPromises.pop()?.();\n    }\n};\n\nexport { addInflightPromise, resolveAndClearInflightPromises };\n//# sourceMappingURL=inflightPromise.mjs.map\n","import { Hub } from '@aws-amplify/core';\nimport { isBrowser, assertTokenProviderConfig, isTokenExpired, AMPLIFY_SYMBOL, AmplifyErrorCode } from '@aws-amplify/core/internals/utils';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { oAuthStore } from '../utils/oauth/oAuthStore.mjs';\nimport { addInflightPromise } from '../utils/oauth/inflightPromise.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass TokenOrchestrator {\n    constructor() {\n        this.waitForInflightOAuth = isBrowser()\n            ? async () => {\n                if (!(await oAuthStore.loadOAuthInFlight())) {\n                    return;\n                }\n                if (this.inflightPromise) {\n                    return this.inflightPromise;\n                }\n                // when there is valid oauth config and there is an inflight oauth flow, try\n                // to block async calls that require fetching tokens before the oauth flow completes\n                // e.g. getCurrentUser, fetchAuthSession etc.\n                this.inflightPromise = new Promise((resolve, _reject) => {\n                    addInflightPromise(resolve);\n                });\n                return this.inflightPromise;\n            }\n            : async () => {\n                // no-op for non-browser environments\n            };\n    }\n    setAuthConfig(authConfig) {\n        oAuthStore.setAuthConfig(authConfig.Cognito);\n        this.authConfig = authConfig;\n    }\n    setTokenRefresher(tokenRefresher) {\n        this.tokenRefresher = tokenRefresher;\n    }\n    setAuthTokenStore(tokenStore) {\n        this.tokenStore = tokenStore;\n    }\n    getTokenStore() {\n        if (!this.tokenStore) {\n            throw new AuthError({\n                name: 'EmptyTokenStoreException',\n                message: 'TokenStore not set',\n            });\n        }\n        return this.tokenStore;\n    }\n    getTokenRefresher() {\n        if (!this.tokenRefresher) {\n            throw new AuthError({\n                name: 'EmptyTokenRefresherException',\n                message: 'TokenRefresher not set',\n            });\n        }\n        return this.tokenRefresher;\n    }\n    async getTokens(options) {\n        let tokens;\n        try {\n            assertTokenProviderConfig(this.authConfig?.Cognito);\n        }\n        catch (_err) {\n            // Token provider not configured\n            return null;\n        }\n        await this.waitForInflightOAuth();\n        this.inflightPromise = undefined;\n        tokens = await this.getTokenStore().loadTokens();\n        const username = await this.getTokenStore().getLastAuthUser();\n        if (tokens === null) {\n            return null;\n        }\n        const idTokenExpired = !!tokens?.idToken &&\n            isTokenExpired({\n                expiresAt: (tokens.idToken?.payload?.exp ?? 0) * 1000,\n                clockDrift: tokens.clockDrift ?? 0,\n            });\n        const accessTokenExpired = isTokenExpired({\n            expiresAt: (tokens.accessToken?.payload?.exp ?? 0) * 1000,\n            clockDrift: tokens.clockDrift ?? 0,\n        });\n        if (options?.forceRefresh || idTokenExpired || accessTokenExpired) {\n            tokens = await this.refreshTokens({\n                tokens,\n                username,\n            });\n            if (tokens === null) {\n                return null;\n            }\n        }\n        return {\n            accessToken: tokens?.accessToken,\n            idToken: tokens?.idToken,\n            signInDetails: tokens?.signInDetails,\n        };\n    }\n    async refreshTokens({ tokens, username, }) {\n        try {\n            const { signInDetails } = tokens;\n            const newTokens = await this.getTokenRefresher()({\n                tokens,\n                authConfig: this.authConfig,\n                username,\n            });\n            newTokens.signInDetails = signInDetails;\n            await this.setTokens({ tokens: newTokens });\n            Hub.dispatch('auth', { event: 'tokenRefresh' }, 'Auth', AMPLIFY_SYMBOL);\n            return newTokens;\n        }\n        catch (err) {\n            return this.handleErrors(err);\n        }\n    }\n    handleErrors(err) {\n        assertServiceError(err);\n        if (err.name !== AmplifyErrorCode.NetworkError) {\n            // TODO(v6): Check errors on client\n            this.clearTokens();\n        }\n        Hub.dispatch('auth', {\n            event: 'tokenRefresh_failure',\n            data: { error: err },\n        }, 'Auth', AMPLIFY_SYMBOL);\n        if (err.name.startsWith('NotAuthorizedException')) {\n            return null;\n        }\n        throw err;\n    }\n    async setTokens({ tokens }) {\n        return this.getTokenStore().storeTokens(tokens);\n    }\n    async clearTokens() {\n        return this.getTokenStore().clearTokens();\n    }\n    getDeviceMetadata(username) {\n        return this.getTokenStore().getDeviceMetadata(username);\n    }\n    clearDeviceMetadata(username) {\n        return this.getTokenStore().clearDeviceMetadata(username);\n    }\n    setOAuthMetadata(metadata) {\n        return this.getTokenStore().setOAuthMetadata(metadata);\n    }\n    getOAuthMetadata() {\n        return this.getTokenStore().getOAuthMetadata();\n    }\n}\n\nexport { TokenOrchestrator };\n//# sourceMappingURL=TokenOrchestrator.mjs.map\n","import { CognitoUserPoolsTokenProvider } from './CognitoUserPoolsTokenProvider.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * The default provider for the JWT access token and ID token issued from the configured Cognito user pool. It manages\n * the refresh and storage of the tokens. It stores the tokens in `window.localStorage` if available, and falls back to\n * in-memory storage if not.\n */\nconst cognitoUserPoolsTokenProvider = new CognitoUserPoolsTokenProvider();\nconst { tokenOrchestrator } = cognitoUserPoolsTokenProvider;\n\nexport { cognitoUserPoolsTokenProvider, tokenOrchestrator };\n//# sourceMappingURL=tokenProvider.mjs.map\n","import { defaultStorage } from '@aws-amplify/core';\nimport { refreshAuthTokens } from '../utils/refreshAuthTokens.mjs';\nimport { DefaultTokenStore } from './TokenStore.mjs';\nimport { TokenOrchestrator } from './TokenOrchestrator.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass CognitoUserPoolsTokenProvider {\n    constructor() {\n        this.authTokenStore = new DefaultTokenStore();\n        this.authTokenStore.setKeyValueStorage(defaultStorage);\n        this.tokenOrchestrator = new TokenOrchestrator();\n        this.tokenOrchestrator.setAuthTokenStore(this.authTokenStore);\n        this.tokenOrchestrator.setTokenRefresher(refreshAuthTokens);\n    }\n    getTokens({ forceRefresh } = { forceRefresh: false }) {\n        return this.tokenOrchestrator.getTokens({ forceRefresh });\n    }\n    setKeyValueStorage(keyValueStorage) {\n        this.authTokenStore.setKeyValueStorage(keyValueStorage);\n    }\n    setAuthConfig(authConfig) {\n        this.authTokenStore.setAuthConfig(authConfig);\n        this.tokenOrchestrator.setAuthConfig(authConfig);\n    }\n}\n\nexport { CognitoUserPoolsTokenProvider };\n//# sourceMappingURL=CognitoUserPoolsTokenProvider.mjs.map\n","import { decodeJWT, AmplifyError } from '@aws-amplify/core/internals/utils';\nimport { tokenOrchestrator } from './tokenProvider.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nasync function cacheCognitoTokens(AuthenticationResult) {\n    if (AuthenticationResult.AccessToken) {\n        const accessToken = decodeJWT(AuthenticationResult.AccessToken);\n        const accessTokenIssuedAtInMillis = (accessToken.payload.iat || 0) * 1000;\n        const currentTime = new Date().getTime();\n        const clockDrift = accessTokenIssuedAtInMillis > 0\n            ? accessTokenIssuedAtInMillis - currentTime\n            : 0;\n        let idToken;\n        let refreshToken;\n        let deviceMetadata;\n        if (AuthenticationResult.RefreshToken) {\n            refreshToken = AuthenticationResult.RefreshToken;\n        }\n        if (AuthenticationResult.IdToken) {\n            idToken = decodeJWT(AuthenticationResult.IdToken);\n        }\n        if (AuthenticationResult?.NewDeviceMetadata) {\n            deviceMetadata = AuthenticationResult.NewDeviceMetadata;\n        }\n        const tokens = {\n            accessToken,\n            idToken,\n            refreshToken,\n            clockDrift,\n            deviceMetadata,\n            username: AuthenticationResult.username,\n        };\n        if (AuthenticationResult?.signInDetails) {\n            tokens.signInDetails = AuthenticationResult.signInDetails;\n        }\n        await tokenOrchestrator.setTokens({\n            tokens,\n        });\n    }\n    else {\n        // This would be a service error\n        throw new AmplifyError({\n            message: 'Invalid tokens',\n            name: 'InvalidTokens',\n            recoverySuggestion: 'Check Cognito UserPool settings',\n        });\n    }\n}\n\nexport { cacheCognitoTokens };\n//# sourceMappingURL=cacheTokens.mjs.map\n","import { Hub } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport { getCurrentUser } from '../apis/getCurrentUser.mjs';\nimport { USER_UNAUTHENTICATED_EXCEPTION, UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION } from '../../../errors/constants.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst ERROR_MESSAGE = 'Unable to get user session following successful sign-in.';\nconst dispatchSignedInHubEvent = async () => {\n    try {\n        Hub.dispatch('auth', {\n            event: 'signedIn',\n            data: await getCurrentUser(),\n        }, 'Auth', AMPLIFY_SYMBOL);\n    }\n    catch (error) {\n        if (error.name === USER_UNAUTHENTICATED_EXCEPTION) {\n            throw new AuthError({\n                name: UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION,\n                message: ERROR_MESSAGE,\n                recoverySuggestion: 'This most likely is due to auth tokens not being persisted. If you are using cookie store, please ensure cookies can be correctly set from your server.',\n            });\n        }\n        throw error;\n    }\n};\n\nexport { ERROR_MESSAGE, dispatchSignedInHubEvent };\n//# sourceMappingURL=dispatchSignedInHubEvent.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst signInReducer = (state, action) => {\n    switch (action.type) {\n        case 'SET_SIGN_IN_SESSION':\n            return {\n                ...state,\n                signInSession: action.value,\n            };\n        case 'SET_SIGN_IN_STATE':\n            return {\n                ...action.value,\n            };\n        case 'SET_CHALLENGE_NAME':\n            return {\n                ...state,\n                challengeName: action.value,\n            };\n        case 'SET_USERNAME':\n            return {\n                ...state,\n                username: action.value,\n            };\n        case 'SET_INITIAL_STATE':\n            return defaultState();\n        default:\n            return state;\n    }\n};\nfunction defaultState() {\n    return {\n        username: undefined,\n        challengeName: undefined,\n        signInSession: undefined,\n    };\n}\nconst createStore = reducer => {\n    let currentState = reducer(defaultState(), { type: 'SET_INITIAL_STATE' });\n    return {\n        getState: () => currentState,\n        dispatch: action => {\n            currentState = reducer(currentState, action);\n        },\n    };\n};\nconst signInStore = createStore(signInReducer);\nfunction setActiveSignInState(state) {\n    signInStore.dispatch({\n        type: 'SET_SIGN_IN_STATE',\n        value: state,\n    });\n}\nfunction cleanActiveSignInState() {\n    signInStore.dispatch({ type: 'SET_INITIAL_STATE' });\n}\n\nexport { cleanActiveSignInState, setActiveSignInState, signInStore };\n//# sourceMappingURL=signInStore.mjs.map\n","import { createAssertionFunction, AmplifyError, AmplifyErrorCode } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass PasskeyError extends AmplifyError {\n    constructor(params) {\n        super(params);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = PasskeyError;\n        Object.setPrototypeOf(this, PasskeyError.prototype);\n    }\n}\nvar PasskeyErrorCode;\n(function (PasskeyErrorCode) {\n    // not supported\n    PasskeyErrorCode[\"PasskeyNotSupported\"] = \"PasskeyNotSupported\";\n    // duplicate passkey\n    PasskeyErrorCode[\"PasskeyAlreadyExists\"] = \"PasskeyAlreadyExists\";\n    // misconfigurations\n    PasskeyErrorCode[\"InvalidPasskeyRegistrationOptions\"] = \"InvalidPasskeyRegistrationOptions\";\n    PasskeyErrorCode[\"InvalidPasskeyAuthenticationOptions\"] = \"InvalidPasskeyAuthenticationOptions\";\n    PasskeyErrorCode[\"RelyingPartyMismatch\"] = \"RelyingPartyMismatch\";\n    // failed credential creation / retrieval\n    PasskeyErrorCode[\"PasskeyRegistrationFailed\"] = \"PasskeyRegistrationFailed\";\n    PasskeyErrorCode[\"PasskeyRetrievalFailed\"] = \"PasskeyRetrievalFailed\";\n    // cancel / aborts\n    PasskeyErrorCode[\"PasskeyRegistrationCanceled\"] = \"PasskeyRegistrationCanceled\";\n    PasskeyErrorCode[\"PasskeyAuthenticationCanceled\"] = \"PasskeyAuthenticationCanceled\";\n    PasskeyErrorCode[\"PasskeyOperationAborted\"] = \"PasskeyOperationAborted\";\n})(PasskeyErrorCode || (PasskeyErrorCode = {}));\nconst notSupportedRecoverySuggestion = 'Passkeys may not be supported on this device. Ensure your application is running in a secure context (HTTPS) and Web Authentication API is supported.';\nconst abortOrCancelRecoverySuggestion = 'User may have canceled the ceremony or another interruption has occurred. Check underlying error for details.';\nconst misconfigurationRecoverySuggestion = 'Ensure your user pool is configured to support the WEB_AUTHN as an authentication factor.';\nconst passkeyErrorMap = {\n    [PasskeyErrorCode.PasskeyNotSupported]: {\n        message: 'Passkeys may not be supported on this device.',\n        recoverySuggestion: notSupportedRecoverySuggestion,\n    },\n    [PasskeyErrorCode.InvalidPasskeyRegistrationOptions]: {\n        message: 'Invalid passkey registration options.',\n        recoverySuggestion: misconfigurationRecoverySuggestion,\n    },\n    [PasskeyErrorCode.InvalidPasskeyAuthenticationOptions]: {\n        message: 'Invalid passkey authentication options.',\n        recoverySuggestion: misconfigurationRecoverySuggestion,\n    },\n    [PasskeyErrorCode.PasskeyRegistrationFailed]: {\n        message: 'Device failed to create passkey.',\n        recoverySuggestion: notSupportedRecoverySuggestion,\n    },\n    [PasskeyErrorCode.PasskeyRetrievalFailed]: {\n        message: 'Device failed to retrieve passkey.',\n        recoverySuggestion: 'Passkeys may not be available on this device. Try an alternative authentication factor like PASSWORD, EMAIL_OTP, or SMS_OTP.',\n    },\n    [PasskeyErrorCode.PasskeyAlreadyExists]: {\n        message: 'Passkey already exists in authenticator.',\n        recoverySuggestion: 'Proceed with existing passkey or try again after deleting the credential.',\n    },\n    [PasskeyErrorCode.PasskeyRegistrationCanceled]: {\n        message: 'Passkey registration ceremony has been canceled.',\n        recoverySuggestion: abortOrCancelRecoverySuggestion,\n    },\n    [PasskeyErrorCode.PasskeyAuthenticationCanceled]: {\n        message: 'Passkey authentication ceremony has been canceled.',\n        recoverySuggestion: abortOrCancelRecoverySuggestion,\n    },\n    [PasskeyErrorCode.PasskeyOperationAborted]: {\n        message: 'Passkey operation has been aborted.',\n        recoverySuggestion: abortOrCancelRecoverySuggestion,\n    },\n    [PasskeyErrorCode.RelyingPartyMismatch]: {\n        message: 'Relying party does not match current domain.',\n        recoverySuggestion: 'Ensure relying party identifier matches current domain.',\n    },\n};\nconst assertPasskeyError = createAssertionFunction(passkeyErrorMap, PasskeyError);\n/**\n * Handle Passkey Authentication Errors\n * https://w3c.github.io/webauthn/#sctn-get-request-exceptions\n *\n * @param err unknown\n * @returns PasskeyError\n */\nconst handlePasskeyAuthenticationError = (err) => {\n    if (err instanceof PasskeyError) {\n        return err;\n    }\n    if (err instanceof Error) {\n        if (err.name === 'NotAllowedError') {\n            const { message, recoverySuggestion } = passkeyErrorMap[PasskeyErrorCode.PasskeyAuthenticationCanceled];\n            return new PasskeyError({\n                name: PasskeyErrorCode.PasskeyAuthenticationCanceled,\n                message,\n                recoverySuggestion,\n                underlyingError: err,\n            });\n        }\n    }\n    return handlePasskeyError(err);\n};\n/**\n * Handle Passkey Registration Errors\n * https://w3c.github.io/webauthn/#sctn-create-request-exceptions\n *\n * @param err unknown\n * @returns PasskeyError\n */\nconst handlePasskeyRegistrationError = (err) => {\n    if (err instanceof PasskeyError) {\n        return err;\n    }\n    if (err instanceof Error) {\n        // Duplicate Passkey\n        if (err.name === 'InvalidStateError') {\n            const { message, recoverySuggestion } = passkeyErrorMap[PasskeyErrorCode.PasskeyAlreadyExists];\n            return new PasskeyError({\n                name: PasskeyErrorCode.PasskeyAlreadyExists,\n                message,\n                recoverySuggestion,\n                underlyingError: err,\n            });\n        }\n        // User Cancels Ceremony / Generic Catch All\n        if (err.name === 'NotAllowedError') {\n            const { message, recoverySuggestion } = passkeyErrorMap[PasskeyErrorCode.PasskeyRegistrationCanceled];\n            return new PasskeyError({\n                name: PasskeyErrorCode.PasskeyRegistrationCanceled,\n                message,\n                recoverySuggestion,\n                underlyingError: err,\n            });\n        }\n    }\n    return handlePasskeyError(err);\n};\n/**\n * Handles Overlapping Passkey Errors Between Registration & Authentication\n * https://w3c.github.io/webauthn/#sctn-create-request-exceptions\n * https://w3c.github.io/webauthn/#sctn-get-request-exceptions\n *\n * @param err unknown\n * @returns PasskeyError\n */\nconst handlePasskeyError = (err) => {\n    if (err instanceof Error) {\n        // Passkey Operation Aborted\n        if (err.name === 'AbortError') {\n            const { message, recoverySuggestion } = passkeyErrorMap[PasskeyErrorCode.PasskeyOperationAborted];\n            return new PasskeyError({\n                name: PasskeyErrorCode.PasskeyOperationAborted,\n                message,\n                recoverySuggestion,\n                underlyingError: err,\n            });\n        }\n        // Relying Party / Domain Mismatch\n        if (err.name === 'SecurityError') {\n            const { message, recoverySuggestion } = passkeyErrorMap[PasskeyErrorCode.RelyingPartyMismatch];\n            return new PasskeyError({\n                name: PasskeyErrorCode.RelyingPartyMismatch,\n                message,\n                recoverySuggestion,\n                underlyingError: err,\n            });\n        }\n    }\n    return new PasskeyError({\n        name: AmplifyErrorCode.Unknown,\n        message: 'An unknown error has occurred.',\n        underlyingError: err,\n    });\n};\n\nexport { PasskeyError, PasskeyErrorCode, assertPasskeyError, handlePasskeyAuthenticationError, handlePasskeyRegistrationError };\n//# sourceMappingURL=errors.mjs.map\n","import { isBrowser } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Determines if passkey is supported in current context\n * Will return false if executed in non-secure context\n * @returns boolean\n */\nconst getIsPasskeySupported = () => {\n    return (isBrowser() &&\n        window.isSecureContext &&\n        'credentials' in navigator &&\n        typeof window.PublicKeyCredential === 'function');\n};\n\nexport { getIsPasskeySupported };\n//# sourceMappingURL=getIsPasskeySupported.mjs.map\n","import { base64Encoder } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// https://datatracker.ietf.org/doc/html/rfc4648#page-7\n/**\n * Converts an ArrayBuffer to a base64url encoded string\n * @param buffer - the ArrayBuffer instance of a Uint8Array\n * @returns string - a base64url encoded string\n */\nconst convertArrayBufferToBase64Url = (buffer) => {\n    return base64Encoder.convert(new Uint8Array(buffer), {\n        urlSafe: true,\n        skipPadding: true,\n    });\n};\n\nexport { convertArrayBufferToBase64Url };\n//# sourceMappingURL=convertArrayBufferToBase64Url.mjs.map\n","import { base64Decoder } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Converts a base64url encoded string to an ArrayBuffer\n * @param base64url - a base64url encoded string\n * @returns ArrayBuffer\n */\nconst convertBase64UrlToArrayBuffer = (base64url) => {\n    return Uint8Array.from(base64Decoder.convert(base64url, { urlSafe: true }), x => x.charCodeAt(0)).buffer;\n};\n\nexport { convertBase64UrlToArrayBuffer };\n//# sourceMappingURL=convertBase64UrlToArrayBuffer.mjs.map\n","import { assertPasskeyError, PasskeyErrorCode, handlePasskeyAuthenticationError } from './errors.mjs';\nimport { getIsPasskeySupported } from './getIsPasskeySupported.mjs';\nimport { deserializeJsonToPkcGetOptions, serializePkcWithAssertionToJson } from './serde.mjs';\nimport { assertCredentialIsPkcWithAuthenticatorAssertionResponse } from './types/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getPasskey = async (input) => {\n    try {\n        const isPasskeySupported = getIsPasskeySupported();\n        assertPasskeyError(isPasskeySupported, PasskeyErrorCode.PasskeyNotSupported);\n        const passkeyGetOptions = deserializeJsonToPkcGetOptions(input);\n        const credential = await navigator.credentials.get({\n            publicKey: passkeyGetOptions,\n        });\n        assertCredentialIsPkcWithAuthenticatorAssertionResponse(credential);\n        return serializePkcWithAssertionToJson(credential);\n    }\n    catch (err) {\n        throw handlePasskeyAuthenticationError(err);\n    }\n};\n\nexport { getPasskey };\n//# sourceMappingURL=getPasskey.mjs.map\n","import { convertArrayBufferToBase64Url } from '../../../foundation/convert/base64url/convertArrayBufferToBase64Url.mjs';\nimport { convertBase64UrlToArrayBuffer } from '../../../foundation/convert/base64url/convertBase64UrlToArrayBuffer.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Deserializes Public Key Credential Creation Options JSON\n * @param input PasskeyCreateOptionsJson\n * @returns PublicKeyCredentialCreationOptions\n */\nconst deserializeJsonToPkcCreationOptions = (input) => {\n    const userIdBuffer = convertBase64UrlToArrayBuffer(input.user.id);\n    const challengeBuffer = convertBase64UrlToArrayBuffer(input.challenge);\n    const excludeCredentialsWithBuffer = (input.excludeCredentials || []).map(excludeCred => ({\n        ...excludeCred,\n        id: convertBase64UrlToArrayBuffer(excludeCred.id),\n    }));\n    return {\n        ...input,\n        excludeCredentials: excludeCredentialsWithBuffer,\n        challenge: challengeBuffer,\n        user: {\n            ...input.user,\n            id: userIdBuffer,\n        },\n    };\n};\n/**\n * Serializes a Public Key Credential With Attestation to JSON\n * @param input PasskeyCreateResult\n * @returns PasskeyCreateResultJson\n */\nconst serializePkcWithAttestationToJson = (input) => {\n    const response = {\n        clientDataJSON: convertArrayBufferToBase64Url(input.response.clientDataJSON),\n        attestationObject: convertArrayBufferToBase64Url(input.response.attestationObject),\n        transports: input.response.getTransports(),\n        publicKeyAlgorithm: input.response.getPublicKeyAlgorithm(),\n        authenticatorData: convertArrayBufferToBase64Url(input.response.getAuthenticatorData()),\n    };\n    const publicKey = input.response.getPublicKey();\n    if (publicKey) {\n        response.publicKey = convertArrayBufferToBase64Url(publicKey);\n    }\n    const resultJson = {\n        type: input.type,\n        id: input.id,\n        rawId: convertArrayBufferToBase64Url(input.rawId),\n        clientExtensionResults: input.getClientExtensionResults(),\n        response,\n    };\n    if (input.authenticatorAttachment) {\n        resultJson.authenticatorAttachment = input.authenticatorAttachment;\n    }\n    return resultJson;\n};\n/**\n * Deserializes Public Key Credential Get Options JSON\n * @param input PasskeyGetOptionsJson\n * @returns PublicKeyCredentialRequestOptions\n */\nconst deserializeJsonToPkcGetOptions = (input) => {\n    const challengeBuffer = convertBase64UrlToArrayBuffer(input.challenge);\n    const allowedCredentialsWithBuffer = (input.allowCredentials || []).map(allowedCred => ({\n        ...allowedCred,\n        id: convertBase64UrlToArrayBuffer(allowedCred.id),\n    }));\n    return {\n        ...input,\n        challenge: challengeBuffer,\n        allowCredentials: allowedCredentialsWithBuffer,\n    };\n};\n/**\n * Serializes a Public Key Credential With Attestation to JSON\n * @param input PasskeyGetResult\n * @returns PasskeyGetResultJson\n */\nconst serializePkcWithAssertionToJson = (input) => {\n    const response = {\n        clientDataJSON: convertArrayBufferToBase64Url(input.response.clientDataJSON),\n        authenticatorData: convertArrayBufferToBase64Url(input.response.authenticatorData),\n        signature: convertArrayBufferToBase64Url(input.response.signature),\n    };\n    if (input.response.userHandle) {\n        response.userHandle = convertArrayBufferToBase64Url(input.response.userHandle);\n    }\n    const resultJson = {\n        id: input.id,\n        rawId: convertArrayBufferToBase64Url(input.rawId),\n        type: input.type,\n        clientExtensionResults: input.getClientExtensionResults(),\n        response,\n    };\n    if (input.authenticatorAttachment) {\n        resultJson.authenticatorAttachment = input.authenticatorAttachment;\n    }\n    return resultJson;\n};\n\nexport { deserializeJsonToPkcCreationOptions, deserializeJsonToPkcGetOptions, serializePkcWithAssertionToJson, serializePkcWithAttestationToJson };\n//# sourceMappingURL=serde.mjs.map\n","import { assertPasskeyError, PasskeyErrorCode } from '../errors.mjs';\nexport { assertValidCredentialCreationOptions } from './shared.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction assertCredentialIsPkcWithAuthenticatorAttestationResponse(credential) {\n    assertPasskeyError(credential &&\n        credential instanceof PublicKeyCredential &&\n        credential.response instanceof AuthenticatorAttestationResponse, PasskeyErrorCode.PasskeyRegistrationFailed);\n}\nfunction assertCredentialIsPkcWithAuthenticatorAssertionResponse(credential) {\n    assertPasskeyError(credential &&\n        credential instanceof PublicKeyCredential &&\n        credential.response instanceof AuthenticatorAssertionResponse, PasskeyErrorCode.PasskeyRetrievalFailed);\n}\n\nexport { assertCredentialIsPkcWithAuthenticatorAssertionResponse, assertCredentialIsPkcWithAuthenticatorAttestationResponse };\n//# sourceMappingURL=index.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst textEncoder = {\n    convert(input) {\n        return new TextEncoder().encode(input);\n    },\n};\n\nexport { textEncoder };\n//# sourceMappingURL=index.mjs.map\n","/* eslint-disable */\n// @ts-nocheck -> BigInteger is already a vended utility\n// A small implementation of BigInteger based on http://www-cs-students.stanford.edu/~tjw/jsbn/\n//\n// All public methods have been removed except the following:\n//   new BigInteger(a, b) (only radix 2, 4, 8, 16 and 32 supported)\n//   toString (only radix 2, 4, 8, 16 and 32 supported)\n//   negate\n//   abs\n//   compareTo\n//   bitLength\n//   mod\n//   equals\n//   add\n//   subtract\n//   multiply\n//   divide\n//   modPow\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n// (public) Constructor\nfunction BigInteger(a, b) {\n    if (a != null)\n        this.fromString(a, b);\n}\n// return new, unset BigInteger\nfunction nbi() {\n    return new BigInteger(null, null);\n}\n// Bits per digit\nlet dbits;\n// JavaScript engine analysis\nconst canary = 0xdeadbeefcafe;\nconst j_lm = (canary & 0xffffff) === 0xefcafe;\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i, x, w, j, c, n) {\n    while (--n >= 0) {\n        const v = x * this[i++] + w[j] + c;\n        c = Math.floor(v / 0x4000000);\n        w[j++] = v & 0x3ffffff;\n    }\n    return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i, x, w, j, c, n) {\n    const xl = x & 0x7fff;\n    const xh = x >> 15;\n    while (--n >= 0) {\n        let l = this[i] & 0x7fff;\n        const h = this[i++] >> 15;\n        const m = xh * l + h * xl;\n        l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\n        c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n        w[j++] = l & 0x3fffffff;\n    }\n    return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i, x, w, j, c, n) {\n    const xl = x & 0x3fff;\n    const xh = x >> 14;\n    while (--n >= 0) {\n        let l = this[i] & 0x3fff;\n        const h = this[i++] >> 14;\n        const m = xh * l + h * xl;\n        l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\n        c = (l >> 28) + (m >> 14) + xh * h;\n        w[j++] = l & 0xfffffff;\n    }\n    return c;\n}\nconst inBrowser = typeof navigator !== 'undefined';\nif (inBrowser && j_lm && navigator.appName === 'Microsoft Internet Explorer') {\n    BigInteger.prototype.am = am2;\n    dbits = 30;\n}\nelse if (inBrowser && j_lm && navigator.appName !== 'Netscape') {\n    BigInteger.prototype.am = am1;\n    dbits = 26;\n}\nelse {\n    // Mozilla/Netscape seems to prefer am3\n    BigInteger.prototype.am = am3;\n    dbits = 28;\n}\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = (1 << dbits) - 1;\nBigInteger.prototype.DV = 1 << dbits;\nconst BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2, BI_FP);\nBigInteger.prototype.F1 = BI_FP - dbits;\nBigInteger.prototype.F2 = 2 * dbits - BI_FP;\n// Digit conversions\nconst BI_RM = '0123456789abcdefghijklmnopqrstuvwxyz';\nconst BI_RC = [];\nlet rr, vv;\nrr = '0'.charCodeAt(0);\nfor (vv = 0; vv <= 9; ++vv)\n    BI_RC[rr++] = vv;\nrr = 'a'.charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv)\n    BI_RC[rr++] = vv;\nrr = 'A'.charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv)\n    BI_RC[rr++] = vv;\nfunction int2char(n) {\n    return BI_RM.charAt(n);\n}\nfunction intAt(s, i) {\n    const c = BI_RC[s.charCodeAt(i)];\n    return c == null ? -1 : c;\n}\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n    for (let i = this.t - 1; i >= 0; --i)\n        r[i] = this[i];\n    r.t = this.t;\n    r.s = this.s;\n}\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n    this.t = 1;\n    this.s = x < 0 ? -1 : 0;\n    if (x > 0)\n        this[0] = x;\n    else if (x < -1)\n        this[0] = x + this.DV;\n    else\n        this.t = 0;\n}\n// return bigint initialized to value\nfunction nbv(i) {\n    const r = nbi();\n    r.fromInt(i);\n    return r;\n}\n// (protected) set from string and radix\nfunction bnpFromString(s, b) {\n    let k;\n    if (b === 16)\n        k = 4;\n    else if (b === 8)\n        k = 3;\n    else if (b === 2)\n        k = 1;\n    else if (b === 32)\n        k = 5;\n    else if (b === 4)\n        k = 2;\n    else\n        throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n    this.t = 0;\n    this.s = 0;\n    let i = s.length;\n    let mi = false;\n    let sh = 0;\n    while (--i >= 0) {\n        const x = intAt(s, i);\n        if (x < 0) {\n            if (s.charAt(i) === '-')\n                mi = true;\n            continue;\n        }\n        mi = false;\n        if (sh === 0)\n            this[this.t++] = x;\n        else if (sh + k > this.DB) {\n            this[this.t - 1] |= (x & ((1 << (this.DB - sh)) - 1)) << sh;\n            this[this.t++] = x >> (this.DB - sh);\n        }\n        else\n            this[this.t - 1] |= x << sh;\n        sh += k;\n        if (sh >= this.DB)\n            sh -= this.DB;\n    }\n    this.clamp();\n    if (mi)\n        BigInteger.ZERO.subTo(this, this);\n}\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n    const c = this.s & this.DM;\n    while (this.t > 0 && this[this.t - 1] == c)\n        --this.t;\n}\n// (public) return string representation in given radix\nfunction bnToString(b) {\n    if (this.s < 0)\n        return '-' + this.negate().toString(b);\n    let k;\n    if (b == 16)\n        k = 4;\n    else if (b === 8)\n        k = 3;\n    else if (b === 2)\n        k = 1;\n    else if (b === 32)\n        k = 5;\n    else if (b === 4)\n        k = 2;\n    else\n        throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n    const km = (1 << k) - 1;\n    let d;\n    let m = false;\n    let r = '';\n    let i = this.t;\n    let p = this.DB - ((i * this.DB) % k);\n    if (i-- > 0) {\n        if (p < this.DB && (d = this[i] >> p) > 0) {\n            m = true;\n            r = int2char(d);\n        }\n        while (i >= 0) {\n            if (p < k) {\n                d = (this[i] & ((1 << p) - 1)) << (k - p);\n                d |= this[--i] >> (p += this.DB - k);\n            }\n            else {\n                d = (this[i] >> (p -= k)) & km;\n                if (p <= 0) {\n                    p += this.DB;\n                    --i;\n                }\n            }\n            if (d > 0)\n                m = true;\n            if (m)\n                r += int2char(d);\n        }\n    }\n    return m ? r : '0';\n}\n// (public) -this\nfunction bnNegate() {\n    const r = nbi();\n    BigInteger.ZERO.subTo(this, r);\n    return r;\n}\n// (public) |this|\nfunction bnAbs() {\n    return this.s < 0 ? this.negate() : this;\n}\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n    let r = this.s - a.s;\n    if (r != 0)\n        return r;\n    let i = this.t;\n    r = i - a.t;\n    if (r != 0)\n        return this.s < 0 ? -r : r;\n    while (--i >= 0)\n        if ((r = this[i] - a[i]) != 0)\n            return r;\n    return 0;\n}\n// returns bit length of the integer x\nfunction nbits(x) {\n    let r = 1;\n    let t;\n    if ((t = x >>> 16) !== 0) {\n        x = t;\n        r += 16;\n    }\n    if ((t = x >> 8) !== 0) {\n        x = t;\n        r += 8;\n    }\n    if ((t = x >> 4) !== 0) {\n        x = t;\n        r += 4;\n    }\n    if ((t = x >> 2) !== 0) {\n        x = t;\n        r += 2;\n    }\n    if ((t = x >> 1) !== 0) {\n        x = t;\n        r += 1;\n    }\n    return r;\n}\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n    if (this.t <= 0)\n        return 0;\n    return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ (this.s & this.DM));\n}\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n, r) {\n    let i;\n    for (i = this.t - 1; i >= 0; --i)\n        r[i + n] = this[i];\n    for (i = n - 1; i >= 0; --i)\n        r[i] = 0;\n    r.t = this.t + n;\n    r.s = this.s;\n}\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n, r) {\n    for (let i = n; i < this.t; ++i)\n        r[i - n] = this[i];\n    r.t = Math.max(this.t - n, 0);\n    r.s = this.s;\n}\n// (protected) r = this << n\nfunction bnpLShiftTo(n, r) {\n    const bs = n % this.DB;\n    const cbs = this.DB - bs;\n    const bm = (1 << cbs) - 1;\n    const ds = Math.floor(n / this.DB);\n    let c = (this.s << bs) & this.DM;\n    let i;\n    for (i = this.t - 1; i >= 0; --i) {\n        r[i + ds + 1] = (this[i] >> cbs) | c;\n        c = (this[i] & bm) << bs;\n    }\n    for (i = ds - 1; i >= 0; --i)\n        r[i] = 0;\n    r[ds] = c;\n    r.t = this.t + ds + 1;\n    r.s = this.s;\n    r.clamp();\n}\n// (protected) r = this >> n\nfunction bnpRShiftTo(n, r) {\n    r.s = this.s;\n    const ds = Math.floor(n / this.DB);\n    if (ds >= this.t) {\n        r.t = 0;\n        return;\n    }\n    const bs = n % this.DB;\n    const cbs = this.DB - bs;\n    const bm = (1 << bs) - 1;\n    r[0] = this[ds] >> bs;\n    for (let i = ds + 1; i < this.t; ++i) {\n        r[i - ds - 1] |= (this[i] & bm) << cbs;\n        r[i - ds] = this[i] >> bs;\n    }\n    if (bs > 0)\n        r[this.t - ds - 1] |= (this.s & bm) << cbs;\n    r.t = this.t - ds;\n    r.clamp();\n}\n// (protected) r = this - a\nfunction bnpSubTo(a, r) {\n    let i = 0;\n    let c = 0;\n    const m = Math.min(a.t, this.t);\n    while (i < m) {\n        c += this[i] - a[i];\n        r[i++] = c & this.DM;\n        c >>= this.DB;\n    }\n    if (a.t < this.t) {\n        c -= a.s;\n        while (i < this.t) {\n            c += this[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c += this.s;\n    }\n    else {\n        c += this.s;\n        while (i < a.t) {\n            c -= a[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c -= a.s;\n    }\n    r.s = c < 0 ? -1 : 0;\n    if (c < -1)\n        r[i++] = this.DV + c;\n    else if (c > 0)\n        r[i++] = c;\n    r.t = i;\n    r.clamp();\n}\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a, r) {\n    const x = this.abs();\n    const y = a.abs();\n    let i = x.t;\n    r.t = i + y.t;\n    while (--i >= 0)\n        r[i] = 0;\n    for (i = 0; i < y.t; ++i)\n        r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\n    r.s = 0;\n    r.clamp();\n    if (this.s !== a.s)\n        BigInteger.ZERO.subTo(r, r);\n}\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n    const x = this.abs();\n    let i = (r.t = 2 * x.t);\n    while (--i >= 0)\n        r[i] = 0;\n    for (i = 0; i < x.t - 1; ++i) {\n        const c = x.am(i, x[i], r, 2 * i, 0, 1);\n        if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >=\n            x.DV) {\n            r[i + x.t] -= x.DV;\n            r[i + x.t + 1] = 1;\n        }\n    }\n    if (r.t > 0)\n        r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\n    r.s = 0;\n    r.clamp();\n}\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m, q, r) {\n    const pm = m.abs();\n    if (pm.t <= 0)\n        return;\n    const pt = this.abs();\n    if (pt.t < pm.t) {\n        if (q != null)\n            q.fromInt(0);\n        if (r != null)\n            this.copyTo(r);\n        return;\n    }\n    if (r === null)\n        r = nbi();\n    const y = nbi();\n    const ts = this.s;\n    const ms = m.s;\n    const nsh = this.DB - nbits(pm[pm.t - 1]);\n    // normalize modulus\n    if (nsh > 0) {\n        pm.lShiftTo(nsh, y);\n        pt.lShiftTo(nsh, r);\n    }\n    else {\n        pm.copyTo(y);\n        pt.copyTo(r);\n    }\n    const ys = y.t;\n    const y0 = y[ys - 1];\n    if (y0 === 0)\n        return;\n    const yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);\n    const d1 = this.FV / yt;\n    const d2 = (1 << this.F1) / yt;\n    const e = 1 << this.F2;\n    let i = r.t;\n    let j = i - ys;\n    const t = q === null ? nbi() : q;\n    y.dlShiftTo(j, t);\n    if (r.compareTo(t) >= 0) {\n        r[r.t++] = 1;\n        r.subTo(t, r);\n    }\n    BigInteger.ONE.dlShiftTo(ys, t);\n    t.subTo(y, y);\n    // \"negative\" y so we can replace sub with am later\n    while (y.t < ys)\n        y[y.t++] = 0;\n    while (--j >= 0) {\n        // Estimate quotient digit\n        let qd = r[--i] === y0 ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n        if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {\n            // Try it out\n            y.dlShiftTo(j, t);\n            r.subTo(t, r);\n            while (r[i] < --qd)\n                r.subTo(t, r);\n        }\n    }\n    if (q !== null) {\n        r.drShiftTo(ys, q);\n        if (ts !== ms)\n            BigInteger.ZERO.subTo(q, q);\n    }\n    r.t = ys;\n    r.clamp();\n    if (nsh > 0)\n        r.rShiftTo(nsh, r);\n    // Denormalize remainder\n    if (ts < 0)\n        BigInteger.ZERO.subTo(r, r);\n}\n// (public) this mod a\nfunction bnMod(a) {\n    const r = nbi();\n    this.abs().divRemTo(a, null, r);\n    if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0)\n        a.subTo(r, r);\n    return r;\n}\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n    if (this.t < 1)\n        return 0;\n    const x = this[0];\n    if ((x & 1) === 0)\n        return 0;\n    let y = x & 3;\n    // y == 1/x mod 2^2\n    y = (y * (2 - (x & 0xf) * y)) & 0xf;\n    // y == 1/x mod 2^4\n    y = (y * (2 - (x & 0xff) * y)) & 0xff;\n    // y == 1/x mod 2^8\n    y = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff;\n    // y == 1/x mod 2^16\n    // last step - calculate inverse mod DV directly;\n    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n    y = (y * (2 - ((x * y) % this.DV))) % this.DV;\n    // y == 1/x mod 2^dbits\n    // we really want the negative inverse, and -DV < y < DV\n    return y > 0 ? this.DV - y : -y;\n}\nfunction bnEquals(a) {\n    return this.compareTo(a) === 0;\n}\n// (protected) r = this + a\nfunction bnpAddTo(a, r) {\n    let i = 0;\n    let c = 0;\n    const m = Math.min(a.t, this.t);\n    while (i < m) {\n        c += this[i] + a[i];\n        r[i++] = c & this.DM;\n        c >>= this.DB;\n    }\n    if (a.t < this.t) {\n        c += a.s;\n        while (i < this.t) {\n            c += this[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c += this.s;\n    }\n    else {\n        c += this.s;\n        while (i < a.t) {\n            c += a[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c += a.s;\n    }\n    r.s = c < 0 ? -1 : 0;\n    if (c > 0)\n        r[i++] = c;\n    else if (c < -1)\n        r[i++] = this.DV + c;\n    r.t = i;\n    r.clamp();\n}\n// (public) this + a\nfunction bnAdd(a) {\n    const r = nbi();\n    this.addTo(a, r);\n    return r;\n}\n// (public) this - a\nfunction bnSubtract(a) {\n    const r = nbi();\n    this.subTo(a, r);\n    return r;\n}\n// (public) this * a\nfunction bnMultiply(a) {\n    const r = nbi();\n    this.multiplyTo(a, r);\n    return r;\n}\n// (public) this / a\nfunction bnDivide(a) {\n    const r = nbi();\n    this.divRemTo(a, r, null);\n    return r;\n}\n// Montgomery reduction\nfunction Montgomery(m) {\n    this.m = m;\n    this.mp = m.invDigit();\n    this.mpl = this.mp & 0x7fff;\n    this.mph = this.mp >> 15;\n    this.um = (1 << (m.DB - 15)) - 1;\n    this.mt2 = 2 * m.t;\n}\n// xR mod m\nfunction montConvert(x) {\n    const r = nbi();\n    x.abs().dlShiftTo(this.m.t, r);\n    r.divRemTo(this.m, null, r);\n    if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0)\n        this.m.subTo(r, r);\n    return r;\n}\n// x/R mod m\nfunction montRevert(x) {\n    const r = nbi();\n    x.copyTo(r);\n    this.reduce(r);\n    return r;\n}\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n    while (x.t <= this.mt2)\n        // pad x so am has enough room later\n        x[x.t++] = 0;\n    for (let i = 0; i < this.m.t; ++i) {\n        // faster way of calculating u0 = x[i]*mp mod DV\n        let j = x[i] & 0x7fff;\n        const u0 = (j * this.mpl +\n            (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) &\n            x.DM;\n        // use am to combine the multiply-shift-add into one call\n        j = i + this.m.t;\n        x[j] += this.m.am(0, u0, x, i, 0, this.m.t);\n        // propagate carry\n        while (x[j] >= x.DV) {\n            x[j] -= x.DV;\n            x[++j]++;\n        }\n    }\n    x.clamp();\n    x.drShiftTo(this.m.t, x);\n    if (x.compareTo(this.m) >= 0)\n        x.subTo(this.m, x);\n}\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x, r) {\n    x.squareTo(r);\n    this.reduce(r);\n}\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x, y, r) {\n    x.multiplyTo(y, r);\n    this.reduce(r);\n}\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n// (public) this^e % m (HAC 14.85)\nfunction bnModPow(e, m, callback) {\n    let i = e.bitLength();\n    let k;\n    let r = nbv(1);\n    const z = new Montgomery(m);\n    if (i <= 0)\n        return r;\n    else if (i < 18)\n        k = 1;\n    else if (i < 48)\n        k = 3;\n    else if (i < 144)\n        k = 4;\n    else if (i < 768)\n        k = 5;\n    else\n        k = 6;\n    // precomputation\n    const g = [];\n    let n = 3;\n    const k1 = k - 1;\n    const km = (1 << k) - 1;\n    g[1] = z.convert(this);\n    if (k > 1) {\n        const g2 = nbi();\n        z.sqrTo(g[1], g2);\n        while (n <= km) {\n            g[n] = nbi();\n            z.mulTo(g2, g[n - 2], g[n]);\n            n += 2;\n        }\n    }\n    let j = e.t - 1;\n    let w;\n    let is1 = true;\n    let r2 = nbi();\n    let t;\n    i = nbits(e[j]) - 1;\n    while (j >= 0) {\n        if (i >= k1)\n            w = (e[j] >> (i - k1)) & km;\n        else {\n            w = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i);\n            if (j > 0)\n                w |= e[j - 1] >> (this.DB + i - k1);\n        }\n        n = k;\n        while ((w & 1) === 0) {\n            w >>= 1;\n            --n;\n        }\n        if ((i -= n) < 0) {\n            i += this.DB;\n            --j;\n        }\n        if (is1) {\n            // ret == 1, don't bother squaring or multiplying it\n            g[w].copyTo(r);\n            is1 = false;\n        }\n        else {\n            while (n > 1) {\n                z.sqrTo(r, r2);\n                z.sqrTo(r2, r);\n                n -= 2;\n            }\n            if (n > 0)\n                z.sqrTo(r, r2);\n            else {\n                t = r;\n                r = r2;\n                r2 = t;\n            }\n            z.mulTo(r2, g[w], r);\n        }\n        while (j >= 0 && (e[j] & (1 << i)) === 0) {\n            z.sqrTo(r, r2);\n            t = r;\n            r = r2;\n            r2 = t;\n            if (--i < 0) {\n                i = this.DB - 1;\n                --j;\n            }\n        }\n    }\n    const result = z.revert(r);\n    callback(null, result);\n    return result;\n}\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.addTo = bnpAddTo;\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.modPow = bnModPow;\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n\nexport { BigInteger as default };\n//# sourceMappingURL=BigInteger.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nconst calculateS = async ({ a, g, k, x, B, N, U, }) => {\n    return new Promise((resolve, reject) => {\n        g.modPow(x, N, (outerErr, outerResult) => {\n            if (outerErr) {\n                reject(outerErr);\n                return;\n            }\n            B.subtract(k.multiply(outerResult)).modPow(a.add(U.multiply(x)), N, (innerErr, innerResult) => {\n                if (innerErr) {\n                    reject(innerErr);\n                    return;\n                }\n                resolve(innerResult.mod(N));\n            });\n        });\n    });\n};\n\nexport { calculateS };\n//# sourceMappingURL=calculateS.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst INIT_N = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1' +\n    '29024E088A67CC74020BBEA63B139B22514A08798E3404DD' +\n    'EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245' +\n    'E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED' +\n    'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3D' +\n    'C2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F' +\n    '83655D23DCA3AD961C62F356208552BB9ED529077096966D' +\n    '670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B' +\n    'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9' +\n    'DE2BCBF6955817183995497CEA956AE515D2261898FA0510' +\n    '15728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64' +\n    'ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7' +\n    'ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6B' +\n    'F12FFA06D98A0864D87602733EC86A64521F2B18177B200C' +\n    'BBE117577A615D6C770988C0BAD946E208E24FA074E5AB31' +\n    '43DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF';\nconst SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\n\nexport { HEX_TO_SHORT, INIT_N, SHORT_TO_HEX };\n//# sourceMappingURL=constants.mjs.map\n","import { HEX_TO_SHORT } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Converts a hexadecimal encoded string to a Uint8Array of bytes.\n *\n * @param encoded The hexadecimal encoded string\n */\nconst getBytesFromHex = (encoded) => {\n    if (encoded.length % 2 !== 0) {\n        throw new Error('Hex encoded strings must have an even number length');\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n};\n\nexport { getBytesFromHex };\n//# sourceMappingURL=getBytesFromHex.mjs.map\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","/**\n * @internal\n */\nexport var BLOCK_SIZE = 64;\n/**\n * @internal\n */\nexport var DIGEST_LENGTH = 32;\n/**\n * @internal\n */\nexport var KEY = new Uint32Array([\n    0x428a2f98,\n    0x71374491,\n    0xb5c0fbcf,\n    0xe9b5dba5,\n    0x3956c25b,\n    0x59f111f1,\n    0x923f82a4,\n    0xab1c5ed5,\n    0xd807aa98,\n    0x12835b01,\n    0x243185be,\n    0x550c7dc3,\n    0x72be5d74,\n    0x80deb1fe,\n    0x9bdc06a7,\n    0xc19bf174,\n    0xe49b69c1,\n    0xefbe4786,\n    0x0fc19dc6,\n    0x240ca1cc,\n    0x2de92c6f,\n    0x4a7484aa,\n    0x5cb0a9dc,\n    0x76f988da,\n    0x983e5152,\n    0xa831c66d,\n    0xb00327c8,\n    0xbf597fc7,\n    0xc6e00bf3,\n    0xd5a79147,\n    0x06ca6351,\n    0x14292967,\n    0x27b70a85,\n    0x2e1b2138,\n    0x4d2c6dfc,\n    0x53380d13,\n    0x650a7354,\n    0x766a0abb,\n    0x81c2c92e,\n    0x92722c85,\n    0xa2bfe8a1,\n    0xa81a664b,\n    0xc24b8b70,\n    0xc76c51a3,\n    0xd192e819,\n    0xd6990624,\n    0xf40e3585,\n    0x106aa070,\n    0x19a4c116,\n    0x1e376c08,\n    0x2748774c,\n    0x34b0bcb5,\n    0x391c0cb3,\n    0x4ed8aa4a,\n    0x5b9cca4f,\n    0x682e6ff3,\n    0x748f82ee,\n    0x78a5636f,\n    0x84c87814,\n    0x8cc70208,\n    0x90befffa,\n    0xa4506ceb,\n    0xbef9a3f7,\n    0xc67178f2\n]);\n/**\n * @internal\n */\nexport var INIT = [\n    0x6a09e667,\n    0xbb67ae85,\n    0x3c6ef372,\n    0xa54ff53a,\n    0x510e527f,\n    0x9b05688c,\n    0x1f83d9ab,\n    0x5be0cd19\n];\n/**\n * @internal\n */\nexport var MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1;\n//# sourceMappingURL=constants.js.map","import { BLOCK_SIZE, DIGEST_LENGTH, INIT, KEY, MAX_HASHABLE_LENGTH } from \"./constants\";\n/**\n * @internal\n */\nvar RawSha256 = /** @class */ (function () {\n    function RawSha256() {\n        this.state = Int32Array.from(INIT);\n        this.temp = new Int32Array(64);\n        this.buffer = new Uint8Array(64);\n        this.bufferLength = 0;\n        this.bytesHashed = 0;\n        /**\n         * @internal\n         */\n        this.finished = false;\n    }\n    RawSha256.prototype.update = function (data) {\n        if (this.finished) {\n            throw new Error(\"Attempted to update an already finished hash.\");\n        }\n        var position = 0;\n        var byteLength = data.byteLength;\n        this.bytesHashed += byteLength;\n        if (this.bytesHashed * 8 > MAX_HASHABLE_LENGTH) {\n            throw new Error(\"Cannot hash more than 2^53 - 1 bits\");\n        }\n        while (byteLength > 0) {\n            this.buffer[this.bufferLength++] = data[position++];\n            byteLength--;\n            if (this.bufferLength === BLOCK_SIZE) {\n                this.hashBuffer();\n                this.bufferLength = 0;\n            }\n        }\n    };\n    RawSha256.prototype.digest = function () {\n        if (!this.finished) {\n            var bitsHashed = this.bytesHashed * 8;\n            var bufferView = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);\n            var undecoratedLength = this.bufferLength;\n            bufferView.setUint8(this.bufferLength++, 0x80);\n            // Ensure the final block has enough room for the hashed length\n            if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n                for (var i = this.bufferLength; i < BLOCK_SIZE; i++) {\n                    bufferView.setUint8(i, 0);\n                }\n                this.hashBuffer();\n                this.bufferLength = 0;\n            }\n            for (var i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n                bufferView.setUint8(i, 0);\n            }\n            bufferView.setUint32(BLOCK_SIZE - 8, Math.floor(bitsHashed / 0x100000000), true);\n            bufferView.setUint32(BLOCK_SIZE - 4, bitsHashed);\n            this.hashBuffer();\n            this.finished = true;\n        }\n        // The value in state is little-endian rather than big-endian, so flip\n        // each word into a new Uint8Array\n        var out = new Uint8Array(DIGEST_LENGTH);\n        for (var i = 0; i < 8; i++) {\n            out[i * 4] = (this.state[i] >>> 24) & 0xff;\n            out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n            out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n            out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n        }\n        return out;\n    };\n    RawSha256.prototype.hashBuffer = function () {\n        var _a = this, buffer = _a.buffer, state = _a.state;\n        var state0 = state[0], state1 = state[1], state2 = state[2], state3 = state[3], state4 = state[4], state5 = state[5], state6 = state[6], state7 = state[7];\n        for (var i = 0; i < BLOCK_SIZE; i++) {\n            if (i < 16) {\n                this.temp[i] =\n                    ((buffer[i * 4] & 0xff) << 24) |\n                        ((buffer[i * 4 + 1] & 0xff) << 16) |\n                        ((buffer[i * 4 + 2] & 0xff) << 8) |\n                        (buffer[i * 4 + 3] & 0xff);\n            }\n            else {\n                var u = this.temp[i - 2];\n                var t1_1 = ((u >>> 17) | (u << 15)) ^ ((u >>> 19) | (u << 13)) ^ (u >>> 10);\n                u = this.temp[i - 15];\n                var t2_1 = ((u >>> 7) | (u << 25)) ^ ((u >>> 18) | (u << 14)) ^ (u >>> 3);\n                this.temp[i] =\n                    ((t1_1 + this.temp[i - 7]) | 0) + ((t2_1 + this.temp[i - 16]) | 0);\n            }\n            var t1 = ((((((state4 >>> 6) | (state4 << 26)) ^\n                ((state4 >>> 11) | (state4 << 21)) ^\n                ((state4 >>> 25) | (state4 << 7))) +\n                ((state4 & state5) ^ (~state4 & state6))) |\n                0) +\n                ((state7 + ((KEY[i] + this.temp[i]) | 0)) | 0)) |\n                0;\n            var t2 = ((((state0 >>> 2) | (state0 << 30)) ^\n                ((state0 >>> 13) | (state0 << 19)) ^\n                ((state0 >>> 22) | (state0 << 10))) +\n                ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) |\n                0;\n            state7 = state6;\n            state6 = state5;\n            state5 = state4;\n            state4 = (state3 + t1) | 0;\n            state3 = state2;\n            state2 = state1;\n            state1 = state0;\n            state0 = (t1 + t2) | 0;\n        }\n        state[0] += state0;\n        state[1] += state1;\n        state[2] += state2;\n        state[3] += state3;\n        state[4] += state4;\n        state[5] += state5;\n        state[6] += state6;\n        state[7] += state7;\n    };\n    return RawSha256;\n}());\nexport { RawSha256 };\n//# sourceMappingURL=RawSha256.js.map","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { fromUtf8 as fromUtf8Browser } from \"@smithy/util-utf8\";\n// Quick polyfill\nvar fromUtf8 = typeof Buffer !== \"undefined\" && Buffer.from\n    ? function (input) { return Buffer.from(input, \"utf8\"); }\n    : fromUtf8Browser;\nexport function convertToBuffer(data) {\n    // Already a Uint8, do nothing\n    if (data instanceof Uint8Array)\n        return data;\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n}\n//# sourceMappingURL=convertToBuffer.js.map","export const fromUtf8 = (input) => new TextEncoder().encode(input);\n","import { __awaiter, __generator } from \"tslib\";\nimport { BLOCK_SIZE } from \"./constants\";\nimport { RawSha256 } from \"./RawSha256\";\nimport { isEmptyData, convertToBuffer } from \"@aws-crypto/util\";\nvar Sha256 = /** @class */ (function () {\n    function Sha256(secret) {\n        this.secret = secret;\n        this.hash = new RawSha256();\n        this.reset();\n    }\n    Sha256.prototype.update = function (toHash) {\n        if (isEmptyData(toHash) || this.error) {\n            return;\n        }\n        try {\n            this.hash.update(convertToBuffer(toHash));\n        }\n        catch (e) {\n            this.error = e;\n        }\n    };\n    /* This synchronous method keeps compatibility\n     * with the v2 aws-sdk.\n     */\n    Sha256.prototype.digestSync = function () {\n        if (this.error) {\n            throw this.error;\n        }\n        if (this.outer) {\n            if (!this.outer.finished) {\n                this.outer.update(this.hash.digest());\n            }\n            return this.outer.digest();\n        }\n        return this.hash.digest();\n    };\n    /* The underlying digest method here is synchronous.\n     * To keep the same interface with the other hash functions\n     * the default is to expose this as an async method.\n     * However, it can sometimes be useful to have a sync method.\n     */\n    Sha256.prototype.digest = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.digestSync()];\n            });\n        });\n    };\n    Sha256.prototype.reset = function () {\n        this.hash = new RawSha256();\n        if (this.secret) {\n            this.outer = new RawSha256();\n            var inner = bufferFromSecret(this.secret);\n            var outer = new Uint8Array(BLOCK_SIZE);\n            outer.set(inner);\n            for (var i = 0; i < BLOCK_SIZE; i++) {\n                inner[i] ^= 0x36;\n                outer[i] ^= 0x5c;\n            }\n            this.hash.update(inner);\n            this.outer.update(outer);\n            // overwrite the copied key in memory\n            for (var i = 0; i < inner.byteLength; i++) {\n                inner[i] = 0;\n            }\n        }\n    };\n    return Sha256;\n}());\nexport { Sha256 };\nfunction bufferFromSecret(secret) {\n    var input = convertToBuffer(secret);\n    if (input.byteLength > BLOCK_SIZE) {\n        var bufferHash = new RawSha256();\n        bufferHash.update(input);\n        input = bufferHash.digest();\n    }\n    var buffer = new Uint8Array(BLOCK_SIZE);\n    buffer.set(input);\n    return buffer;\n}\n//# sourceMappingURL=jsSha256.js.map","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function isEmptyData(data) {\n    if (typeof data === \"string\") {\n        return data.length === 0;\n    }\n    return data.byteLength === 0;\n}\n//# sourceMappingURL=isEmptyData.js.map","import { SHORT_TO_HEX } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Converts a Uint8Array of binary data to a hexadecimal encoded string.\n *\n * @param bytes The binary data to encode\n */\nconst getHexFromBytes = (bytes) => {\n    let out = '';\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n};\n\nexport { getHexFromBytes };\n//# sourceMappingURL=getHexFromBytes.mjs.map\n","import { Sha256 } from '@aws-crypto/sha256-js';\nimport { getHexFromBytes } from './getHexFromBytes.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Calculate a hash from a `SourceData`\n * @param {SourceData} data Value to hash.\n * @returns {string} Hex-encoded hash.\n * @private\n */\nconst getHashFromData = (data) => {\n    const sha256 = new Sha256();\n    sha256.update(data);\n    const hashedData = sha256.digestSync();\n    const hashHexFromUint8 = getHexFromBytes(hashedData);\n    return new Array(64 - hashHexFromUint8.length).join('0') + hashHexFromUint8;\n};\n\nexport { getHashFromData };\n//# sourceMappingURL=getHashFromData.mjs.map\n","import { getBytesFromHex } from './getBytesFromHex.mjs';\nimport { getHashFromData } from './getHashFromData.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Calculate a hash from a hex string\n * @param {string} hexStr Value to hash.\n * @returns {string} Hex-encoded hash.\n * @private\n */\nconst getHashFromHex = (hexStr) => getHashFromData(getBytesFromHex(hexStr));\n\nexport { getHashFromHex };\n//# sourceMappingURL=getHashFromHex.mjs.map\n","import BigInteger from './BigInteger/BigInteger.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Tests if a hex string has it most significant bit set (case-insensitive regex)\n */\nconst HEX_MSB_REGEX = /^[89a-f]/i;\n/**\n * Returns an unambiguous, even-length hex string of the two's complement encoding of an integer.\n *\n * It is compatible with the hex encoding of Java's BigInteger's toByteArray(), wich returns a\n * byte array containing the two's-complement representation of a BigInteger. The array contains\n * the minimum number of bytes required to represent the BigInteger, including at least one sign bit.\n *\n * Examples showing how ambiguity is avoided by left padding with:\n * \t\"00\" (for positive values where the most-significant-bit is set)\n *  \"FF\" (for negative values where the most-significant-bit is set)\n *\n * padHex(bigInteger.fromInt(-236))  === \"FF14\"\n * padHex(bigInteger.fromInt(20))    === \"14\"\n *\n * padHex(bigInteger.fromInt(-200))  === \"FF38\"\n * padHex(bigInteger.fromInt(56))    === \"38\"\n *\n * padHex(bigInteger.fromInt(-20))   === \"EC\"\n * padHex(bigInteger.fromInt(236))   === \"00EC\"\n *\n * padHex(bigInteger.fromInt(-56))   === \"C8\"\n * padHex(bigInteger.fromInt(200))   === \"00C8\"\n *\n * @param {AuthBigInteger} bigInt Number to encode.\n * @returns {String} even-length hex string of the two's complement encoding.\n */\nconst getPaddedHex = (bigInt) => {\n    if (!(bigInt instanceof BigInteger)) {\n        throw new Error('Not a BigInteger');\n    }\n    const isNegative = bigInt.compareTo(BigInteger.ZERO) < 0;\n    /* Get a hex string for abs(bigInt) */\n    let hexStr = bigInt.abs().toString(16);\n    /* Pad hex to even length if needed */\n    hexStr = hexStr.length % 2 !== 0 ? `0${hexStr}` : hexStr;\n    /* Prepend \"00\" if the most significant bit is set */\n    hexStr = HEX_MSB_REGEX.test(hexStr) ? `00${hexStr}` : hexStr;\n    if (isNegative) {\n        /* Flip the bits of the representation */\n        const invertedNibbles = hexStr\n            .split('')\n            .map((x) => {\n            const invertedNibble = ~parseInt(x, 16) & 0xf;\n            return '0123456789ABCDEF'.charAt(invertedNibble);\n        })\n            .join('');\n        /* After flipping the bits, add one to get the 2's complement representation */\n        const flippedBitsBI = new BigInteger(invertedNibbles, 16).add(BigInteger.ONE);\n        hexStr = flippedBitsBI.toString(16);\n        /*\n        For hex strings starting with 'FF8', 'FF' can be dropped, e.g. 0xFFFF80=0xFF80=0x80=-128\n\n        Any sequence of '1' bits on the left can always be substituted with a single '1' bit\n        without changing the represented value.\n\n        This only happens in the case when the input is 80...00\n        */\n        if (hexStr.toUpperCase().startsWith('FF8')) {\n            hexStr = hexStr.substring(2);\n        }\n    }\n    return hexStr;\n};\n\nexport { getPaddedHex };\n//# sourceMappingURL=getPaddedHex.mjs.map\n","import { cryptoSecureRandomInt } from './cryptoSecureRandomInt.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Hex encoding strategy.\n * Converts a word array to a hex string.\n * @param {WordArray} wordArray The word array.\n * @return {string} The hex string.\n * @static\n */\nfunction hexStringify(wordArray) {\n    // Shortcuts\n    const { words } = wordArray;\n    const { sigBytes } = wordArray;\n    // Convert\n    const hexChars = [];\n    for (let i = 0; i < sigBytes; i++) {\n        const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n        hexChars.push((bite >>> 4).toString(16));\n        hexChars.push((bite & 0x0f).toString(16));\n    }\n    return hexChars.join('');\n}\nclass WordArray {\n    constructor(words, sigBytes) {\n        this.words = [];\n        let Words = words;\n        Words = this.words = Words || [];\n        if (sigBytes !== undefined) {\n            this.sigBytes = sigBytes;\n        }\n        else {\n            this.sigBytes = Words.length * 4;\n        }\n    }\n    random(nBytes) {\n        const words = [];\n        for (let i = 0; i < nBytes; i += 4) {\n            words.push(cryptoSecureRandomInt());\n        }\n        return new WordArray(words, nBytes);\n    }\n    toString() {\n        return hexStringify(this);\n    }\n}\n\nexport { WordArray };\n//# sourceMappingURL=WordArray.mjs.map\n","import { getCrypto } from './globalHelpers/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/*\n * Cryptographically secure pseudorandom number generator\n * As Math.random() is cryptographically not safe to use\n */\nfunction cryptoSecureRandomInt() {\n    const crypto = getCrypto();\n    const randomResult = crypto.getRandomValues(new Uint32Array(1))[0];\n    return randomResult;\n}\n\nexport { cryptoSecureRandomInt };\n//# sourceMappingURL=cryptoSecureRandomInt.mjs.map\n","import { WordArray } from '@aws-amplify/core/internals/utils';\nimport { getBytesFromHex } from './getBytesFromHex.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a Uint8Array with a sequence of random nBytes\n *\n * @param {number} nBytes\n * @returns {Uint8Array} fixed-length sequence of random bytes\n */\nconst getRandomBytes = (nBytes) => {\n    const str = new WordArray().random(nBytes).toString();\n    return getBytesFromHex(str);\n};\n\nexport { getRandomBytes };\n//# sourceMappingURL=getRandomBytes.mjs.map\n","import { AuthError } from '../../../../../errors/AuthError.mjs';\nimport { textEncoder } from '../../textEncoder/index.mjs';\nimport BigInteger from '../BigInteger/BigInteger.mjs';\nimport { calculateS } from '../calculate/calculateS.mjs';\nimport { calculateU } from '../calculate/calculateU.mjs';\nimport { getBytesFromHex } from '../getBytesFromHex.mjs';\nimport { getHashFromData } from '../getHashFromData.mjs';\nimport { getHashFromHex } from '../getHashFromHex.mjs';\nimport { getHexFromBytes } from '../getHexFromBytes.mjs';\nimport { getHkdfKey } from '../getHkdfKey.mjs';\nimport { getPaddedHex } from '../getPaddedHex.mjs';\nimport { getRandomBytes } from '../getRandomBytes.mjs';\nimport { getRandomString } from '../getRandomString.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/** @class */\nclass AuthenticationHelper {\n    constructor({ userPoolName, a, g, A, N, }) {\n        this.encoder = textEncoder;\n        this.userPoolName = userPoolName;\n        this.a = a;\n        this.g = g;\n        this.A = A;\n        this.N = N;\n        this.k = new BigInteger(getHashFromHex(`${getPaddedHex(N)}${getPaddedHex(g)}`), 16);\n    }\n    /**\n     * @returns {string} Generated random value included in password hash.\n     */\n    getRandomPassword() {\n        if (!this.randomPassword) {\n            throw new AuthError({\n                name: 'EmptyBigIntegerRandomPassword',\n                message: 'random password is empty',\n            });\n        }\n        return this.randomPassword;\n    }\n    /**\n     * @returns {string} Generated random value included in devices hash.\n     */\n    getSaltToHashDevices() {\n        if (!this.saltToHashDevices) {\n            throw new AuthError({\n                name: 'EmptyBigIntegersaltToHashDevices',\n                message: 'saltToHashDevices is empty',\n            });\n        }\n        return this.saltToHashDevices;\n    }\n    /**\n     * @returns {string} Value used to verify devices.\n     */\n    getVerifierDevices() {\n        if (!this.verifierDevices) {\n            throw new AuthError({\n                name: 'EmptyBigIntegerVerifierDevices',\n                message: 'verifyDevices is empty',\n            });\n        }\n        return this.verifierDevices;\n    }\n    /**\n     * Generate salts and compute verifier.\n     *\n     * @param {string} deviceGroupKey Devices to generate verifier for.\n     * @param {string} username User to generate verifier for.\n     *\n     * @returns {Promise<void>}\n     */\n    async generateHashDevice(deviceGroupKey, username) {\n        this.randomPassword = getRandomString();\n        const combinedString = `${deviceGroupKey}${username}:${this.randomPassword}`;\n        const hashedString = getHashFromData(combinedString);\n        const hexRandom = getHexFromBytes(getRandomBytes(16));\n        // The random hex will be unambiguously represented as a postive integer\n        this.saltToHashDevices = getPaddedHex(new BigInteger(hexRandom, 16));\n        return new Promise((resolve, reject) => {\n            this.g.modPow(new BigInteger(getHashFromHex(this.saltToHashDevices + hashedString), 16), this.N, (err, result) => {\n                if (err) {\n                    reject(err);\n                    return;\n                }\n                this.verifierDevices = getPaddedHex(result);\n                resolve();\n            });\n        });\n    }\n    /**\n     * Calculates the final HKDF key based on computed S value, computed U value and the key\n     *\n     * @param {String} username Username.\n     * @param {String} password Password.\n     * @param {AuthBigInteger} B Server B value.\n     * @param {AuthBigInteger} salt Generated salt.\n     */\n    async getPasswordAuthenticationKey({ username, password, serverBValue, salt, }) {\n        if (serverBValue.mod(this.N).equals(BigInteger.ZERO)) {\n            throw new Error('B cannot be zero.');\n        }\n        const U = calculateU({\n            A: this.A,\n            B: serverBValue,\n        });\n        const usernamePassword = `${this.userPoolName}${username}:${password}`;\n        const usernamePasswordHash = getHashFromData(usernamePassword);\n        const x = new BigInteger(getHashFromHex(getPaddedHex(salt) + usernamePasswordHash), 16);\n        const S = await calculateS({\n            a: this.a,\n            g: this.g,\n            k: this.k,\n            x,\n            B: serverBValue,\n            N: this.N,\n            U,\n        });\n        const context = this.encoder.convert('Caldera Derived Key');\n        const spacer = this.encoder.convert(String.fromCharCode(1));\n        const info = new Uint8Array(context.byteLength + spacer.byteLength);\n        info.set(context, 0);\n        info.set(spacer, context.byteLength);\n        const hkdfKey = getHkdfKey(getBytesFromHex(getPaddedHex(S)), getBytesFromHex(getPaddedHex(U)), info);\n        return hkdfKey;\n    }\n}\n\nexport { AuthenticationHelper as default };\n//# sourceMappingURL=AuthenticationHelper.mjs.map\n","import { base64Encoder } from '@aws-amplify/core/internals/utils';\nimport { getRandomBytes } from './getRandomBytes.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Helper function to generate a random string\n * @returns {string} a random value.\n *\n * @internal\n */\nconst getRandomString = () => base64Encoder.convert(getRandomBytes(40));\n\nexport { getRandomString };\n//# sourceMappingURL=getRandomString.mjs.map\n","import BigInteger from '../BigInteger/BigInteger.mjs';\nimport { getHashFromHex } from '../getHashFromHex.mjs';\nimport { getPaddedHex } from '../getPaddedHex.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nconst calculateU = ({ A, B, }) => {\n    const U = new BigInteger(getHashFromHex(getPaddedHex(A) + getPaddedHex(B)), 16);\n    if (U.equals(BigInteger.ZERO)) {\n        throw new Error('U cannot be zero.');\n    }\n    return U;\n};\n\nexport { calculateU };\n//# sourceMappingURL=calculateU.mjs.map\n","import { Sha256 } from '@aws-crypto/sha256-js';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Standard HKDF algorithm.\n *\n * @param {Uint8Array} ikm Input key material.\n * @param {Uint8Array} salt Salt value.\n * @param {Uint8Array} info Context and application specific info.\n *\n * @returns {Uint8Array} Strong key material.\n *\n * @internal\n */\nconst getHkdfKey = (ikm, salt, info) => {\n    const awsCryptoHash = new Sha256(salt);\n    awsCryptoHash.update(ikm);\n    const resultFromAWSCryptoPrk = awsCryptoHash.digestSync();\n    const awsCryptoHashHmac = new Sha256(resultFromAWSCryptoPrk);\n    awsCryptoHashHmac.update(info);\n    const resultFromAWSCryptoHmac = awsCryptoHashHmac.digestSync();\n    const hashHexFromAWSCrypto = resultFromAWSCryptoHmac;\n    return hashHexFromAWSCrypto.slice(0, 16);\n};\n\nexport { getHkdfKey };\n//# sourceMappingURL=getHkdfKey.mjs.map\n","import BigInteger from '../BigInteger/BigInteger.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nconst calculateA = async ({ a, g, N, }) => {\n    return new Promise((resolve, reject) => {\n        g.modPow(a, N, (err, A) => {\n            if (err) {\n                reject(err);\n                return;\n            }\n            if (A.mod(N).equals(BigInteger.ZERO)) {\n                reject(new Error('Illegal parameter. A mod N cannot be 0.'));\n                return;\n            }\n            resolve(A);\n        });\n    });\n};\n\nexport { calculateA };\n//# sourceMappingURL=calculateA.mjs.map\n","import AuthenticationHelper from './AuthenticationHelper/AuthenticationHelper.mjs';\nimport BigInteger from './BigInteger/BigInteger.mjs';\nimport { calculateA } from './calculate/calculateA.mjs';\nimport { INIT_N } from './constants.mjs';\nimport '@aws-crypto/sha256-js';\nimport { getHexFromBytes } from './getHexFromBytes.mjs';\nimport { getRandomBytes } from './getRandomBytes.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a new {@link AuthenticationHelper} instance with randomly generated BigInteger seed\n *\n * @param userPoolName Cognito user pool name.\n * @returns An {@link AuthenticationHelper} instance.\n *\n * @internal\n */\nconst getAuthenticationHelper = async (userPoolName) => {\n    const N = new BigInteger(INIT_N, 16);\n    const g = new BigInteger('2', 16);\n    const a = generateRandomBigInteger();\n    const A = await calculateA({ a, g, N });\n    return new AuthenticationHelper({ userPoolName, a, g, A, N });\n};\n/**\n * Generates a random BigInteger.\n *\n * @returns {BigInteger} a random value.\n */\nconst generateRandomBigInteger = () => {\n    // This will be interpreted as a postive 128-bit integer\n    const hexRandom = getHexFromBytes(getRandomBytes(128));\n    // There is no need to do randomBigInt.mod(this.N - 1) as N (3072-bit) is > 128 bytes (1024-bit)\n    return new BigInteger(hexRandom, 16);\n};\n\nexport { getAuthenticationHelper };\n//# sourceMappingURL=getAuthenticationHelper.mjs.map\n","import { AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getUserContextData } from '../../../providers/cognito/utils/userContextData.mjs';\nimport { getAuthenticationHelper } from '../../../providers/cognito/utils/srp/getAuthenticationHelper.mjs';\nimport '../../../providers/cognito/utils/srp/constants.mjs';\nimport '@aws-crypto/sha256-js';\nimport { setActiveSignInUsername, retryOnResourceNotFoundException, handlePasswordVerifierChallenge } from '../../../providers/cognito/utils/signInHelpers.mjs';\nimport { createInitiateAuthClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createInitiateAuthClient.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../../../providers/cognito/types/errors.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../../../providers/cognito/factories/createCognitoUserPoolEndpointResolver.mjs';\nimport '@aws-amplify/core';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Handles the Password SRP (Secure Remote Password) authentication flow.\n * This function can be used with both USER_SRP_AUTH and USER_AUTH flows.\n *\n * @param {Object} params - The parameters for the Password SRP authentication\n * @param {string} params.username - The username for authentication\n * @param {string} params.password - The user's password\n * @param {ClientMetadata} [params.clientMetadata] - Optional metadata to be sent with auth requests\n * @param {CognitoUserPoolConfig} params.config - Cognito User Pool configuration\n * @param {AuthTokenOrchestrator} params.tokenOrchestrator - Token orchestrator for managing auth tokens\n * @param {AuthFlowType} params.authFlow - The type of authentication flow ('USER_SRP_AUTH' or 'USER_AUTH')\n * @param {AuthFactorType} [params.preferredChallenge] - Optional preferred challenge type when using USER_AUTH flow\n *\n * @returns {Promise<RespondToAuthChallengeCommandOutput>} The authentication response\n */\nasync function handlePasswordSRP({ username, password, clientMetadata, config, tokenOrchestrator, authFlow, preferredChallenge, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const userPoolName = userPoolId?.split('_')[1] || '';\n    const authenticationHelper = await getAuthenticationHelper(userPoolName);\n    const authParameters = {\n        USERNAME: username,\n        SRP_A: authenticationHelper.A.toString(16),\n    };\n    if (authFlow === 'USER_AUTH' && preferredChallenge) {\n        authParameters.PREFERRED_CHALLENGE = preferredChallenge;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        AuthFlow: authFlow,\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const initiateAuth = createInitiateAuthClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const resp = await initiateAuth({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    const { ChallengeParameters: challengeParameters, Session: session } = resp;\n    const activeUsername = challengeParameters?.USERNAME ?? username;\n    setActiveSignInUsername(activeUsername);\n    if (resp.ChallengeName === 'PASSWORD_VERIFIER') {\n        return retryOnResourceNotFoundException(handlePasswordVerifierChallenge, [\n            password,\n            challengeParameters,\n            clientMetadata,\n            session,\n            authenticationHelper,\n            config,\n            tokenOrchestrator,\n        ], activeUsername, tokenOrchestrator);\n    }\n    return resp;\n}\n\nexport { handlePasswordSRP };\n//# sourceMappingURL=handlePasswordSRP.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst MONTH_NAMES = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n];\nconst WEEK_NAMES = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst getNowString = () => {\n    const now = new Date();\n    const weekDay = WEEK_NAMES[now.getUTCDay()];\n    const month = MONTH_NAMES[now.getUTCMonth()];\n    const day = now.getUTCDate();\n    let hours = now.getUTCHours();\n    if (hours < 10) {\n        hours = `0${hours}`;\n    }\n    let minutes = now.getUTCMinutes();\n    if (minutes < 10) {\n        minutes = `0${minutes}`;\n    }\n    let seconds = now.getUTCSeconds();\n    if (seconds < 10) {\n        seconds = `0${seconds}`;\n    }\n    const year = now.getUTCFullYear();\n    // ddd MMM D HH:mm:ss UTC YYYY\n    const dateNow = `${weekDay} ${month} ${day} ${hours}:${minutes}:${seconds} UTC ${year}`;\n    return dateNow;\n};\n\nexport { getNowString };\n//# sourceMappingURL=getNowString.mjs.map\n","import { Sha256 } from '@aws-crypto/sha256-js';\nimport { base64Encoder, base64Decoder } from '@aws-amplify/core/internals/utils';\nimport { textEncoder } from '../textEncoder/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getSignatureString = ({ userPoolName, username, challengeParameters, dateNow, hkdf, }) => {\n    const bufUPIDaToB = textEncoder.convert(userPoolName);\n    const bufUNaToB = textEncoder.convert(username);\n    const bufSBaToB = urlB64ToUint8Array(challengeParameters.SECRET_BLOCK);\n    const bufDNaToB = textEncoder.convert(dateNow);\n    const bufConcat = new Uint8Array(bufUPIDaToB.byteLength +\n        bufUNaToB.byteLength +\n        bufSBaToB.byteLength +\n        bufDNaToB.byteLength);\n    bufConcat.set(bufUPIDaToB, 0);\n    bufConcat.set(bufUNaToB, bufUPIDaToB.byteLength);\n    bufConcat.set(bufSBaToB, bufUPIDaToB.byteLength + bufUNaToB.byteLength);\n    bufConcat.set(bufDNaToB, bufUPIDaToB.byteLength + bufUNaToB.byteLength + bufSBaToB.byteLength);\n    const awsCryptoHash = new Sha256(hkdf);\n    awsCryptoHash.update(bufConcat);\n    const resultFromAWSCrypto = awsCryptoHash.digestSync();\n    const signatureString = base64Encoder.convert(resultFromAWSCrypto);\n    return signatureString;\n};\nconst urlB64ToUint8Array = (base64String) => {\n    const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n    const base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');\n    const rawData = base64Decoder.convert(base64);\n    const outputArray = new Uint8Array(rawData.length);\n    for (let i = 0; i < rawData.length; ++i) {\n        outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n};\n\nexport { getSignatureString };\n//# sourceMappingURL=getSignatureString.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { AuthAction, assertTokenProviderConfig, AmplifyUrl, base64Encoder, getDeviceName } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { InitiateAuthException } from '../types/errors.mjs';\nimport { AuthErrorCodes } from '../../../common/AuthErrorStrings.mjs';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { USER_ALREADY_AUTHENTICATED_EXCEPTION } from '../../../errors/constants.mjs';\nimport { getCurrentUser } from '../apis/getCurrentUser.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { createInitiateAuthClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createInitiateAuthClient.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport { createRespondToAuthChallengeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createRespondToAuthChallengeClient.mjs';\nimport { createVerifySoftwareTokenClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createVerifySoftwareTokenClient.mjs';\nimport { createAssociateSoftwareTokenClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createAssociateSoftwareTokenClient.mjs';\nimport { createConfirmDeviceClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createConfirmDeviceClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { handleWebAuthnSignInResult } from '../../../client/flows/userAuth/handleWebAuthnSignInResult.mjs';\nimport { handlePasswordSRP } from '../../../client/flows/shared/handlePasswordSRP.mjs';\nimport { initiateSelectedChallenge } from '../../../client/flows/userAuth/handleSelectChallenge.mjs';\nimport { handleSelectChallengeWithPassword } from '../../../client/flows/userAuth/handleSelectChallengeWithPassword.mjs';\nimport { handleSelectChallengeWithPasswordSRP } from '../../../client/flows/userAuth/handleSelectChallengeWithPasswordSRP.mjs';\nimport '../../../client/utils/store/autoSignInStore.mjs';\nimport { signInStore } from '../../../client/utils/store/signInStore.mjs';\nimport { assertDeviceMetadata } from './types.mjs';\nimport { getAuthenticationHelper } from './srp/getAuthenticationHelper.mjs';\nimport { getBytesFromHex } from './srp/getBytesFromHex.mjs';\nimport { getNowString } from './srp/getNowString.mjs';\nimport { getSignatureString } from './srp/getSignatureString.mjs';\nimport BigInteger from './srp/BigInteger/BigInteger.mjs';\nimport { getUserContextData } from './userContextData.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst USER_ATTRIBUTES = 'userAttributes.';\nasync function handleCustomChallenge({ challengeResponse, clientMetadata, session, username, config, tokenOrchestrator, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const challengeResponses = {\n        USERNAME: username,\n        ANSWER: challengeResponse,\n    };\n    const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata(username);\n    if (deviceMetadata && deviceMetadata.deviceKey) {\n        challengeResponses.DEVICE_KEY = deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: 'CUSTOM_CHALLENGE',\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const response = await respondToAuthChallenge({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n    if (response.ChallengeName === 'DEVICE_SRP_AUTH') {\n        return handleDeviceSRPAuth({\n            username,\n            config,\n            clientMetadata,\n            session: response.Session,\n            tokenOrchestrator,\n        });\n    }\n    return response;\n}\nasync function handleMFASetupChallenge({ challengeResponse, username, clientMetadata, session, deviceName, config, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    if (challengeResponse === 'EMAIL') {\n        return {\n            ChallengeName: 'MFA_SETUP',\n            Session: session,\n            ChallengeParameters: {\n                MFAS_CAN_SETUP: '[\"EMAIL_OTP\"]',\n            },\n            $metadata: {},\n        };\n    }\n    if (challengeResponse === 'TOTP') {\n        return {\n            ChallengeName: 'MFA_SETUP',\n            Session: session,\n            ChallengeParameters: {\n                MFAS_CAN_SETUP: '[\"SOFTWARE_TOKEN_MFA\"]',\n            },\n            $metadata: {},\n        };\n    }\n    const challengeResponses = {\n        USERNAME: username,\n    };\n    const isTOTPCode = /^\\d+$/.test(challengeResponse);\n    if (isTOTPCode) {\n        const verifySoftwareToken = createVerifySoftwareTokenClient({\n            endpointResolver: createCognitoUserPoolEndpointResolver({\n                endpointOverride: userPoolEndpoint,\n            }),\n        });\n        const { Session } = await verifySoftwareToken({\n            region: getRegionFromUserPoolId(userPoolId),\n            userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n        }, {\n            UserCode: challengeResponse,\n            Session: session,\n            FriendlyDeviceName: deviceName,\n        });\n        signInStore.dispatch({\n            type: 'SET_SIGN_IN_SESSION',\n            value: Session,\n        });\n        const jsonReq = {\n            ChallengeName: 'MFA_SETUP',\n            ChallengeResponses: challengeResponses,\n            Session,\n            ClientMetadata: clientMetadata,\n            ClientId: userPoolClientId,\n        };\n        const respondToAuthChallenge = createRespondToAuthChallengeClient({\n            endpointResolver: createCognitoUserPoolEndpointResolver({\n                endpointOverride: userPoolEndpoint,\n            }),\n        });\n        return respondToAuthChallenge({\n            region: getRegionFromUserPoolId(userPoolId),\n            userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n        }, jsonReq);\n    }\n    const isEmail = challengeResponse.includes('@');\n    if (isEmail) {\n        challengeResponses.EMAIL = challengeResponse;\n        const jsonReq = {\n            ChallengeName: 'MFA_SETUP',\n            ChallengeResponses: challengeResponses,\n            Session: session,\n            ClientMetadata: clientMetadata,\n            ClientId: userPoolClientId,\n        };\n        const respondToAuthChallenge = createRespondToAuthChallengeClient({\n            endpointResolver: createCognitoUserPoolEndpointResolver({\n                endpointOverride: userPoolEndpoint,\n            }),\n        });\n        return respondToAuthChallenge({\n            region: getRegionFromUserPoolId(userPoolId),\n            userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n        }, jsonReq);\n    }\n    throw new AuthError({\n        name: AuthErrorCodes.SignInException,\n        message: `Cannot proceed with MFA setup using challengeResponse: ${challengeResponse}`,\n        recoverySuggestion: 'Try passing \"EMAIL\", \"TOTP\", a valid email, or OTP code as the challengeResponse.',\n    });\n}\nasync function handleSelectMFATypeChallenge({ challengeResponse, username, clientMetadata, session, config, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    assertValidationError(challengeResponse === 'TOTP' ||\n        challengeResponse === 'SMS' ||\n        challengeResponse === 'EMAIL', AuthValidationErrorCode.IncorrectMFAMethod);\n    const challengeResponses = {\n        USERNAME: username,\n        ANSWER: mapMfaType(challengeResponse),\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: 'SELECT_MFA_TYPE',\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    return respondToAuthChallenge({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n}\nasync function handleCompleteNewPasswordChallenge({ challengeResponse, clientMetadata, session, username, requiredAttributes, config, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const challengeResponses = {\n        ...createAttributes(requiredAttributes),\n        NEW_PASSWORD: challengeResponse,\n        USERNAME: username,\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: 'NEW_PASSWORD_REQUIRED',\n        ChallengeResponses: challengeResponses,\n        ClientMetadata: clientMetadata,\n        Session: session,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    return respondToAuthChallenge({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n}\nasync function handleUserPasswordAuthFlow(username, password, clientMetadata, config, tokenOrchestrator) {\n    const { userPoolClientId, userPoolId, userPoolEndpoint } = config;\n    const authParameters = {\n        USERNAME: username,\n        PASSWORD: password,\n    };\n    const deviceMetadata = await tokenOrchestrator.getDeviceMetadata(username);\n    if (deviceMetadata && deviceMetadata.deviceKey) {\n        authParameters.DEVICE_KEY = deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        AuthFlow: 'USER_PASSWORD_AUTH',\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const initiateAuth = createInitiateAuthClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const response = await initiateAuth({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    const activeUsername = response.ChallengeParameters?.USERNAME ??\n        response.ChallengeParameters?.USER_ID_FOR_SRP ??\n        username;\n    setActiveSignInUsername(activeUsername);\n    if (response.ChallengeName === 'DEVICE_SRP_AUTH')\n        return handleDeviceSRPAuth({\n            username: activeUsername,\n            config,\n            clientMetadata,\n            session: response.Session,\n            tokenOrchestrator,\n        });\n    return response;\n}\nasync function handleUserSRPAuthFlow(username, password, clientMetadata, config, tokenOrchestrator) {\n    return handlePasswordSRP({\n        username,\n        password,\n        clientMetadata,\n        config,\n        tokenOrchestrator,\n        authFlow: 'USER_SRP_AUTH',\n    });\n}\nasync function handleCustomAuthFlowWithoutSRP(username, clientMetadata, config, tokenOrchestrator) {\n    const { userPoolClientId, userPoolId, userPoolEndpoint } = config;\n    const authParameters = {\n        USERNAME: username,\n    };\n    const deviceMetadata = await tokenOrchestrator.getDeviceMetadata(username);\n    if (deviceMetadata && deviceMetadata.deviceKey) {\n        authParameters.DEVICE_KEY = deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        AuthFlow: 'CUSTOM_AUTH',\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const initiateAuth = createInitiateAuthClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const response = await initiateAuth({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    const activeUsername = response.ChallengeParameters?.USERNAME ?? username;\n    setActiveSignInUsername(activeUsername);\n    if (response.ChallengeName === 'DEVICE_SRP_AUTH')\n        return handleDeviceSRPAuth({\n            username: activeUsername,\n            config,\n            clientMetadata,\n            session: response.Session,\n            tokenOrchestrator,\n        });\n    return response;\n}\nasync function handleCustomSRPAuthFlow(username, password, clientMetadata, config, tokenOrchestrator) {\n    assertTokenProviderConfig(config);\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const userPoolName = userPoolId?.split('_')[1] || '';\n    const authenticationHelper = await getAuthenticationHelper(userPoolName);\n    const authParameters = {\n        USERNAME: username,\n        SRP_A: authenticationHelper.A.toString(16),\n        CHALLENGE_NAME: 'SRP_A',\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        AuthFlow: 'CUSTOM_AUTH',\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const initiateAuth = createInitiateAuthClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { ChallengeParameters: challengeParameters, Session: session } = await initiateAuth({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    const activeUsername = challengeParameters?.USERNAME ?? username;\n    setActiveSignInUsername(activeUsername);\n    return retryOnResourceNotFoundException(handlePasswordVerifierChallenge, [\n        password,\n        challengeParameters,\n        clientMetadata,\n        session,\n        authenticationHelper,\n        config,\n        tokenOrchestrator,\n    ], activeUsername, tokenOrchestrator);\n}\nasync function handleDeviceSRPAuth({ username, config, clientMetadata, session, tokenOrchestrator, }) {\n    const { userPoolId, userPoolEndpoint } = config;\n    const clientId = config.userPoolClientId;\n    const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata(username);\n    assertDeviceMetadata(deviceMetadata);\n    const authenticationHelper = await getAuthenticationHelper(deviceMetadata.deviceGroupKey);\n    const challengeResponses = {\n        USERNAME: username,\n        SRP_A: authenticationHelper.A.toString(16),\n        DEVICE_KEY: deviceMetadata.deviceKey,\n    };\n    const jsonReqResponseChallenge = {\n        ChallengeName: 'DEVICE_SRP_AUTH',\n        ClientId: clientId,\n        ChallengeResponses: challengeResponses,\n        ClientMetadata: clientMetadata,\n        Session: session,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { ChallengeParameters: respondedChallengeParameters, Session } = await respondToAuthChallenge({ region: getRegionFromUserPoolId(userPoolId) }, jsonReqResponseChallenge);\n    return handleDevicePasswordVerifier(username, respondedChallengeParameters, clientMetadata, Session, authenticationHelper, config, tokenOrchestrator);\n}\nasync function handleDevicePasswordVerifier(username, challengeParameters, clientMetadata, session, authenticationHelper, { userPoolId, userPoolClientId, userPoolEndpoint }, tokenOrchestrator) {\n    const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata(username);\n    assertDeviceMetadata(deviceMetadata);\n    const serverBValue = new BigInteger(challengeParameters?.SRP_B, 16);\n    const salt = new BigInteger(challengeParameters?.SALT, 16);\n    const { deviceKey } = deviceMetadata;\n    const { deviceGroupKey } = deviceMetadata;\n    const hkdf = await authenticationHelper.getPasswordAuthenticationKey({\n        username: deviceMetadata.deviceKey,\n        password: deviceMetadata.randomPassword,\n        serverBValue,\n        salt,\n    });\n    const dateNow = getNowString();\n    const challengeResponses = {\n        USERNAME: challengeParameters?.USERNAME ?? username,\n        PASSWORD_CLAIM_SECRET_BLOCK: challengeParameters?.SECRET_BLOCK,\n        TIMESTAMP: dateNow,\n        PASSWORD_CLAIM_SIGNATURE: getSignatureString({\n            username: deviceKey,\n            userPoolName: deviceGroupKey,\n            challengeParameters,\n            dateNow,\n            hkdf,\n        }),\n        DEVICE_KEY: deviceKey,\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReqResponseChallenge = {\n        ChallengeName: 'DEVICE_PASSWORD_VERIFIER',\n        ClientId: userPoolClientId,\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        UserContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    return respondToAuthChallenge({ region: getRegionFromUserPoolId(userPoolId) }, jsonReqResponseChallenge);\n}\nasync function handlePasswordVerifierChallenge(password, challengeParameters, clientMetadata, session, authenticationHelper, config, tokenOrchestrator) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const userPoolName = userPoolId?.split('_')[1] || '';\n    const serverBValue = new BigInteger(challengeParameters?.SRP_B, 16);\n    const salt = new BigInteger(challengeParameters?.SALT, 16);\n    const username = challengeParameters?.USER_ID_FOR_SRP;\n    if (!username)\n        throw new AuthError({\n            name: 'EmptyUserIdForSRPException',\n            message: 'USER_ID_FOR_SRP was not found in challengeParameters',\n        });\n    const hkdf = await authenticationHelper.getPasswordAuthenticationKey({\n        username,\n        password,\n        serverBValue,\n        salt,\n    });\n    const dateNow = getNowString();\n    const challengeResponses = {\n        USERNAME: username,\n        PASSWORD_CLAIM_SECRET_BLOCK: challengeParameters?.SECRET_BLOCK,\n        TIMESTAMP: dateNow,\n        PASSWORD_CLAIM_SIGNATURE: getSignatureString({\n            username,\n            userPoolName,\n            challengeParameters,\n            dateNow,\n            hkdf,\n        }),\n    };\n    const deviceMetadata = await tokenOrchestrator.getDeviceMetadata(username);\n    if (deviceMetadata && deviceMetadata.deviceKey) {\n        challengeResponses.DEVICE_KEY = deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReqResponseChallenge = {\n        ChallengeName: 'PASSWORD_VERIFIER',\n        ChallengeResponses: challengeResponses,\n        ClientMetadata: clientMetadata,\n        Session: session,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const response = await respondToAuthChallenge({ region: getRegionFromUserPoolId(userPoolId) }, jsonReqResponseChallenge);\n    if (response.ChallengeName === 'DEVICE_SRP_AUTH')\n        return handleDeviceSRPAuth({\n            username,\n            config,\n            clientMetadata,\n            session: response.Session,\n            tokenOrchestrator,\n        });\n    return response;\n}\nasync function getSignInResult(params) {\n    const { challengeName, challengeParameters, availableChallenges } = params;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    switch (challengeName) {\n        case 'CUSTOM_CHALLENGE':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_CUSTOM_CHALLENGE',\n                    additionalInfo: challengeParameters,\n                },\n            };\n        case 'MFA_SETUP': {\n            const { signInSession, username } = signInStore.getState();\n            const mfaSetupTypes = getMFATypes(parseMFATypes(challengeParameters.MFAS_CAN_SETUP)) || [];\n            const allowedMfaSetupTypes = getAllowedMfaSetupTypes(mfaSetupTypes);\n            const isTotpMfaSetupAvailable = allowedMfaSetupTypes.includes('TOTP');\n            const isEmailMfaSetupAvailable = allowedMfaSetupTypes.includes('EMAIL');\n            if (isTotpMfaSetupAvailable && isEmailMfaSetupAvailable) {\n                return {\n                    isSignedIn: false,\n                    nextStep: {\n                        signInStep: 'CONTINUE_SIGN_IN_WITH_MFA_SETUP_SELECTION',\n                        allowedMFATypes: allowedMfaSetupTypes,\n                    },\n                };\n            }\n            if (isEmailMfaSetupAvailable) {\n                return {\n                    isSignedIn: false,\n                    nextStep: {\n                        signInStep: 'CONTINUE_SIGN_IN_WITH_EMAIL_SETUP',\n                    },\n                };\n            }\n            if (isTotpMfaSetupAvailable) {\n                const associateSoftwareToken = createAssociateSoftwareTokenClient({\n                    endpointResolver: createCognitoUserPoolEndpointResolver({\n                        endpointOverride: authConfig.userPoolEndpoint,\n                    }),\n                });\n                const { Session, SecretCode: secretCode } = await associateSoftwareToken({ region: getRegionFromUserPoolId(authConfig.userPoolId) }, {\n                    Session: signInSession,\n                });\n                signInStore.dispatch({\n                    type: 'SET_SIGN_IN_SESSION',\n                    value: Session,\n                });\n                return {\n                    isSignedIn: false,\n                    nextStep: {\n                        signInStep: 'CONTINUE_SIGN_IN_WITH_TOTP_SETUP',\n                        totpSetupDetails: getTOTPSetupDetails(secretCode, username),\n                    },\n                };\n            }\n            throw new AuthError({\n                name: AuthErrorCodes.SignInException,\n                message: `Cannot initiate MFA setup from available types: ${mfaSetupTypes}`,\n            });\n        }\n        case 'NEW_PASSWORD_REQUIRED':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_NEW_PASSWORD_REQUIRED',\n                    missingAttributes: parseAttributes(challengeParameters.requiredAttributes),\n                },\n            };\n        case 'SELECT_MFA_TYPE':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONTINUE_SIGN_IN_WITH_MFA_SELECTION',\n                    allowedMFATypes: getMFATypes(parseMFATypes(challengeParameters.MFAS_CAN_CHOOSE)),\n                },\n            };\n        case 'SMS_OTP':\n        case 'SMS_MFA':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_SMS_CODE',\n                    codeDeliveryDetails: {\n                        deliveryMedium: challengeParameters.CODE_DELIVERY_DELIVERY_MEDIUM,\n                        destination: challengeParameters.CODE_DELIVERY_DESTINATION,\n                    },\n                },\n            };\n        case 'SOFTWARE_TOKEN_MFA':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_TOTP_CODE',\n                },\n            };\n        case 'EMAIL_OTP':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_EMAIL_CODE',\n                    codeDeliveryDetails: {\n                        deliveryMedium: challengeParameters.CODE_DELIVERY_DELIVERY_MEDIUM,\n                        destination: challengeParameters.CODE_DELIVERY_DESTINATION,\n                    },\n                },\n            };\n        case 'WEB_AUTHN':\n            return handleWebAuthnSignInResult(challengeParameters);\n        case 'PASSWORD':\n        case 'PASSWORD_SRP':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_PASSWORD',\n                },\n            };\n        case 'SELECT_CHALLENGE':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONTINUE_SIGN_IN_WITH_FIRST_FACTOR_SELECTION',\n                    availableChallenges,\n                },\n            };\n    }\n    // TODO: remove this error message for production apps\n    throw new AuthError({\n        name: AuthErrorCodes.SignInException,\n        message: 'An error occurred during the sign in process. ' +\n            `${challengeName} challengeName returned by the underlying service was not addressed.`,\n    });\n}\nfunction getTOTPSetupDetails(secretCode, username) {\n    return {\n        sharedSecret: secretCode,\n        getSetupUri: (appName, accountName) => {\n            const totpUri = `otpauth://totp/${appName}:${accountName ?? username}?secret=${secretCode}&issuer=${appName}`;\n            return new AmplifyUrl(totpUri);\n        },\n    };\n}\nfunction getSignInResultFromError(errorName) {\n    if (errorName === InitiateAuthException.PasswordResetRequiredException) {\n        return {\n            isSignedIn: false,\n            nextStep: { signInStep: 'RESET_PASSWORD' },\n        };\n    }\n    else if (errorName === InitiateAuthException.UserNotConfirmedException) {\n        return {\n            isSignedIn: false,\n            nextStep: { signInStep: 'CONFIRM_SIGN_UP' },\n        };\n    }\n}\nfunction parseAttributes(attributes) {\n    if (!attributes)\n        return [];\n    const parsedAttributes = JSON.parse(attributes).map(att => att.includes(USER_ATTRIBUTES) ? att.replace(USER_ATTRIBUTES, '') : att);\n    return parsedAttributes;\n}\nfunction createAttributes(attributes) {\n    if (!attributes)\n        return {};\n    const newAttributes = {};\n    Object.entries(attributes).forEach(([key, value]) => {\n        if (value)\n            newAttributes[`${USER_ATTRIBUTES}${key}`] = value;\n    });\n    return newAttributes;\n}\nasync function handleChallengeName(username, challengeName, session, challengeResponse, config, tokenOrchestrator, clientMetadata, options) {\n    const userAttributes = options?.userAttributes;\n    const deviceName = options?.friendlyDeviceName;\n    switch (challengeName) {\n        case 'WEB_AUTHN':\n        case 'SELECT_CHALLENGE':\n            if (challengeResponse === 'PASSWORD_SRP' ||\n                challengeResponse === 'PASSWORD') {\n                return {\n                    ChallengeName: challengeResponse,\n                    Session: session,\n                    $metadata: {},\n                };\n            }\n            return initiateSelectedChallenge({\n                username,\n                session,\n                selectedChallenge: challengeResponse,\n                config,\n                clientMetadata,\n            });\n        case 'SELECT_MFA_TYPE':\n            return handleSelectMFATypeChallenge({\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                config,\n            });\n        case 'MFA_SETUP':\n            return handleMFASetupChallenge({\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                deviceName,\n                config,\n            });\n        case 'NEW_PASSWORD_REQUIRED':\n            return handleCompleteNewPasswordChallenge({\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                requiredAttributes: userAttributes,\n                config,\n            });\n        case 'CUSTOM_CHALLENGE':\n            return retryOnResourceNotFoundException(handleCustomChallenge, [\n                {\n                    challengeResponse,\n                    clientMetadata,\n                    session,\n                    username,\n                    config,\n                    tokenOrchestrator,\n                },\n            ], username, tokenOrchestrator);\n        case 'SMS_MFA':\n        case 'SOFTWARE_TOKEN_MFA':\n        case 'SMS_OTP':\n        case 'EMAIL_OTP':\n            return handleMFAChallenge({\n                challengeName,\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                config,\n            });\n        case 'PASSWORD':\n            return handleSelectChallengeWithPassword(username, challengeResponse, clientMetadata, config, session);\n        case 'PASSWORD_SRP':\n            return handleSelectChallengeWithPasswordSRP(username, challengeResponse, // This is the actual password\n            clientMetadata, config, session, tokenOrchestrator);\n    }\n    // TODO: remove this error message for production apps\n    throw new AuthError({\n        name: AuthErrorCodes.SignInException,\n        message: `An error occurred during the sign in process.\n\t\t${challengeName} challengeName returned by the underlying service was not addressed.`,\n    });\n}\nfunction mapMfaType(mfa) {\n    let mfaType = 'SMS_MFA';\n    if (mfa === 'TOTP')\n        mfaType = 'SOFTWARE_TOKEN_MFA';\n    if (mfa === 'EMAIL')\n        mfaType = 'EMAIL_OTP';\n    return mfaType;\n}\nfunction getMFAType(type) {\n    if (type === 'SMS_MFA')\n        return 'SMS';\n    if (type === 'SOFTWARE_TOKEN_MFA')\n        return 'TOTP';\n    if (type === 'EMAIL_OTP')\n        return 'EMAIL';\n    // TODO: log warning for unknown MFA type\n}\nfunction getMFATypes(types) {\n    if (!types)\n        return undefined;\n    return types.map(getMFAType).filter(Boolean);\n}\nfunction parseMFATypes(mfa) {\n    if (!mfa)\n        return [];\n    return JSON.parse(mfa);\n}\nfunction getAllowedMfaSetupTypes(availableMfaSetupTypes) {\n    return availableMfaSetupTypes.filter(authMfaType => authMfaType === 'EMAIL' || authMfaType === 'TOTP');\n}\nasync function assertUserNotAuthenticated() {\n    let authUser;\n    try {\n        authUser = await getCurrentUser();\n    }\n    catch (error) { }\n    if (authUser && authUser.userId && authUser.username) {\n        throw new AuthError({\n            name: USER_ALREADY_AUTHENTICATED_EXCEPTION,\n            message: 'There is already a signed in user.',\n            recoverySuggestion: 'Call signOut before calling signIn again.',\n        });\n    }\n}\n/**\n * This function is used to kick off the device management flow.\n *\n * If an error is thrown while generating a hash device or calling the `ConfirmDevice`\n * client, then this API will ignore the error and return undefined. Otherwise the authentication\n * flow will not complete and the user won't be able to be signed in.\n *\n * @returns DeviceMetadata | undefined\n */\nasync function getNewDeviceMetadata({ userPoolId, userPoolEndpoint, newDeviceMetadata, accessToken, }) {\n    if (!newDeviceMetadata)\n        return undefined;\n    const userPoolName = userPoolId.split('_')[1] || '';\n    const authenticationHelper = await getAuthenticationHelper(userPoolName);\n    const deviceKey = newDeviceMetadata?.DeviceKey;\n    const deviceGroupKey = newDeviceMetadata?.DeviceGroupKey;\n    try {\n        await authenticationHelper.generateHashDevice(deviceGroupKey ?? '', deviceKey ?? '');\n    }\n    catch (errGenHash) {\n        // TODO: log error here\n        return undefined;\n    }\n    const deviceSecretVerifierConfig = {\n        Salt: base64Encoder.convert(getBytesFromHex(authenticationHelper.getSaltToHashDevices())),\n        PasswordVerifier: base64Encoder.convert(getBytesFromHex(authenticationHelper.getVerifierDevices())),\n    };\n    const randomPassword = authenticationHelper.getRandomPassword();\n    try {\n        const confirmDevice = createConfirmDeviceClient({\n            endpointResolver: createCognitoUserPoolEndpointResolver({\n                endpointOverride: userPoolEndpoint,\n            }),\n        });\n        await confirmDevice({ region: getRegionFromUserPoolId(userPoolId) }, {\n            AccessToken: accessToken,\n            DeviceName: await getDeviceName(),\n            DeviceKey: newDeviceMetadata?.DeviceKey,\n            DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n        });\n        return {\n            deviceKey,\n            deviceGroupKey,\n            randomPassword,\n        };\n    }\n    catch (error) {\n        // TODO: log error here\n        return undefined;\n    }\n}\n/**\n * It will retry the function if the error is a `ResourceNotFoundException` and\n * will clean the device keys stored in the storage mechanism.\n *\n */\nasync function retryOnResourceNotFoundException(func, args, username, tokenOrchestrator) {\n    try {\n        return await func(...args);\n    }\n    catch (error) {\n        if (error instanceof AuthError &&\n            error.name === 'ResourceNotFoundException' &&\n            error.message.includes('Device does not exist.')) {\n            await tokenOrchestrator.clearDeviceMetadata(username);\n            return func(...args);\n        }\n        throw error;\n    }\n}\nfunction setActiveSignInUsername(username) {\n    const { dispatch } = signInStore;\n    dispatch({ type: 'SET_USERNAME', value: username });\n}\nfunction getActiveSignInUsername(username) {\n    const state = signInStore.getState();\n    return state.username ?? username;\n}\nasync function handleMFAChallenge({ challengeName, challengeResponse, clientMetadata, session, username, config, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const challengeResponses = {\n        USERNAME: username,\n    };\n    if (challengeName === 'EMAIL_OTP') {\n        challengeResponses.EMAIL_OTP_CODE = challengeResponse;\n    }\n    if (challengeName === 'SMS_MFA') {\n        challengeResponses.SMS_MFA_CODE = challengeResponse;\n    }\n    if (challengeName === 'SMS_OTP') {\n        challengeResponses.SMS_OTP_CODE = challengeResponse;\n    }\n    if (challengeName === 'SOFTWARE_TOKEN_MFA') {\n        challengeResponses.SOFTWARE_TOKEN_MFA_CODE = challengeResponse;\n    }\n    const userContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: challengeName,\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData: userContextData,\n    };\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    return respondToAuthChallenge({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n}\n\nexport { assertUserNotAuthenticated, createAttributes, getActiveSignInUsername, getAllowedMfaSetupTypes, getMFAType, getMFATypes, getNewDeviceMetadata, getSignInResult, getSignInResultFromError, getTOTPSetupDetails, handleChallengeName, handleCompleteNewPasswordChallenge, handleCustomAuthFlowWithoutSRP, handleCustomChallenge, handleCustomSRPAuthFlow, handleMFAChallenge, handleMFASetupChallenge, handlePasswordVerifierChallenge, handleSelectMFATypeChallenge, handleUserPasswordAuthFlow, handleUserSRPAuthFlow, mapMfaType, parseAttributes, parseMFATypes, retryOnResourceNotFoundException, setActiveSignInUsername };\n//# sourceMappingURL=signInHelpers.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { AuthErrorCodes } from '../../../common/AuthErrorStrings.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../../../providers/cognito/types/errors.mjs';\nimport { createRespondToAuthChallengeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createRespondToAuthChallengeClient.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../../../providers/cognito/factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { cacheCognitoTokens } from '../../../providers/cognito/tokenProvider/cacheTokens.mjs';\nimport { dispatchSignedInHubEvent } from '../../../providers/cognito/utils/dispatchSignedInHubEvent.mjs';\nimport { getNewDeviceMetadata, getSignInResult } from '../../../providers/cognito/utils/signInHelpers.mjs';\nimport '../../utils/store/autoSignInStore.mjs';\nimport { signInStore, setActiveSignInState, cleanActiveSignInState } from '../../utils/store/signInStore.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { assertPasskeyError, PasskeyErrorCode } from '../../utils/passkey/errors.mjs';\nimport { getPasskey } from '../../utils/passkey/getPasskey.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nasync function handleWebAuthnSignInResult(challengeParameters) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { username, signInSession, signInDetails, challengeName } = signInStore.getState();\n    if (challengeName !== 'WEB_AUTHN' || !username) {\n        throw new AuthError({\n            name: AuthErrorCodes.SignInException,\n            message: 'Unable to proceed due to invalid sign in state.',\n        });\n    }\n    const { CREDENTIAL_REQUEST_OPTIONS: credentialRequestOptions } = challengeParameters;\n    assertPasskeyError(!!credentialRequestOptions, PasskeyErrorCode.InvalidPasskeyAuthenticationOptions);\n    const cred = await getPasskey(JSON.parse(credentialRequestOptions));\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: authConfig.userPoolEndpoint,\n        }),\n    });\n    const { ChallengeName: nextChallengeName, ChallengeParameters: nextChallengeParameters, AuthenticationResult: authenticationResult, Session: nextSession, } = await respondToAuthChallenge({\n        region: getRegionFromUserPoolId(authConfig.userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, {\n        ChallengeName: 'WEB_AUTHN',\n        ChallengeResponses: {\n            USERNAME: username,\n            CREDENTIAL: JSON.stringify(cred),\n        },\n        ClientId: authConfig.userPoolClientId,\n        Session: signInSession,\n    });\n    setActiveSignInState({\n        signInSession: nextSession,\n        username,\n        challengeName: nextChallengeName,\n        signInDetails,\n    });\n    if (authenticationResult) {\n        await cacheCognitoTokens({\n            ...authenticationResult,\n            username,\n            NewDeviceMetadata: await getNewDeviceMetadata({\n                userPoolId: authConfig.userPoolId,\n                userPoolEndpoint: authConfig.userPoolEndpoint,\n                newDeviceMetadata: authenticationResult.NewDeviceMetadata,\n                accessToken: authenticationResult.AccessToken,\n            }),\n            signInDetails,\n        });\n        cleanActiveSignInState();\n        await dispatchSignedInHubEvent();\n        return {\n            isSignedIn: true,\n            nextStep: { signInStep: 'DONE' },\n        };\n    }\n    if (nextChallengeName === 'WEB_AUTHN') {\n        throw new AuthError({\n            name: AuthErrorCodes.SignInException,\n            message: 'Sequential WEB_AUTHN challenges returned from underlying service cannot be handled.',\n        });\n    }\n    return getSignInResult({\n        challengeName: nextChallengeName,\n        challengeParameters: nextChallengeParameters,\n    });\n}\n\nexport { handleWebAuthnSignInResult };\n//# sourceMappingURL=handleWebAuthnSignInResult.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction defaultState() {\n    return {\n        active: false,\n    };\n}\nconst autoSignInReducer = (state, action) => {\n    switch (action.type) {\n        case 'SET_USERNAME':\n            return {\n                ...state,\n                username: action.value,\n            };\n        case 'SET_SESSION':\n            return {\n                ...state,\n                session: action.value,\n            };\n        case 'START':\n            return {\n                ...state,\n                active: true,\n            };\n        case 'RESET':\n            return defaultState();\n        default:\n            return state;\n    }\n};\nconst createAutoSignInStore = (reducer) => {\n    let currentState = reducer(defaultState(), { type: 'RESET' });\n    return {\n        getState: () => currentState,\n        dispatch: action => {\n            currentState = reducer(currentState, action);\n        },\n    };\n};\nconst autoSignInStore = createAutoSignInStore(autoSignInReducer);\n\nexport { autoSignInStore };\n//# sourceMappingURL=autoSignInStore.mjs.map\n","import { autoSignInStore } from '../../../client/utils/store/autoSignInStore.mjs';\nimport '../../../client/utils/store/signInStore.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { AUTO_SIGN_IN_EXCEPTION } from '../../../errors/constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst initialAutoSignIn = async () => {\n    throw new AuthError({\n        name: AUTO_SIGN_IN_EXCEPTION,\n        message: 'The autoSignIn flow has not started, or has been cancelled/completed.',\n        recoverySuggestion: 'Please try to use the signIn API or log out before starting a new autoSignIn flow.',\n    });\n};\n/**\n * Signs a user in automatically after finishing the sign-up process.\n *\n * This API will automatically sign a user in if the autoSignIn flow has been completed in the following cases:\n * - User confirmed their account with a verification code sent to their phone or email (default option).\n * - User confirmed their account with a verification link sent to their phone or email. In order to\n * enable this option you need to go to the Amazon Cognito [console](https://aws.amazon.com/pm/cognito),\n * look for your userpool, then go to the `Messaging` tab and enable `link` mode inside the `Verification message` option.\n * Finally you need to define the `signUpVerificationMethod` in your `Auth` config.\n *\n * @example\n * ```typescript\n *  Amplify.configure({\n *    Auth: {\n *     Cognito: {\n *    ...cognitoConfig,\n *    signUpVerificationMethod: \"link\" // the default value is \"code\"\n *   }\n *\t}});\n * ```\n *\n * @throws AutoSignInException - Thrown when the autoSignIn flow has not started, or has been cancelled/completed.\n * @returns The signInOutput.\n *\n * @example\n * ```typescript\n *  // handleSignUp.ts\n * async function handleSignUp(\n *   username:string,\n *   password:string\n * ){\n *   try {\n *     const { nextStep } = await signUp({\n *       username,\n *       password,\n *       options: {\n *         userAttributes:{ email:'email@email.com'},\n *         autoSignIn: true // This enables the auto sign-in flow.\n *       },\n *     });\n *\n *     handleSignUpStep(nextStep);\n *\n *   } catch (error) {\n *     console.log(error);\n *   }\n * }\n *\n * // handleConfirmSignUp.ts\n * async function handleConfirmSignUp(username:string, confirmationCode:string) {\n *   try {\n *     const { nextStep } = await confirmSignUp({\n *       username,\n *       confirmationCode,\n *     });\n *\n *     handleSignUpStep(nextStep);\n *   } catch (error) {\n *     console.log(error);\n *   }\n * }\n *\n * // signUpUtils.ts\n * async function handleSignUpStep( step: SignUpOutput[\"nextStep\"]) {\n * switch (step.signUpStep) {\n *   case \"CONFIRM_SIGN_UP\":\n *\n *    // Redirect end-user to confirm-sign up screen.\n *\n *   case \"COMPLETE_AUTO_SIGN_IN\":\n *\t   const codeDeliveryDetails = step.codeDeliveryDetails;\n *     if (codeDeliveryDetails) {\n *      // Redirect user to confirm-sign-up with link screen.\n *     }\n *     const signInOutput = await autoSignIn();\n *   // handle sign-in steps\n * }\n *\n * ```\n */\n// TODO(Eslint): can this be refactored not using `let` on exported member?\n// eslint-disable-next-line import/no-mutable-exports\nlet autoSignIn = initialAutoSignIn;\n/**\n * Sets the context of autoSignIn at run time.\n * @internal\n */\nfunction setAutoSignIn(callback) {\n    autoSignIn = callback;\n}\n/**\n * Resets the context\n *\n * @internal\n */\nfunction resetAutoSignIn(resetCallback = true) {\n    if (resetCallback) {\n        autoSignIn = initialAutoSignIn;\n    }\n    autoSignInStore.dispatch({ type: 'RESET' });\n}\n\nexport { autoSignIn, resetAutoSignIn, setAutoSignIn };\n//# sourceMappingURL=autoSignIn.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { getActiveSignInUsername, getNewDeviceMetadata, getSignInResult, getSignInResultFromError } from '../utils/signInHelpers.mjs';\nimport { autoSignInStore } from '../../../client/utils/store/autoSignInStore.mjs';\nimport { setActiveSignInState, cleanActiveSignInState } from '../../../client/utils/store/signInStore.mjs';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens.mjs';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport '../utils/types.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { handleUserAuthFlow } from '../../../client/flows/userAuth/handleUserAuthFlow.mjs';\nimport { resetAutoSignIn } from './autoSignIn.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Signs a user in through a registered email or phone number without a password by by receiving and entering an OTP.\n *\n * @param input - The SignInWithUserAuthInput object\n * @returns SignInWithUserAuthOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException } - Cognito service errors\n * thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password -- needs to change\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function signInWithUserAuth(input) {\n    const { username, password, options } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'USER_AUTH',\n    };\n    assertTokenProviderConfig(authConfig);\n    const clientMetaData = options?.clientMetadata;\n    const preferredChallenge = options?.preferredChallenge;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    try {\n        const handleUserAuthFlowInput = {\n            username,\n            config: authConfig,\n            tokenOrchestrator,\n            clientMetadata: clientMetaData,\n            preferredChallenge,\n            password,\n        };\n        const autoSignInStoreState = autoSignInStore.getState();\n        if (autoSignInStoreState.active &&\n            autoSignInStoreState.username === username) {\n            handleUserAuthFlowInput.session = autoSignInStoreState.session;\n        }\n        const response = await handleUserAuthFlow(handleUserAuthFlowInput);\n        const activeUsername = getActiveSignInUsername(username);\n        setActiveSignInState({\n            signInSession: response.Session,\n            username: activeUsername,\n            challengeName: response.ChallengeName,\n            signInDetails,\n        });\n        if (response.AuthenticationResult) {\n            cleanActiveSignInState();\n            await cacheCognitoTokens({\n                username: activeUsername,\n                ...response.AuthenticationResult,\n                NewDeviceMetadata: await getNewDeviceMetadata({\n                    userPoolId: authConfig.userPoolId,\n                    userPoolEndpoint: authConfig.userPoolEndpoint,\n                    newDeviceMetadata: response.AuthenticationResult.NewDeviceMetadata,\n                    accessToken: response.AuthenticationResult.AccessToken,\n                }),\n                signInDetails,\n            });\n            await dispatchSignedInHubEvent();\n            resetAutoSignIn();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: response.ChallengeName,\n            challengeParameters: response.ChallengeParameters,\n            availableChallenges: 'AvailableChallenges' in response\n                ? response.AvailableChallenges\n                : undefined,\n        });\n    }\n    catch (error) {\n        cleanActiveSignInState();\n        resetAutoSignIn();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n\nexport { signInWithUserAuth };\n//# sourceMappingURL=signInWithUserAuth.mjs.map\n","import { AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getUserContextData } from '../../../providers/cognito/utils/userContextData.mjs';\nimport { createInitiateAuthClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createInitiateAuthClient.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport '../../../providers/cognito/types/errors.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../../../providers/cognito/factories/createCognitoUserPoolEndpointResolver.mjs';\nimport '@aws-amplify/core';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { handlePasswordSRP } from '../shared/handlePasswordSRP.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { setActiveSignInUsername } from '../../../providers/cognito/utils/signInHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Handles user authentication flow with configurable challenge preferences.\n * Supports AuthFactorType challenges through the USER_AUTH flow.\n *\n * @param {HandleUserAuthFlowInput} params - Authentication flow parameters\n * @param {string} params.username - The username for authentication\n * @param {Record<string, string>} [params.clientMetadata] - Optional metadata to pass to authentication service\n * @param {CognitoUserPoolConfig} params.config - Cognito User Pool configuration\n * @param {AuthTokenOrchestrator} params.tokenOrchestrator - Manages authentication tokens and device tracking\n * @param {AuthFactorType} [params.preferredChallenge] - Optional preferred authentication method\n * @param {string} [params.password] - Required when preferredChallenge is 'PASSWORD' or 'PASSWORD_SRP'\n *\n * @returns {Promise<InitiateAuthCommandOutput>} The authentication response from Cognito\n */\nasync function handleUserAuthFlow({ username, clientMetadata, config, tokenOrchestrator, preferredChallenge, password, session, }) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const authParameters = { USERNAME: username };\n    if (preferredChallenge) {\n        if (preferredChallenge === 'PASSWORD_SRP') {\n            assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n            return handlePasswordSRP({\n                username,\n                password,\n                clientMetadata,\n                config,\n                tokenOrchestrator,\n                authFlow: 'USER_AUTH',\n                preferredChallenge,\n            });\n        }\n        if (preferredChallenge === 'PASSWORD') {\n            assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n            authParameters.PASSWORD = password;\n        }\n        authParameters.PREFERRED_CHALLENGE = preferredChallenge;\n    }\n    const jsonReq = {\n        AuthFlow: 'USER_AUTH',\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    if (session) {\n        jsonReq.Session = session;\n    }\n    const initiateAuth = createInitiateAuthClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const response = await initiateAuth({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    // Set the active username immediately after successful authentication attempt\n    // If a user starts a new sign-in while another sign-in is incomplete,\n    // this ensures we're tracking the correct user for subsequent auth challenges.\n    setActiveSignInUsername(username);\n    return response;\n}\n\nexport { handleUserAuthFlow };\n//# sourceMappingURL=handleUserAuthFlow.mjs.map\n","import { assertUserNotAuthenticated } from '../utils/signInHelpers.mjs';\nimport { signInWithCustomAuth } from './signInWithCustomAuth.mjs';\nimport { signInWithCustomSRPAuth } from './signInWithCustomSRPAuth.mjs';\nimport { signInWithSRP } from './signInWithSRP.mjs';\nimport { signInWithUserPassword } from './signInWithUserPassword.mjs';\nimport { signInWithUserAuth } from './signInWithUserAuth.mjs';\nimport { resetAutoSignIn } from './autoSignIn.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Signs a user in\n *\n * @param input -  The SignInInput object\n * @returns SignInOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException }\n *  - Cognito service errors thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function signIn(input) {\n    // Here we want to reset the store but not reassign the callback.\n    // The callback is reset when the underlying promise resolves or rejects.\n    // With the advent of session based sign in, this guarantees that the signIn API initiates a new auth flow,\n    // regardless of whether it is called for a user currently engaged in an active auto sign in session.\n    resetAutoSignIn(false);\n    const authFlowType = input.options?.authFlowType;\n    await assertUserNotAuthenticated();\n    switch (authFlowType) {\n        case 'USER_SRP_AUTH':\n            return signInWithSRP(input);\n        case 'USER_PASSWORD_AUTH':\n            return signInWithUserPassword(input);\n        case 'CUSTOM_WITHOUT_SRP':\n            return signInWithCustomAuth(input);\n        case 'CUSTOM_WITH_SRP':\n            return signInWithCustomSRPAuth(input);\n        case 'USER_AUTH':\n            return signInWithUserAuth(input);\n        default:\n            return signInWithSRP(input);\n    }\n}\n\nexport { signIn };\n//# sourceMappingURL=signIn.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { handleUserSRPAuthFlow, getActiveSignInUsername, getNewDeviceMetadata, getSignInResult, getSignInResultFromError } from '../utils/signInHelpers.mjs';\nimport '../../../client/utils/store/autoSignInStore.mjs';\nimport { setActiveSignInState, cleanActiveSignInState } from '../../../client/utils/store/signInStore.mjs';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport '../utils/types.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent.mjs';\nimport { resetAutoSignIn } from './autoSignIn.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Signs a user in\n *\n * @param input - The SignInWithSRPInput object\n * @returns SignInWithSRPOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException } - Cognito service errors\n * thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function signInWithSRP(input) {\n    const { username, password } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'USER_SRP_AUTH',\n    };\n    assertTokenProviderConfig(authConfig);\n    const clientMetaData = input.options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n    try {\n        const { ChallengeName: handledChallengeName, ChallengeParameters: handledChallengeParameters, AuthenticationResult, Session, } = await handleUserSRPAuthFlow(username, password, clientMetaData, authConfig, tokenOrchestrator);\n        const activeUsername = getActiveSignInUsername(username);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username: activeUsername,\n            challengeName: handledChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            cleanActiveSignInState();\n            await cacheCognitoTokens({\n                username: activeUsername,\n                ...AuthenticationResult,\n                NewDeviceMetadata: await getNewDeviceMetadata({\n                    userPoolId: authConfig.userPoolId,\n                    userPoolEndpoint: authConfig.userPoolEndpoint,\n                    newDeviceMetadata: AuthenticationResult.NewDeviceMetadata,\n                    accessToken: AuthenticationResult.AccessToken,\n                }),\n                signInDetails,\n            });\n            await dispatchSignedInHubEvent();\n            resetAutoSignIn();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: handledChallengeName,\n            challengeParameters: handledChallengeParameters,\n        });\n    }\n    catch (error) {\n        cleanActiveSignInState();\n        resetAutoSignIn();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n\nexport { signInWithSRP };\n//# sourceMappingURL=signInWithSRP.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { retryOnResourceNotFoundException, handleUserPasswordAuthFlow, getActiveSignInUsername, getNewDeviceMetadata, getSignInResult, getSignInResultFromError } from '../utils/signInHelpers.mjs';\nimport '../../../client/utils/store/autoSignInStore.mjs';\nimport { setActiveSignInState, cleanActiveSignInState } from '../../../client/utils/store/signInStore.mjs';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport '../utils/types.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent.mjs';\nimport { resetAutoSignIn } from './autoSignIn.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Signs a user in using USER_PASSWORD_AUTH AuthFlowType\n *\n * @param input - The SignInWithUserPasswordInput object\n * @returns SignInWithUserPasswordOutput\n * @throws service: {@link InitiateAuthException } - Cognito service error thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function signInWithUserPassword(input) {\n    const { username, password, options } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'USER_PASSWORD_AUTH',\n    };\n    assertTokenProviderConfig(authConfig);\n    const metadata = options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n    try {\n        const { ChallengeName: retiredChallengeName, ChallengeParameters: retriedChallengeParameters, AuthenticationResult, Session, } = await retryOnResourceNotFoundException(handleUserPasswordAuthFlow, [username, password, metadata, authConfig, tokenOrchestrator], username, tokenOrchestrator);\n        const activeUsername = getActiveSignInUsername(username);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username: activeUsername,\n            challengeName: retiredChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            cleanActiveSignInState();\n            await cacheCognitoTokens({\n                ...AuthenticationResult,\n                username: activeUsername,\n                NewDeviceMetadata: await getNewDeviceMetadata({\n                    userPoolId: authConfig.userPoolId,\n                    userPoolEndpoint: authConfig.userPoolEndpoint,\n                    newDeviceMetadata: AuthenticationResult.NewDeviceMetadata,\n                    accessToken: AuthenticationResult.AccessToken,\n                }),\n                signInDetails,\n            });\n            await dispatchSignedInHubEvent();\n            resetAutoSignIn();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: retiredChallengeName,\n            challengeParameters: retriedChallengeParameters,\n        });\n    }\n    catch (error) {\n        cleanActiveSignInState();\n        resetAutoSignIn();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n\nexport { signInWithUserPassword };\n//# sourceMappingURL=signInWithUserPassword.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { retryOnResourceNotFoundException, handleCustomAuthFlowWithoutSRP, getActiveSignInUsername, getNewDeviceMetadata, getSignInResult, getSignInResultFromError } from '../utils/signInHelpers.mjs';\nimport '../../../client/utils/store/autoSignInStore.mjs';\nimport { setActiveSignInState, cleanActiveSignInState } from '../../../client/utils/store/signInStore.mjs';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport '../utils/types.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Signs a user in using a custom authentication flow without password\n *\n * @param input -  The SignInWithCustomAuthInput object\n * @returns AuthSignInResult\n * @throws service: {@link InitiateAuthException } - Cognito service errors thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws SignInWithCustomAuthOutput - Thrown when the token provider config is invalid.\n */\nasync function signInWithCustomAuth(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { username, password, options } = input;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'CUSTOM_WITHOUT_SRP',\n    };\n    const metadata = options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    assertValidationError(!password, AuthValidationErrorCode.CustomAuthSignInPassword);\n    try {\n        const { ChallengeName: retriedChallengeName, ChallengeParameters: retiredChallengeParameters, AuthenticationResult, Session, } = await retryOnResourceNotFoundException(handleCustomAuthFlowWithoutSRP, [username, metadata, authConfig, tokenOrchestrator], username, tokenOrchestrator);\n        const activeUsername = getActiveSignInUsername(username);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username: activeUsername,\n            challengeName: retriedChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            cleanActiveSignInState();\n            await cacheCognitoTokens({\n                username: activeUsername,\n                ...AuthenticationResult,\n                NewDeviceMetadata: await getNewDeviceMetadata({\n                    userPoolId: authConfig.userPoolId,\n                    userPoolEndpoint: authConfig.userPoolEndpoint,\n                    newDeviceMetadata: AuthenticationResult.NewDeviceMetadata,\n                    accessToken: AuthenticationResult.AccessToken,\n                }),\n                signInDetails,\n            });\n            await dispatchSignedInHubEvent();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: retriedChallengeName,\n            challengeParameters: retiredChallengeParameters,\n        });\n    }\n    catch (error) {\n        cleanActiveSignInState();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n\nexport { signInWithCustomAuth };\n//# sourceMappingURL=signInWithCustomAuth.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { handleCustomSRPAuthFlow, getActiveSignInUsername, getNewDeviceMetadata, getSignInResult, getSignInResultFromError } from '../utils/signInHelpers.mjs';\nimport '../../../client/utils/store/autoSignInStore.mjs';\nimport { setActiveSignInState, cleanActiveSignInState } from '../../../client/utils/store/signInStore.mjs';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport '../utils/types.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Signs a user in using a custom authentication flow with SRP\n *\n * @param input -  The SignInWithCustomSRPAuthInput object\n * @returns SignInWithCustomSRPAuthOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException } - Cognito\n * service errors thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function signInWithCustomSRPAuth(input) {\n    const { username, password, options } = input;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'CUSTOM_WITH_SRP',\n    };\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const metadata = options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n    try {\n        const { ChallengeName: handledChallengeName, ChallengeParameters: handledChallengeParameters, AuthenticationResult, Session, } = await handleCustomSRPAuthFlow(username, password, metadata, authConfig, tokenOrchestrator);\n        const activeUsername = getActiveSignInUsername(username);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username: activeUsername,\n            challengeName: handledChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            await cacheCognitoTokens({\n                username: activeUsername,\n                ...AuthenticationResult,\n                NewDeviceMetadata: await getNewDeviceMetadata({\n                    userPoolId: authConfig.userPoolId,\n                    userPoolEndpoint: authConfig.userPoolEndpoint,\n                    newDeviceMetadata: AuthenticationResult.NewDeviceMetadata,\n                    accessToken: AuthenticationResult.AccessToken,\n                }),\n                signInDetails,\n            });\n            cleanActiveSignInState();\n            await dispatchSignedInHubEvent();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: handledChallengeName,\n            challengeParameters: handledChallengeParameters,\n        });\n    }\n    catch (error) {\n        cleanActiveSignInState();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n\nexport { signInWithCustomSRPAuth };\n//# sourceMappingURL=signInWithCustomSRPAuth.mjs.map\n","import { HubInternal } from '@aws-amplify/core/internals/utils';\nimport { signIn } from '../apis/signIn.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { setAutoSignIn, resetAutoSignIn } from '../apis/autoSignIn.mjs';\nimport { AUTO_SIGN_IN_EXCEPTION } from '../../../errors/constants.mjs';\nimport { signInWithUserAuth } from '../apis/signInWithUserAuth.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst MAX_AUTOSIGNIN_POLLING_MS = 3 * 60 * 1000;\nfunction handleCodeAutoSignIn(signInInput) {\n    const stopHubListener = HubInternal.listen('auth-internal', async ({ payload }) => {\n        switch (payload.event) {\n            case 'confirmSignUp': {\n                const response = payload.data;\n                if (response?.isSignUpComplete) {\n                    HubInternal.dispatch('auth-internal', {\n                        event: 'autoSignIn',\n                    });\n                    setAutoSignIn(autoSignInWithCode(signInInput));\n                    stopHubListener();\n                }\n            }\n        }\n    });\n    // This will stop the listener if confirmSignUp is not resolved.\n    const timeOutId = setTimeout(() => {\n        stopHubListener();\n        clearTimeout(timeOutId);\n        resetAutoSignIn();\n    }, MAX_AUTOSIGNIN_POLLING_MS);\n}\nfunction debounce(fun, delay) {\n    let timer;\n    return (args) => {\n        if (!timer) {\n            fun(...args);\n        }\n        clearTimeout(timer);\n        timer = setTimeout(() => {\n            timer = undefined;\n        }, delay);\n    };\n}\nfunction handleAutoSignInWithLink(signInInput, resolve, reject) {\n    const start = Date.now();\n    const autoSignInPollingIntervalId = setInterval(async () => {\n        const elapsedTime = Date.now() - start;\n        const maxTime = MAX_AUTOSIGNIN_POLLING_MS;\n        if (elapsedTime > maxTime) {\n            clearInterval(autoSignInPollingIntervalId);\n            reject(new AuthError({\n                name: AUTO_SIGN_IN_EXCEPTION,\n                message: 'The account was not confirmed on time.',\n                recoverySuggestion: 'Try to verify your account by clicking the link sent your email or phone and then login manually.',\n            }));\n            resetAutoSignIn();\n        }\n        else {\n            try {\n                const signInOutput = await signIn(signInInput);\n                if (signInOutput.nextStep.signInStep !== 'CONFIRM_SIGN_UP') {\n                    resolve(signInOutput);\n                    clearInterval(autoSignInPollingIntervalId);\n                    resetAutoSignIn();\n                }\n            }\n            catch (error) {\n                clearInterval(autoSignInPollingIntervalId);\n                reject(error);\n                resetAutoSignIn();\n            }\n        }\n    }, 5000);\n}\nconst debouncedAutoSignInWithLink = debounce(handleAutoSignInWithLink, 300);\nconst debouncedAutoSignWithCodeOrUserConfirmed = debounce(handleAutoSignInWithCodeOrUserConfirmed, 300);\nfunction autoSignInWhenUserIsConfirmedWithLink(signInInput) {\n    return async () => {\n        return new Promise((resolve, reject) => {\n            debouncedAutoSignInWithLink([signInInput, resolve, reject]);\n        });\n    };\n}\nasync function handleAutoSignInWithCodeOrUserConfirmed(signInInput, resolve, reject) {\n    try {\n        const output = signInInput?.options?.authFlowType === 'USER_AUTH'\n            ? await signInWithUserAuth(signInInput)\n            : await signIn(signInInput);\n        resolve(output);\n        resetAutoSignIn();\n    }\n    catch (error) {\n        reject(error);\n        resetAutoSignIn();\n    }\n}\nfunction autoSignInWithCode(signInInput) {\n    return async () => {\n        return new Promise((resolve, reject) => {\n            debouncedAutoSignWithCodeOrUserConfirmed([signInInput, resolve, reject]);\n        });\n    };\n}\nconst autoSignInUserConfirmed = autoSignInWithCode;\n\nexport { autoSignInUserConfirmed, autoSignInWhenUserIsConfirmedWithLink, handleCodeAutoSignIn };\n//# sourceMappingURL=signUpHelpers.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { parseJsonError, parseJsonBody } from '@aws-amplify/core/internals/aws-client-utils';\nimport { validationErrorMap } from '../../../../common/AuthErrorStrings.mjs';\nimport { AuthError } from '../../../../errors/AuthError.mjs';\nimport { AuthValidationErrorCode } from '../../../../errors/types/validation.mjs';\nimport { assertServiceError } from '../../../../errors/utils/assertServiceError.mjs';\nimport { SignUpException } from '../../../../providers/cognito/types/errors.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createSignUpClientDeserializer = () => async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        assertServiceError(error);\n        if (\n        // Missing Password Error\n        // 1 validation error detected: Value at 'password'failed to satisfy constraint: Member must not be null\n        error.name === SignUpException.InvalidParameterException &&\n            /'password'/.test(error.message) &&\n            /Member must not be null/.test(error.message)) {\n            const name = AuthValidationErrorCode.EmptySignUpPassword;\n            const { message, recoverySuggestion } = validationErrorMap[name];\n            throw new AuthError({\n                name,\n                message,\n                recoverySuggestion,\n            });\n        }\n        throw new AuthError({ name: error.name, message: error.message });\n    }\n    return parseJsonBody(response);\n};\nconst createSignUpClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('SignUp'), createSignUpClientDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createSignUpClient, createSignUpClientDeserializer };\n//# sourceMappingURL=createSignUpClient.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { toAttributeType } from '../utils/apiHelpers.mjs';\nimport { autoSignInUserConfirmed, autoSignInWhenUserIsConfirmedWithLink, handleCodeAutoSignIn } from '../utils/signUpHelpers.mjs';\nimport { getUserContextData } from '../utils/userContextData.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport { createSignUpClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createSignUpClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { autoSignInStore } from '../../../client/utils/store/autoSignInStore.mjs';\nimport '../../../client/utils/store/signInStore.mjs';\nimport { setAutoSignIn } from './autoSignIn.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Creates a user\n *\n * @param input - The SignUpInput object\n * @returns SignUpOutput\n * @throws service: {@link SignUpException } - Cognito service errors thrown during the sign-up process.\n * @throws validation: {@link AuthValidationErrorCode } - Validation errors thrown either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function signUp(input) {\n    const { username, password, options } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const signUpVerificationMethod = authConfig?.signUpVerificationMethod ?? 'code';\n    const { clientMetadata, validationData, autoSignIn } = input.options ?? {};\n    assertTokenProviderConfig(authConfig);\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignUpUsername);\n    const signInServiceOptions = typeof autoSignIn !== 'boolean' ? autoSignIn : undefined;\n    const signInInput = {\n        username,\n        options: signInServiceOptions,\n    };\n    // if the authFlowType is 'CUSTOM_WITHOUT_SRP' then we don't include the password\n    if (signInServiceOptions?.authFlowType !== 'CUSTOM_WITHOUT_SRP') {\n        signInInput.password = password;\n    }\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = authConfig;\n    const signUpClient = createSignUpClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const signUpClientInput = {\n        Username: username,\n        Password: undefined,\n        UserAttributes: options?.userAttributes && toAttributeType(options?.userAttributes),\n        ClientMetadata: clientMetadata,\n        ValidationData: validationData && toAttributeType(validationData),\n        ClientId: userPoolClientId,\n        UserContextData: getUserContextData({\n            username,\n            userPoolId,\n            userPoolClientId,\n        }),\n    };\n    if (password) {\n        signUpClientInput.Password = password;\n    }\n    const { UserSub: userId, CodeDeliveryDetails: cdd, UserConfirmed: userConfirmed, Session: session, } = await signUpClient({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignUp),\n    }, signUpClientInput);\n    if (signInServiceOptions || autoSignIn === true) {\n        autoSignInStore.dispatch({ type: 'START' });\n        autoSignInStore.dispatch({ type: 'SET_USERNAME', value: username });\n        autoSignInStore.dispatch({ type: 'SET_SESSION', value: session });\n    }\n    const codeDeliveryDetails = {\n        destination: cdd?.Destination,\n        deliveryMedium: cdd?.DeliveryMedium,\n        attributeName: cdd?.AttributeName,\n    };\n    const isSignUpComplete = !!userConfirmed;\n    const isAutoSignInStarted = autoSignInStore.getState().active;\n    // Sign Up Complete\n    // No Confirm Sign In Step Required\n    if (isSignUpComplete) {\n        if (isAutoSignInStarted) {\n            setAutoSignIn(autoSignInUserConfirmed(signInInput));\n            return {\n                isSignUpComplete: true,\n                nextStep: {\n                    signUpStep: 'COMPLETE_AUTO_SIGN_IN',\n                },\n                userId,\n            };\n        }\n        return {\n            isSignUpComplete: true,\n            nextStep: {\n                signUpStep: 'DONE',\n            },\n            userId,\n        };\n    }\n    // Sign Up Not Complete\n    // Confirm Sign Up Step Required\n    if (isAutoSignInStarted) {\n        // Confirmation Via Link Occurs In Separate Context\n        // AutoSignIn Fn Will Initiate Polling Once Executed\n        if (signUpVerificationMethod === 'link') {\n            setAutoSignIn(autoSignInWhenUserIsConfirmedWithLink(signInInput));\n            return {\n                isSignUpComplete: false,\n                nextStep: {\n                    signUpStep: 'COMPLETE_AUTO_SIGN_IN',\n                    codeDeliveryDetails,\n                },\n                userId,\n            };\n        }\n        // Confirmation Via Code Occurs In Same Context\n        // AutoSignIn Next Step Will Be Returned From Confirm Sign Up\n        handleCodeAutoSignIn(signInInput);\n    }\n    return {\n        isSignUpComplete: false,\n        nextStep: {\n            signUpStep: 'CONFIRM_SIGN_UP',\n            codeDeliveryDetails,\n        },\n        userId,\n    };\n}\n\nexport { signUp };\n//# sourceMappingURL=signUp.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createForgotPasswordClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ForgotPassword'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createForgotPasswordClient };\n//# sourceMappingURL=createForgotPasswordClient.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { getUserContextData } from '../utils/userContextData.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../types/errors.mjs';\nimport { createForgotPasswordClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createForgotPasswordClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Resets a user's password.\n *\n * @param input -  The ResetPasswordInput object.\n * @returns ResetPasswordOutput\n * @throws -{@link ForgotPasswordException }\n * Thrown due to an invalid confirmation code or password.\n * @throws -{@link AuthValidationErrorCode }\n * Thrown due to an empty username.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n **/\nasync function resetPassword(input) {\n    const { username } = input;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptyResetPasswordUsername);\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolClientId, userPoolId, userPoolEndpoint } = authConfig;\n    const clientMetadata = input.options?.clientMetadata;\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const forgotPassword = createForgotPasswordClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const res = await forgotPassword({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ResetPassword),\n    }, {\n        Username: username,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    });\n    const codeDeliveryDetails = res.CodeDeliveryDetails;\n    return {\n        isPasswordReset: false,\n        nextStep: {\n            resetPasswordStep: 'CONFIRM_RESET_PASSWORD_WITH_CODE',\n            codeDeliveryDetails: {\n                deliveryMedium: codeDeliveryDetails?.DeliveryMedium,\n                destination: codeDeliveryDetails?.Destination,\n                attributeName: codeDeliveryDetails?.AttributeName,\n            },\n        },\n    };\n}\n\nexport { resetPassword };\n//# sourceMappingURL=resetPassword.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createConfirmForgotPasswordClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ConfirmForgotPassword'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createConfirmForgotPasswordClient };\n//# sourceMappingURL=createConfirmForgotPasswordClient.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { getUserContextData } from '../utils/userContextData.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../types/errors.mjs';\nimport { createConfirmForgotPasswordClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createConfirmForgotPasswordClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Confirms the new password and verification code to reset the password.\n *\n * @param input -  The ConfirmResetPasswordInput object.\n * @throws -{@link ConfirmForgotPasswordException }\n * Thrown due to an invalid confirmation code or password.\n * @throws -{@link AuthValidationErrorCode }\n * Thrown due to an empty confirmation code, password or username.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function confirmResetPassword(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolClientId, userPoolId, userPoolEndpoint } = authConfig;\n    const { username, newPassword } = input;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptyConfirmResetPasswordUsername);\n    assertValidationError(!!newPassword, AuthValidationErrorCode.EmptyConfirmResetPasswordNewPassword);\n    const code = input.confirmationCode;\n    assertValidationError(!!code, AuthValidationErrorCode.EmptyConfirmResetPasswordConfirmationCode);\n    const metadata = input.options?.clientMetadata;\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const confirmForgotPassword = createConfirmForgotPasswordClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await confirmForgotPassword({\n        region: getRegionFromUserPoolId(authConfig.userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmResetPassword),\n    }, {\n        Username: username,\n        ConfirmationCode: code,\n        Password: newPassword,\n        ClientMetadata: metadata,\n        ClientId: authConfig.userPoolClientId,\n        UserContextData,\n    });\n}\n\nexport { confirmResetPassword };\n//# sourceMappingURL=confirmResetPassword.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createResendConfirmationCodeClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ResendConfirmationCode'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createResendConfirmationCodeClient };\n//# sourceMappingURL=createResendConfirmationCodeClient.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { getUserContextData } from '../utils/userContextData.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../types/errors.mjs';\nimport { createResendConfirmationCodeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createResendConfirmationCodeClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Resend the confirmation code while signing up\n *\n * @param input -  The ResendSignUpCodeInput object\n * @returns ResendSignUpCodeOutput\n * @throws service: {@link ResendConfirmationException } - Cognito service errors thrown when resending the code.\n * @throws validation: {@link AuthValidationErrorCode } - Validation errors thrown either username are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function resendSignUpCode(input) {\n    const { username } = input;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignUpUsername);\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolClientId, userPoolId, userPoolEndpoint } = authConfig;\n    const clientMetadata = input.options?.clientMetadata;\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const resendConfirmationCode = createResendConfirmationCodeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { CodeDeliveryDetails } = await resendConfirmationCode({\n        region: getRegionFromUserPoolId(authConfig.userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ResendSignUpCode),\n    }, {\n        Username: username,\n        ClientMetadata: clientMetadata,\n        ClientId: authConfig.userPoolClientId,\n        UserContextData,\n    });\n    const { DeliveryMedium, AttributeName, Destination } = {\n        ...CodeDeliveryDetails,\n    };\n    return {\n        destination: Destination,\n        deliveryMedium: DeliveryMedium,\n        attributeName: AttributeName\n            ? AttributeName\n            : undefined,\n    };\n}\n\nexport { resendSignUpCode };\n//# sourceMappingURL=resendSignUpCode.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createConfirmSignUpClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ConfirmSignUp'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createConfirmSignUpClient };\n//# sourceMappingURL=createConfirmSignUpClient.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction, HubInternal } from '@aws-amplify/core/internals/utils';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { getUserContextData } from '../utils/userContextData.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../types/errors.mjs';\nimport { createConfirmSignUpClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createConfirmSignUpClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { autoSignInStore } from '../../../client/utils/store/autoSignInStore.mjs';\nimport '../../../client/utils/store/signInStore.mjs';\nimport { resetAutoSignIn } from './autoSignIn.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Confirms a new user account.\n *\n * @param input -  The ConfirmSignUpInput object.\n * @returns ConfirmSignUpOutput\n * @throws -{@link ConfirmSignUpException }\n * Thrown due to an invalid confirmation code.\n * @throws -{@link AuthValidationErrorCode }\n * Thrown due to an empty confirmation code\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function confirmSignUp(input) {\n    const { username, confirmationCode, options } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = authConfig;\n    const clientMetadata = options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptyConfirmSignUpUsername);\n    assertValidationError(!!confirmationCode, AuthValidationErrorCode.EmptyConfirmSignUpCode);\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const confirmSignUpClient = createConfirmSignUpClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { Session: session } = await confirmSignUpClient({\n        region: getRegionFromUserPoolId(authConfig.userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignUp),\n    }, {\n        Username: username,\n        ConfirmationCode: confirmationCode,\n        ClientMetadata: clientMetadata,\n        ForceAliasCreation: options?.forceAliasCreation,\n        ClientId: authConfig.userPoolClientId,\n        UserContextData,\n    });\n    return new Promise((resolve, reject) => {\n        try {\n            const signUpOut = {\n                isSignUpComplete: true,\n                nextStep: {\n                    signUpStep: 'DONE',\n                },\n            };\n            const autoSignInStoreState = autoSignInStore.getState();\n            if (!autoSignInStoreState.active ||\n                autoSignInStoreState.username !== username) {\n                resolve(signUpOut);\n                resetAutoSignIn();\n                return;\n            }\n            autoSignInStore.dispatch({ type: 'SET_SESSION', value: session });\n            const stopListener = HubInternal.listen('auth-internal', ({ payload }) => {\n                switch (payload.event) {\n                    case 'autoSignIn':\n                        resolve({\n                            isSignUpComplete: true,\n                            nextStep: {\n                                signUpStep: 'COMPLETE_AUTO_SIGN_IN',\n                            },\n                        });\n                        stopListener();\n                }\n            });\n            HubInternal.dispatch('auth-internal', {\n                event: 'confirmSignUp',\n                data: signUpOut,\n            });\n        }\n        catch (error) {\n            reject(error);\n        }\n    });\n}\n\nexport { confirmSignUp };\n//# sourceMappingURL=confirmSignUp.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport '../../../client/utils/store/autoSignInStore.mjs';\nimport { signInStore, setActiveSignInState, cleanActiveSignInState } from '../../../client/utils/store/signInStore.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { handleChallengeName, getNewDeviceMetadata, getSignInResult, getSignInResultFromError } from '../utils/signInHelpers.mjs';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { AuthErrorCodes } from '../../../common/AuthErrorStrings.mjs';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport '../utils/types.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Continues or completes the sign in process when required by the initial call to `signIn`.\n *\n * @param input -  The ConfirmSignInInput object\n * @returns ConfirmSignInOutput\n * @throws  -{@link VerifySoftwareTokenException }:\n * Thrown due to an invalid MFA token.\n * @throws  -{@link RespondToAuthChallengeException }:\n * Thrown due to an invalid auth challenge response.\n * @throws  -{@link AssociateSoftwareTokenException}:\n * Thrown due to a service error during the MFA setup process.\n * @throws  -{@link AuthValidationErrorCode }:\n * Thrown when `challengeResponse` is not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function confirmSignIn(input) {\n    const { challengeResponse, options } = input;\n    const { username, challengeName, signInSession, signInDetails } = signInStore.getState();\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const clientMetaData = options?.clientMetadata;\n    assertValidationError(!!challengeResponse, AuthValidationErrorCode.EmptyChallengeResponse);\n    if (!username || !challengeName || !signInSession)\n        // TODO: remove this error message for production apps\n        throw new AuthError({\n            name: AuthErrorCodes.SignInException,\n            message: `\n\t\t\tAn error occurred during the sign in process.\n\n\t\t\tThis most likely occurred due to:\n\t\t\t1. signIn was not called before confirmSignIn.\n\t\t\t2. signIn threw an exception.\n\t\t\t3. page was refreshed during the sign in flow.\n\t\t\t`,\n            recoverySuggestion: 'Make sure a successful call to signIn is made before calling confirmSignIn' +\n                'and that the page is not refreshed until the sign in process is done.',\n        });\n    try {\n        const { Session, ChallengeName: handledChallengeName, AuthenticationResult, ChallengeParameters: handledChallengeParameters, } = await handleChallengeName(username, challengeName, signInSession, challengeResponse, authConfig, tokenOrchestrator, clientMetaData, options);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username,\n            challengeName: handledChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            cleanActiveSignInState();\n            await cacheCognitoTokens({\n                username,\n                ...AuthenticationResult,\n                NewDeviceMetadata: await getNewDeviceMetadata({\n                    userPoolId: authConfig.userPoolId,\n                    userPoolEndpoint: authConfig.userPoolEndpoint,\n                    newDeviceMetadata: AuthenticationResult.NewDeviceMetadata,\n                    accessToken: AuthenticationResult.AccessToken,\n                }),\n                signInDetails,\n            });\n            await dispatchSignedInHubEvent();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: handledChallengeName,\n            challengeParameters: handledChallengeParameters,\n        });\n    }\n    catch (error) {\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n\nexport { confirmSignIn };\n//# sourceMappingURL=confirmSignIn.mjs.map\n","import { AuthAction } from '@aws-amplify/core/internals/utils';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../../../providers/cognito/types/errors.mjs';\nimport { createRespondToAuthChallengeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createRespondToAuthChallengeClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../../../providers/cognito/factories/createCognitoUserPoolEndpointResolver.mjs';\nimport '@aws-amplify/core';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Handles the SELECT_CHALLENGE response for authentication.\n * Initiates the selected authentication challenge based on user choice.\n *\n * @param {Object} params - The parameters for handling the selected challenge\n * @param {string} params.username - The username for authentication\n * @param {string} params.session - The current authentication session token\n * @param {string} params.selectedChallenge - The challenge type selected by the user\n * @param {CognitoUserPoolConfig} params.config - Cognito User Pool configuration\n * @param {ClientMetadata} [params.clientMetadata] - Optional metadata to be sent with auth requests\n *\n * @returns {Promise<RespondToAuthChallengeCommandOutput>} The challenge response\n */\nasync function initiateSelectedChallenge({ username, session, selectedChallenge, config, clientMetadata, }) {\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: config.userPoolEndpoint,\n        }),\n    });\n    return respondToAuthChallenge({\n        region: getRegionFromUserPoolId(config.userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, {\n        ChallengeName: 'SELECT_CHALLENGE',\n        ChallengeResponses: {\n            USERNAME: username,\n            ANSWER: selectedChallenge,\n        },\n        ClientId: config.userPoolClientId,\n        Session: session,\n        ClientMetadata: clientMetadata,\n    });\n}\n\nexport { initiateSelectedChallenge };\n//# sourceMappingURL=handleSelectChallenge.mjs.map\n","import { AuthAction } from '@aws-amplify/core/internals/utils';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../../../providers/cognito/types/errors.mjs';\nimport { createRespondToAuthChallengeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createRespondToAuthChallengeClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../../../providers/cognito/factories/createCognitoUserPoolEndpointResolver.mjs';\nimport '@aws-amplify/core';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { getUserContextData } from '../../../providers/cognito/utils/userContextData.mjs';\nimport { setActiveSignInUsername } from '../../../providers/cognito/utils/signInHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Handles the SELECT_CHALLENGE response specifically for Password authentication.\n * This function combines the SELECT_CHALLENGE flow with standard password authentication.\n *\n * @param {string} username - The username for authentication\n * @param {string} password - The user's password\n * @param {ClientMetadata} [clientMetadata] - Optional metadata to be sent with auth requests\n * @param {CognitoUserPoolConfig} config - Cognito User Pool configuration\n * @param {string} session - The current authentication session token\n *\n * @returns {Promise<RespondToAuthChallengeCommandOutput>} The challenge response\n */\nasync function handleSelectChallengeWithPassword(username, password, clientMetadata, config, session) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const authParameters = {\n        ANSWER: 'PASSWORD',\n        USERNAME: username,\n        PASSWORD: password,\n    };\n    const userContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const response = await respondToAuthChallenge({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, {\n        ChallengeName: 'SELECT_CHALLENGE',\n        ChallengeResponses: authParameters,\n        ClientId: userPoolClientId,\n        ClientMetadata: clientMetadata,\n        Session: session,\n        UserContextData: userContextData,\n    });\n    const activeUsername = response.ChallengeParameters?.USERNAME ?? username;\n    setActiveSignInUsername(activeUsername);\n    return response;\n}\n\nexport { handleSelectChallengeWithPassword };\n//# sourceMappingURL=handleSelectChallengeWithPassword.mjs.map\n","import { AuthAction } from '@aws-amplify/core/internals/utils';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../../../providers/cognito/types/errors.mjs';\nimport { createRespondToAuthChallengeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createRespondToAuthChallengeClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../../../providers/cognito/factories/createCognitoUserPoolEndpointResolver.mjs';\nimport '@aws-amplify/core';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { getAuthenticationHelper } from '../../../providers/cognito/utils/srp/getAuthenticationHelper.mjs';\nimport '../../../providers/cognito/utils/srp/constants.mjs';\nimport '@aws-crypto/sha256-js';\nimport { getUserContextData } from '../../../providers/cognito/utils/userContextData.mjs';\nimport { setActiveSignInUsername, retryOnResourceNotFoundException, handlePasswordVerifierChallenge } from '../../../providers/cognito/utils/signInHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Handles the SELECT_CHALLENGE response specifically for Password SRP authentication.\n * This function combines the SELECT_CHALLENGE flow with Password SRP protocol.\n *\n * @param {string} username - The username for authentication\n * @param {string} password - The user's password\n * @param {ClientMetadata} [clientMetadata] - Optional metadata to be sent with auth requests\n * @param {CognitoUserPoolConfig} config - Cognito User Pool configuration\n * @param {string} session - The current authentication session token\n * @param {AuthTokenOrchestrator} tokenOrchestrator - Token orchestrator for managing auth tokens\n *\n * @returns {Promise<RespondToAuthChallengeCommandOutput>} The challenge response\n */\nasync function handleSelectChallengeWithPasswordSRP(username, password, clientMetadata, config, session, tokenOrchestrator) {\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = config;\n    const userPoolName = userPoolId.split('_')[1] || '';\n    const authenticationHelper = await getAuthenticationHelper(userPoolName);\n    const authParameters = {\n        ANSWER: 'PASSWORD_SRP',\n        USERNAME: username,\n        SRP_A: authenticationHelper.A.toString(16),\n    };\n    const userContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const respondToAuthChallenge = createRespondToAuthChallengeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const response = await respondToAuthChallenge({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, {\n        ChallengeName: 'SELECT_CHALLENGE',\n        ChallengeResponses: authParameters,\n        ClientId: userPoolClientId,\n        ClientMetadata: clientMetadata,\n        Session: session,\n        UserContextData: userContextData,\n    });\n    const activeUsername = response.ChallengeParameters?.USERNAME ?? username;\n    setActiveSignInUsername(activeUsername);\n    if (response.ChallengeName === 'PASSWORD_VERIFIER') {\n        return retryOnResourceNotFoundException(handlePasswordVerifierChallenge, [\n            password,\n            response.ChallengeParameters,\n            clientMetadata,\n            response.Session,\n            authenticationHelper,\n            config,\n            tokenOrchestrator,\n        ], activeUsername, tokenOrchestrator);\n    }\n    return response;\n}\n\nexport { handleSelectChallengeWithPasswordSRP };\n//# sourceMappingURL=handleSelectChallengeWithPasswordSRP.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createSetUserMFAPreferenceClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('SetUserMFAPreference'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createSetUserMFAPreferenceClient };\n//# sourceMappingURL=createSetUserMFAPreferenceClient.mjs.map\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createSetUserMFAPreferenceClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createSetUserMFAPreferenceClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Updates the MFA preference of the user.\n *\n * @param input - The UpdateMFAPreferenceInput object.\n * @throws -{@link SetUserMFAPreferenceException } - Service error thrown when the MFA preference cannot be updated.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function updateMFAPreference(input) {\n    const { sms, totp, email } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const setUserMFAPreference = createSetUserMFAPreferenceClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await setUserMFAPreference({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.UpdateMFAPreference),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        SMSMfaSettings: getMFASettings(sms),\n        SoftwareTokenMfaSettings: getMFASettings(totp),\n        EmailMfaSettings: getMFASettings(email),\n    });\n}\nfunction getMFASettings(mfaPreference) {\n    if (mfaPreference === 'DISABLED') {\n        return {\n            Enabled: false,\n        };\n    }\n    else if (mfaPreference === 'PREFERRED') {\n        return {\n            Enabled: true,\n            PreferredMfa: true,\n        };\n    }\n    else if (mfaPreference === 'ENABLED') {\n        return {\n            Enabled: true,\n        };\n    }\n    else if (mfaPreference === 'NOT_PREFERRED') {\n        return {\n            Enabled: true,\n            PreferredMfa: false,\n        };\n    }\n}\n\nexport { getMFASettings, updateMFAPreference };\n//# sourceMappingURL=updateMFAPreference.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createGetUserClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('GetUser'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createGetUserClient };\n//# sourceMappingURL=createGetUserClient.mjs.map\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getMFAType, getMFATypes } from '../utils/signInHelpers.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createGetUserClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createGetUserClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Fetches the preferred MFA setting and enabled MFA settings for the user.\n *\n * @returns FetchMFAPreferenceOutput\n * @throws  -{@link GetUserException} : error thrown when the service fails to fetch MFA preference\n * and settings.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function fetchMFAPreference() {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const getUser = createGetUserClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { PreferredMfaSetting, UserMFASettingList } = await getUser({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.FetchMFAPreference),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n    });\n    return {\n        preferred: getMFAType(PreferredMfaSetting),\n        enabled: getMFATypes(UserMFASettingList),\n    };\n}\n\nexport { fetchMFAPreference };\n//# sourceMappingURL=fetchMFAPreference.mjs.map\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../types/errors.mjs';\nimport { createVerifySoftwareTokenClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createVerifySoftwareTokenClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Verifies an OTP code retrieved from an associated authentication app.\n *\n * @param input - The VerifyTOTPSetupInput\n * @throws  -{@link VerifySoftwareTokenException }:\n * Thrown due to an invalid MFA token.\n * @throws  -{@link AuthValidationErrorCode }:\n * Thrown when `code` is not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function verifyTOTPSetup(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { code, options } = input;\n    assertValidationError(!!code, AuthValidationErrorCode.EmptyVerifyTOTPSetupCode);\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const verifySoftwareToken = createVerifySoftwareTokenClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await verifySoftwareToken({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.VerifyTOTPSetup),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        UserCode: code,\n        FriendlyDeviceName: options?.friendlyDeviceName,\n    });\n}\n\nexport { verifyTOTPSetup };\n//# sourceMappingURL=verifyTOTPSetup.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createChangePasswordClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ChangePassword'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createChangePasswordClient };\n//# sourceMappingURL=createChangePasswordClient.mjs.map\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../types/errors.mjs';\nimport { createChangePasswordClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createChangePasswordClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Updates user's password while authenticated.\n *\n * @param input - The UpdatePasswordInput object.\n * @throws - {@link ChangePasswordException} - Cognito service errors thrown when updating a password.\n * @throws - {@link AuthValidationErrorCode} - Validation errors thrown when oldPassword or newPassword are empty.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function updatePassword(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { oldPassword, newPassword } = input;\n    assertValidationError(!!oldPassword, AuthValidationErrorCode.EmptyUpdatePassword);\n    assertValidationError(!!newPassword, AuthValidationErrorCode.EmptyUpdatePassword);\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const changePassword = createChangePasswordClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await changePassword({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.UpdatePassword),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        PreviousPassword: oldPassword,\n        ProposedPassword: newPassword,\n    });\n}\n\nexport { updatePassword };\n//# sourceMappingURL=updatePassword.mjs.map\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { SETUP_TOTP_EXCEPTION } from '../types/errors.mjs';\nimport { getTOTPSetupDetails } from '../utils/signInHelpers.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport { createAssociateSoftwareTokenClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createAssociateSoftwareTokenClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Sets up TOTP for the user.\n *\n * @returns SetUpTOTPOutput\n * @throws -{@link AssociateSoftwareTokenException}\n * Thrown if a service occurs while setting up TOTP.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n **/\nasync function setUpTOTP() {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const username = tokens.idToken?.payload['cognito:username'] ?? '';\n    const associateSoftwareToken = createAssociateSoftwareTokenClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { SecretCode } = await associateSoftwareToken({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SetUpTOTP),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n    });\n    if (!SecretCode) {\n        // This should never happen.\n        throw new AuthError({\n            name: SETUP_TOTP_EXCEPTION,\n            message: 'Failed to set up TOTP.',\n        });\n    }\n    return getTOTPSetupDetails(SecretCode, JSON.stringify(username));\n}\n\nexport { setUpTOTP };\n//# sourceMappingURL=setUpTOTP.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createUpdateUserAttributesClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('UpdateUserAttributes'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createUpdateUserAttributesClient };\n//# sourceMappingURL=createUpdateUserAttributesClient.mjs.map\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { toAttributeType } from '../utils/apiHelpers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createUpdateUserAttributesClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createUpdateUserAttributesClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Updates user's attributes while authenticated.\n *\n * @param input - The UpdateUserAttributesInput object\n * @returns UpdateUserAttributesOutput\n * @throws - {@link UpdateUserAttributesException}\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nconst updateUserAttributes = async (input) => {\n    const { userAttributes, options } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const clientMetadata = options?.clientMetadata;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const updateUserAttributesClient = createUpdateUserAttributesClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { CodeDeliveryDetailsList } = await updateUserAttributesClient({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.UpdateUserAttributes),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        ClientMetadata: clientMetadata,\n        UserAttributes: toAttributeType(userAttributes),\n    });\n    return {\n        ...getConfirmedAttributes(userAttributes),\n        ...getUnConfirmedAttributes(CodeDeliveryDetailsList),\n    };\n};\nfunction getConfirmedAttributes(attributes) {\n    const confirmedAttributes = {};\n    Object.keys(attributes)?.forEach(key => {\n        confirmedAttributes[key] = {\n            isUpdated: true,\n            nextStep: {\n                updateAttributeStep: 'DONE',\n            },\n        };\n    });\n    return confirmedAttributes;\n}\nfunction getUnConfirmedAttributes(codeDeliveryDetailsList) {\n    const unConfirmedAttributes = {};\n    codeDeliveryDetailsList?.forEach(codeDeliveryDetails => {\n        const { AttributeName, DeliveryMedium, Destination } = codeDeliveryDetails;\n        if (AttributeName)\n            unConfirmedAttributes[AttributeName] = {\n                isUpdated: false,\n                nextStep: {\n                    updateAttributeStep: 'CONFIRM_ATTRIBUTE_WITH_CODE',\n                    codeDeliveryDetails: {\n                        attributeName: AttributeName,\n                        deliveryMedium: DeliveryMedium,\n                        destination: Destination,\n                    },\n                },\n            };\n    });\n    return unConfirmedAttributes;\n}\n\nexport { updateUserAttributes };\n//# sourceMappingURL=updateUserAttributes.mjs.map\n","import { updateUserAttributes } from './updateUserAttributes.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Updates user's attribute while authenticated.\n *\n * @param input - The UpdateUserAttributeInput object\n * @returns UpdateUserAttributeOutput\n * @throws - {@link UpdateUserAttributesException}\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nconst updateUserAttribute = async (input) => {\n    const { userAttribute: { attributeKey, value }, options, } = input;\n    const output = await updateUserAttributes({\n        userAttributes: { [attributeKey]: value },\n        options,\n    });\n    return Object.values(output)[0];\n};\n\nexport { updateUserAttribute };\n//# sourceMappingURL=updateUserAttribute.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createVerifyUserAttributeClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('VerifyUserAttribute'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createVerifyUserAttributeClient };\n//# sourceMappingURL=createVerifyUserAttributeClient.mjs.map\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../types/errors.mjs';\nimport { createVerifyUserAttributeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createVerifyUserAttributeClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Confirms a user attribute with the confirmation code.\n *\n * @param input -  The ConfirmUserAttributeInput object\n * @throws  -{@link AuthValidationErrorCode } -\n * Thrown when `confirmationCode` is not defined.\n * @throws  -{@link VerifyUserAttributeException } - Thrown due to an invalid confirmation code or attribute.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function confirmUserAttribute(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { confirmationCode, userAttributeKey } = input;\n    assertValidationError(!!confirmationCode, AuthValidationErrorCode.EmptyConfirmUserAttributeCode);\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const verifyUserAttribute = createVerifyUserAttributeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await verifyUserAttribute({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmUserAttribute),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        AttributeName: userAttributeKey,\n        Code: confirmationCode,\n    });\n}\n\nexport { confirmUserAttribute };\n//# sourceMappingURL=confirmUserAttribute.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst ADD_OAUTH_LISTENER = Symbol('oauth-listener');\n\nexport { ADD_OAUTH_LISTENER };\n//# sourceMappingURL=constants.mjs.map\n","import { ConsoleLogger } from '@aws-amplify/core';\nimport { AuthErrorStrings } from './common/AuthErrorStrings.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO: delete this module when the Auth class is removed.\nconst logger = new ConsoleLogger('AuthError');\nclass AuthError extends Error {\n    constructor(type) {\n        const { message, log } = authErrorMessages[type];\n        super(message);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AuthError;\n        Object.setPrototypeOf(this, AuthError.prototype);\n        this.name = 'AuthError';\n        this.log = log || message;\n        logger.error(this.log);\n    }\n}\nclass NoUserPoolError extends AuthError {\n    constructor(type) {\n        super(type);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = NoUserPoolError;\n        Object.setPrototypeOf(this, NoUserPoolError.prototype);\n        this.name = 'NoUserPoolError';\n    }\n}\nconst authErrorMessages = {\n    oauthSignInError: {\n        message: AuthErrorStrings.OAUTH_ERROR,\n        log: 'Make sure Cognito Hosted UI has been configured correctly',\n    },\n    noConfig: {\n        message: AuthErrorStrings.DEFAULT_MSG,\n        log: `\n            Error: Amplify has not been configured correctly.\n            This error is typically caused by one of the following scenarios:\n\n            1. Make sure you're passing the awsconfig object to Amplify.configure() in your app's entry point\n                See https://aws-amplify.github.io/docs/js/authentication#configure-your-app for more information\n            \n            2. There might be multiple conflicting versions of amplify packages in your node_modules.\n\t\t\t\tRefer to our docs site for help upgrading Amplify packages (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js)\n        `,\n    },\n    missingAuthConfig: {\n        message: AuthErrorStrings.DEFAULT_MSG,\n        log: `\n            Error: Amplify has not been configured correctly. \n            The configuration object is missing required auth properties.\n            This error is typically caused by one of the following scenarios:\n\n            1. Did you run \\`amplify push\\` after adding auth via \\`amplify add auth\\`?\n                See https://aws-amplify.github.io/docs/js/authentication#amplify-project-setup for more information\n\n            2. This could also be caused by multiple conflicting versions of amplify packages, see (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js) for help upgrading Amplify packages.\n        `,\n    },\n    emptyUsername: {\n        message: AuthErrorStrings.EMPTY_USERNAME,\n    },\n    // TODO: should include a list of valid sign-in types\n    invalidUsername: {\n        message: AuthErrorStrings.INVALID_USERNAME,\n    },\n    emptyPassword: {\n        message: AuthErrorStrings.EMPTY_PASSWORD,\n    },\n    emptyCode: {\n        message: AuthErrorStrings.EMPTY_CODE,\n    },\n    signUpError: {\n        message: AuthErrorStrings.SIGN_UP_ERROR,\n        log: 'The first parameter should either be non-null string or object',\n    },\n    noMFA: {\n        message: AuthErrorStrings.NO_MFA,\n    },\n    invalidMFA: {\n        message: AuthErrorStrings.INVALID_MFA,\n    },\n    emptyChallengeResponse: {\n        message: AuthErrorStrings.EMPTY_CHALLENGE,\n    },\n    noUserSession: {\n        message: AuthErrorStrings.NO_USER_SESSION,\n    },\n    deviceConfig: {\n        message: AuthErrorStrings.DEVICE_CONFIG,\n    },\n    networkError: {\n        message: AuthErrorStrings.NETWORK_ERROR,\n    },\n    autoSignInError: {\n        message: AuthErrorStrings.AUTOSIGNIN_ERROR,\n    },\n    default: {\n        message: AuthErrorStrings.DEFAULT_MSG,\n    },\n};\n\nexport { AuthError, NoUserPoolError, authErrorMessages };\n//# sourceMappingURL=Errors.mjs.map\n","import { authErrorMessages } from '../../../../Errors.mjs';\nimport { AuthErrorCodes } from '../../../../common/AuthErrorStrings.mjs';\nimport { AuthError } from '../../../../errors/AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createOAuthError = (message, recoverySuggestion) => new AuthError({\n    message: message ?? 'An error has occurred during the oauth process.',\n    name: AuthErrorCodes.OAuthSignInError,\n    recoverySuggestion: recoverySuggestion ?? authErrorMessages.oauthSignInError.log,\n});\n\nexport { createOAuthError };\n//# sourceMappingURL=createOAuthError.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar AuthErrorTypes;\n(function (AuthErrorTypes) {\n    AuthErrorTypes[\"NoConfig\"] = \"noConfig\";\n    AuthErrorTypes[\"MissingAuthConfig\"] = \"missingAuthConfig\";\n    AuthErrorTypes[\"EmptyUsername\"] = \"emptyUsername\";\n    AuthErrorTypes[\"InvalidUsername\"] = \"invalidUsername\";\n    AuthErrorTypes[\"EmptyPassword\"] = \"emptyPassword\";\n    AuthErrorTypes[\"EmptyCode\"] = \"emptyCode\";\n    AuthErrorTypes[\"SignUpError\"] = \"signUpError\";\n    AuthErrorTypes[\"NoMFA\"] = \"noMFA\";\n    AuthErrorTypes[\"InvalidMFA\"] = \"invalidMFA\";\n    AuthErrorTypes[\"EmptyChallengeResponse\"] = \"emptyChallengeResponse\";\n    AuthErrorTypes[\"NoUserSession\"] = \"noUserSession\";\n    AuthErrorTypes[\"Default\"] = \"default\";\n    AuthErrorTypes[\"DeviceConfig\"] = \"deviceConfig\";\n    AuthErrorTypes[\"NetworkError\"] = \"networkError\";\n    AuthErrorTypes[\"AutoSignInError\"] = \"autoSignInError\";\n    AuthErrorTypes[\"OAuthSignInError\"] = \"oauthSignInError\";\n})(AuthErrorTypes || (AuthErrorTypes = {}));\n\nexport { AuthErrorTypes };\n//# sourceMappingURL=Auth.mjs.map\n","import { AuthError } from '../../../../errors/AuthError.mjs';\nimport { AuthErrorTypes } from '../../../../types/Auth.mjs';\nimport { oAuthStore } from './oAuthStore.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst flowCancelledMessage = '`signInWithRedirect` has been canceled.';\nconst validationFailedMessage = 'An error occurred while validating the state.';\nconst validationRecoverySuggestion = 'Try to initiate an OAuth flow from Amplify';\nconst validateState = async (state) => {\n    const savedState = await oAuthStore.loadOAuthState();\n    // This is because savedState only exists if the flow was initiated by Amplify\n    const validatedState = state === savedState ? savedState : undefined;\n    if (!validatedState) {\n        throw new AuthError({\n            name: AuthErrorTypes.OAuthSignInError,\n            message: state === null ? flowCancelledMessage : validationFailedMessage,\n            recoverySuggestion: state === null ? undefined : validationRecoverySuggestion,\n        });\n    }\n    return validatedState;\n};\n\nexport { flowCancelledMessage, validateState, validationFailedMessage, validationRecoverySuggestion };\n//# sourceMappingURL=validateState.mjs.map\n","import { AmplifyUrl, USER_AGENT_HEADER, urlSafeDecode, AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport { decodeJWT, Hub } from '@aws-amplify/core';\nimport { cacheCognitoTokens } from '../../tokenProvider/cacheTokens.mjs';\nimport { dispatchSignedInHubEvent } from '../dispatchSignedInHubEvent.mjs';\nimport '../refreshAuthTokens.mjs';\nimport '../../tokenProvider/errorHelpers.mjs';\nimport { oAuthStore } from './oAuthStore.mjs';\nimport { resolveAndClearInflightPromises } from './inflightPromise.mjs';\nimport { tokenOrchestrator } from '../../tokenProvider/tokenProvider.mjs';\nimport { createOAuthError } from './createOAuthError.mjs';\nimport { validateState } from './validateState.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst completeOAuthFlow = async ({ currentUrl, userAgentValue, clientId, redirectUri, responseType, domain, preferPrivateSession, }) => {\n    const urlParams = new AmplifyUrl(currentUrl);\n    const error = urlParams.searchParams.get('error');\n    const errorMessage = urlParams.searchParams.get('error_description');\n    if (error) {\n        throw createOAuthError(errorMessage ?? error);\n    }\n    if (responseType === 'code') {\n        return handleCodeFlow({\n            currentUrl,\n            userAgentValue,\n            clientId,\n            redirectUri,\n            domain,\n            preferPrivateSession,\n        });\n    }\n    return handleImplicitFlow({\n        currentUrl,\n        redirectUri,\n        preferPrivateSession,\n    });\n};\nconst handleCodeFlow = async ({ currentUrl, userAgentValue, clientId, redirectUri, domain, preferPrivateSession, }) => {\n    /* Convert URL into an object with parameters as keys\n{ redirect_uri: 'http://localhost:3000/', response_type: 'code', ...} */\n    const url = new AmplifyUrl(currentUrl);\n    const code = url.searchParams.get('code');\n    const state = url.searchParams.get('state');\n    // if `code` or `state` is not presented in the redirect url, most likely\n    // that the end user cancelled the inflight oauth flow by:\n    // 1. clicking the back button of browser\n    // 2. closing the provider hosted UI page and coming back to the app\n    if (!code || !state) {\n        throw createOAuthError('User cancelled OAuth flow.');\n    }\n    // may throw error is being caught in attemptCompleteOAuthFlow.ts\n    const validatedState = await validateState(state);\n    const oAuthTokenEndpoint = 'https://' + domain + '/oauth2/token';\n    // TODO(v6): check hub events\n    // dispatchAuthEvent(\n    // \t'codeFlow',\n    // \t{},\n    // \t`Retrieving tokens from ${oAuthTokenEndpoint}`\n    // );\n    const codeVerifier = await oAuthStore.loadPKCE();\n    const oAuthTokenBody = {\n        grant_type: 'authorization_code',\n        code,\n        client_id: clientId,\n        redirect_uri: redirectUri,\n        ...(codeVerifier ? { code_verifier: codeVerifier } : {}),\n    };\n    const body = Object.entries(oAuthTokenBody)\n        .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\n        .join('&');\n    const { access_token, refresh_token: refreshToken, id_token, error, error_message: errorMessage, token_type, expires_in, } = await (await fetch(oAuthTokenEndpoint, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            [USER_AGENT_HEADER]: userAgentValue,\n        },\n        body,\n    })).json();\n    if (error) {\n        // error is being caught in attemptCompleteOAuthFlow.ts\n        throw createOAuthError(errorMessage ?? error);\n    }\n    const username = (access_token && decodeJWT(access_token).payload.username) ?? 'username';\n    await cacheCognitoTokens({\n        username,\n        AccessToken: access_token,\n        IdToken: id_token,\n        RefreshToken: refreshToken,\n        TokenType: token_type,\n        ExpiresIn: expires_in,\n    });\n    return completeFlow({\n        redirectUri,\n        state: validatedState,\n        preferPrivateSession,\n    });\n};\nconst handleImplicitFlow = async ({ currentUrl, redirectUri, preferPrivateSession, }) => {\n    // hash is `null` if `#` doesn't exist on URL\n    const url = new AmplifyUrl(currentUrl);\n    const { id_token, access_token, state, token_type, expires_in, error_description, error, } = (url.hash ?? '#')\n        .substring(1) // Remove # from returned code\n        .split('&')\n        .map(pairings => pairings.split('='))\n        .reduce((accum, [k, v]) => ({ ...accum, [k]: v }), {\n        id_token: undefined,\n        access_token: undefined,\n        state: undefined,\n        token_type: undefined,\n        expires_in: undefined,\n        error_description: undefined,\n        error: undefined,\n    });\n    if (error) {\n        throw createOAuthError(error_description ?? error);\n    }\n    if (!access_token) {\n        // error is being caught in attemptCompleteOAuthFlow.ts\n        throw createOAuthError('No access token returned from OAuth flow.');\n    }\n    const validatedState = await validateState(state);\n    const username = (access_token && decodeJWT(access_token).payload.username) ?? 'username';\n    await cacheCognitoTokens({\n        username,\n        AccessToken: access_token,\n        IdToken: id_token,\n        TokenType: token_type,\n        ExpiresIn: expires_in,\n    });\n    return completeFlow({\n        redirectUri,\n        state: validatedState,\n        preferPrivateSession,\n    });\n};\nconst completeFlow = async ({ redirectUri, state, preferPrivateSession, }) => {\n    await tokenOrchestrator.setOAuthMetadata({\n        oauthSignIn: true,\n    });\n    await oAuthStore.clearOAuthData();\n    await oAuthStore.storeOAuthSignIn(true, preferPrivateSession);\n    // this should be called before any call that involves `fetchAuthSession`\n    // e.g. `getCurrentUser()` below, so it allows every inflight async calls to\n    //  `fetchAuthSession` can be resolved\n    resolveAndClearInflightPromises();\n    if (isCustomState(state)) {\n        Hub.dispatch('auth', {\n            event: 'customOAuthState',\n            data: urlSafeDecode(getCustomState(state)),\n        }, 'Auth', AMPLIFY_SYMBOL);\n    }\n    Hub.dispatch('auth', { event: 'signInWithRedirect' }, 'Auth', AMPLIFY_SYMBOL);\n    await dispatchSignedInHubEvent();\n    clearHistory(redirectUri);\n};\nconst isCustomState = (state) => {\n    return /-/.test(state);\n};\nconst getCustomState = (state) => {\n    return state.split('-').splice(1).join('-');\n};\nconst clearHistory = (redirectUri) => {\n    if (typeof window !== 'undefined' && typeof window.history !== 'undefined') {\n        window.history.replaceState(window.history.state, '', redirectUri);\n    }\n};\n\nexport { completeOAuthFlow };\n//# sourceMappingURL=completeOAuthFlow.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction urlSafeDecode(hex) {\n    const matchArr = hex.match(/.{2}/g) || [];\n    return matchArr.map(char => String.fromCharCode(parseInt(char, 16))).join('');\n}\n\nexport { urlSafeDecode };\n//# sourceMappingURL=urlSafeDecode.mjs.map\n","import { invalidPreferredRedirectUrlException, invalidOriginException, invalidRedirectException } from '../../../../errors/constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/** @internal */\nfunction getRedirectUrl(redirects, preferredRedirectUrl) {\n    if (preferredRedirectUrl) {\n        const redirectUrl = redirects?.find(redirect => redirect === preferredRedirectUrl);\n        if (!redirectUrl) {\n            throw invalidPreferredRedirectUrlException;\n        }\n        return redirectUrl;\n    }\n    else {\n        const redirectUrlFromTheSameOrigin = redirects?.find(isSameOriginAndPathName) ??\n            redirects?.find(isTheSameDomain);\n        const redirectUrlFromDifferentOrigin = redirects?.find(isHttps) ?? redirects?.find(isHttp);\n        if (redirectUrlFromTheSameOrigin) {\n            return redirectUrlFromTheSameOrigin;\n        }\n        else if (redirectUrlFromDifferentOrigin) {\n            throw invalidOriginException;\n        }\n        throw invalidRedirectException;\n    }\n}\n// origin + pathname => https://example.com/app\nconst isSameOriginAndPathName = (redirect) => redirect.startsWith(\n// eslint-disable-next-line no-constant-binary-expression\nString(window.location.origin + window.location.pathname ?? '/'));\n// domain => outlook.live.com, github.com\nconst isTheSameDomain = (redirect) => redirect.includes(String(window.location.hostname));\nconst isHttp = (redirect) => redirect.startsWith('http://');\nconst isHttps = (redirect) => redirect.startsWith('https://');\n\nexport { getRedirectUrl };\n//# sourceMappingURL=getRedirectUrl.mjs.map\n","import { Hub } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport { oAuthStore } from './oAuthStore.mjs';\nimport { resolveAndClearInflightPromises } from './inflightPromise.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst handleFailure = async (error) => {\n    resolveAndClearInflightPromises();\n    await oAuthStore.clearOAuthInflightData();\n    Hub.dispatch('auth', { event: 'signInWithRedirect_failure', data: { error } }, 'Auth', AMPLIFY_SYMBOL);\n};\n\nexport { handleFailure };\n//# sourceMappingURL=handleFailure.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { isBrowser, ADD_OAUTH_LISTENER } from '@aws-amplify/core/internals/utils';\nimport { attemptCompleteOAuthFlow } from './attemptCompleteOAuthFlow.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// attach the side effect for handling the completion of an inflight oauth flow\n// this side effect works only on Web\nisBrowser() &&\n    (() => {\n        // add the listener to the singleton for triggering\n        Amplify[ADD_OAUTH_LISTENER](attemptCompleteOAuthFlow);\n    })();\n//# sourceMappingURL=enableOAuthListener.mjs.map\n","import { assertTokenProviderConfig, assertOAuthConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getAuthUserAgentValue } from '../../../../utils/getAuthUserAgentValue.mjs';\nimport { oAuthStore } from './oAuthStore.mjs';\nimport { completeOAuthFlow } from './completeOAuthFlow.mjs';\nimport { getRedirectUrl } from './getRedirectUrl.mjs';\nimport { handleFailure } from './handleFailure.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst attemptCompleteOAuthFlow = async (authConfig) => {\n    try {\n        assertTokenProviderConfig(authConfig);\n        assertOAuthConfig(authConfig);\n        oAuthStore.setAuthConfig(authConfig);\n    }\n    catch (_) {\n        // no-op\n        // This should not happen as Amplify singleton checks the oauth config key\n        // unless the oauth config object doesn't contain required properties\n        return;\n    }\n    // No inflight OAuth\n    if (!(await oAuthStore.loadOAuthInFlight())) {\n        return;\n    }\n    try {\n        const currentUrl = window.location.href;\n        const { loginWith, userPoolClientId } = authConfig;\n        const { domain, redirectSignIn, responseType } = loginWith.oauth;\n        const redirectUri = getRedirectUrl(redirectSignIn);\n        await completeOAuthFlow({\n            currentUrl,\n            clientId: userPoolClientId,\n            domain,\n            redirectUri,\n            responseType,\n            userAgentValue: getAuthUserAgentValue(AuthAction.SignInWithRedirect),\n        });\n    }\n    catch (err) {\n        await handleFailure(err);\n    }\n};\n\nexport { attemptCompleteOAuthFlow };\n//# sourceMappingURL=attemptCompleteOAuthFlow.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst cognitoHostedUIIdentityProviderMap = {\n    Google: 'Google',\n    Facebook: 'Facebook',\n    Amazon: 'LoginWithAmazon',\n    Apple: 'SignInWithApple',\n};\n\nexport { cognitoHostedUIIdentityProviderMap };\n//# sourceMappingURL=models.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst openAuthSession = async (url) => {\n    if (!window?.location) {\n        return;\n    }\n    // enforce HTTPS\n    window.location.href = url.replace('http://', 'https://');\n};\n\nexport { openAuthSession };\n//# sourceMappingURL=openAuthSession.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, assertOAuthConfig, urlSafeEncode, isBrowser, AuthAction } from '@aws-amplify/core/internals/utils';\nimport '../utils/oauth/enableOAuthListener.mjs';\nimport { cognitoHostedUIIdentityProviderMap } from '../types/models.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { openAuthSession } from '../../../utils/openAuthSession.mjs';\nimport { assertUserNotAuthenticated } from '../utils/signInHelpers.mjs';\nimport { generateCodeVerifier } from '../utils/oauth/generateCodeVerifier.mjs';\nimport { generateState } from '../utils/oauth/generateState.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport { oAuthStore } from '../utils/oauth/oAuthStore.mjs';\nimport '../tokenProvider/tokenProvider.mjs';\nimport { getRedirectUrl } from '../utils/oauth/getRedirectUrl.mjs';\nimport { handleFailure } from '../utils/oauth/handleFailure.mjs';\nimport { completeOAuthFlow } from '../utils/oauth/completeOAuthFlow.mjs';\nimport { createOAuthError } from '../utils/oauth/createOAuthError.mjs';\nimport { listenForOAuthFlowCancellation } from '../utils/oauth/cancelOAuthFlow.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Signs in a user with OAuth. Redirects the application to an Identity Provider.\n *\n * @param input - The SignInWithRedirectInput object, if empty it will redirect to Cognito HostedUI\n *\n * @throws AuthTokenConfigException - Thrown when the user pool config is invalid.\n * @throws OAuthNotConfigureException - Thrown when the oauth config is invalid.\n */\nasync function signInWithRedirect(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    assertOAuthConfig(authConfig);\n    oAuthStore.setAuthConfig(authConfig);\n    await assertUserNotAuthenticated();\n    let provider = 'COGNITO'; // Default\n    if (typeof input?.provider === 'string') {\n        provider = cognitoHostedUIIdentityProviderMap[input.provider];\n    }\n    else if (input?.provider?.custom) {\n        provider = input.provider.custom;\n    }\n    return oauthSignIn({\n        oauthConfig: authConfig.loginWith.oauth,\n        clientId: authConfig.userPoolClientId,\n        provider,\n        customState: input?.customState,\n        preferPrivateSession: input?.options?.preferPrivateSession,\n    });\n}\nconst oauthSignIn = async ({ oauthConfig, provider, clientId, customState, preferPrivateSession, }) => {\n    const { domain, redirectSignIn, responseType, scopes } = oauthConfig;\n    const randomState = generateState();\n    /* encodeURIComponent is not URL safe, use urlSafeEncode instead. Cognito\n    single-encodes/decodes url on first sign in and double-encodes/decodes url\n    when user already signed in. Using encodeURIComponent, Base32, Base64 add\n    characters % or = which on further encoding becomes unsafe. '=' create issue\n    for parsing query params.\n    Refer: https://github.com/aws-amplify/amplify-js/issues/5218 */\n    const state = customState\n        ? `${randomState}-${urlSafeEncode(customState)}`\n        : randomState;\n    const { value, method, toCodeChallenge } = generateCodeVerifier(128);\n    const redirectUri = getRedirectUrl(oauthConfig.redirectSignIn);\n    if (isBrowser())\n        oAuthStore.storeOAuthInFlight(true);\n    oAuthStore.storeOAuthState(state);\n    oAuthStore.storePKCE(value);\n    const queryString = Object.entries({\n        redirect_uri: redirectUri,\n        response_type: responseType,\n        client_id: clientId,\n        identity_provider: provider,\n        scope: scopes.join(' '),\n        state,\n        ...(responseType === 'code' && {\n            code_challenge: toCodeChallenge(),\n            code_challenge_method: method,\n        }),\n    })\n        .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\n        .join('&');\n    // TODO(v6): use URL object instead\n    const oAuthUrl = `https://${domain}/oauth2/authorize?${queryString}`;\n    // this will only take effect in the following scenarios:\n    // 1. the user cancels the OAuth flow on web via back button, and\n    // 2. when bfcache is enabled\n    listenForOAuthFlowCancellation(oAuthStore);\n    // the following is effective only in react-native as openAuthSession resolves only in react-native\n    const { type, error, url } = (await openAuthSession(oAuthUrl)) ??\n        {};\n    try {\n        if (type === 'error') {\n            throw createOAuthError(String(error));\n        }\n        if (type === 'success' && url) {\n            await completeOAuthFlow({\n                currentUrl: url,\n                clientId,\n                domain,\n                redirectUri,\n                responseType,\n                userAgentValue: getAuthUserAgentValue(AuthAction.SignInWithRedirect),\n                preferPrivateSession,\n            });\n        }\n    }\n    catch (err) {\n        await handleFailure(err);\n        // rethrow the error so it can be caught by `await signInWithRedirect()` in react-native\n        throw err;\n    }\n};\n\nexport { signInWithRedirect };\n//# sourceMappingURL=signInWithRedirect.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst generateRandomString = (length) => {\n    const STATE_CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let result = '';\n    for (let i = 0; i < length; i++) {\n        result += STATE_CHARSET.charAt(Math.floor(Math.random() * STATE_CHARSET.length));\n    }\n    return result;\n};\n\nexport { generateRandomString };\n//# sourceMappingURL=generateRandomString.mjs.map\n","import { generateRandomString } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst generateState = () => {\n    return generateRandomString(32);\n};\n\nexport { generateState };\n//# sourceMappingURL=generateState.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction urlSafeEncode(str) {\n    return str\n        .split('')\n        .map(char => char.charCodeAt(0).toString(16).padStart(2, '0'))\n        .join('');\n}\n\nexport { urlSafeEncode };\n//# sourceMappingURL=urlSafeEncode.mjs.map\n","import { Sha256 } from '@aws-crypto/sha256-js';\nimport { getCrypto, base64Encoder } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst CODE_VERIFIER_CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n/**\n *\n * @param length Desired length of the code verifier.\n *\n * **NOTE:** According to the [RFC 7636](https://datatracker.ietf.org/doc/html/rfc7636#section-4.1)\n * A code verifier must be with a length >= 43 and <= 128.\n *\n * @returns An object that contains the generated `codeVerifier` and a method\n * `toCodeChallenge` to generate the code challenge from the `codeVerifier`\n * following the spec of [RFC 7636](https://datatracker.ietf.org/doc/html/rfc7636#section-4.2).\n */\nconst generateCodeVerifier = (length) => {\n    const randomBytes = new Uint8Array(length);\n    getCrypto().getRandomValues(randomBytes);\n    let value = '';\n    let codeChallenge;\n    for (const byte of randomBytes) {\n        value += CODE_VERIFIER_CHARSET.charAt(byte % CODE_VERIFIER_CHARSET.length);\n    }\n    return {\n        value,\n        method: 'S256',\n        toCodeChallenge() {\n            if (codeChallenge) {\n                return codeChallenge;\n            }\n            codeChallenge = generateCodeChallenge(value);\n            return codeChallenge;\n        },\n    };\n};\nfunction generateCodeChallenge(codeVerifier) {\n    const awsCryptoHash = new Sha256();\n    awsCryptoHash.update(codeVerifier);\n    const codeChallenge = removePaddingChar(base64Encoder.convert(awsCryptoHash.digestSync(), { urlSafe: true }));\n    return codeChallenge;\n}\nfunction removePaddingChar(base64Encoded) {\n    return base64Encoded.replace(/=/g, '');\n}\n\nexport { generateCodeVerifier };\n//# sourceMappingURL=generateCodeVerifier.mjs.map\n","import { createOAuthError } from './createOAuthError.mjs';\nimport { handleFailure } from './handleFailure.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst listenForOAuthFlowCancellation = (store) => {\n    async function handleCancelOAuthFlow(event) {\n        const isBfcache = event.persisted;\n        if (isBfcache && (await store.loadOAuthInFlight())) {\n            const error = createOAuthError('User cancelled OAuth flow.');\n            await handleFailure(error);\n        }\n        window.removeEventListener('pageshow', handleCancelOAuthFlow);\n    }\n    window.addEventListener('pageshow', handleCancelOAuthFlow);\n};\n\nexport { listenForOAuthFlowCancellation };\n//# sourceMappingURL=cancelOAuthFlow.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { fetchUserAttributes as fetchUserAttributes$1 } from './internal/fetchUserAttributes.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Fetches the current user attributes while authenticated.\n *\n * @throws - {@link GetUserException} - Cognito service errors thrown when the service is not able to get the user.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nconst fetchUserAttributes = () => {\n    return fetchUserAttributes$1(Amplify);\n};\n\nexport { fetchUserAttributes };\n//# sourceMappingURL=fetchUserAttributes.mjs.map\n","import { assertTokenProviderConfig, fetchAuthSession, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getRegionFromUserPoolId } from '../../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../../utils/types.mjs';\nimport { toAuthUserAttribute } from '../../utils/apiHelpers.mjs';\nimport { getAuthUserAgentValue } from '../../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../../common/AuthErrorStrings.mjs';\nimport '../../../../errors/types/validation.mjs';\nimport '../../types/errors.mjs';\nimport { createGetUserClient } from '../../../../foundation/factories/serviceClients/cognitoIdentityProvider/createGetUserClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../../factories/createCognitoUserPoolEndpointResolver.mjs';\nimport '@aws-amplify/core';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst fetchUserAttributes = async (amplify) => {\n    const authConfig = amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession(amplify, {\n        forceRefresh: false,\n    });\n    assertAuthTokens(tokens);\n    const getUser = createGetUserClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { UserAttributes } = await getUser({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.FetchUserAttributes),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n    });\n    return toAuthUserAttribute(UserAttributes);\n};\n\nexport { fetchUserAttributes };\n//# sourceMappingURL=fetchUserAttributes.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst fetchAuthSession = (amplify, options) => {\n    return amplify.Auth.fetchAuthSession(options);\n};\n\nexport { fetchAuthSession };\n//# sourceMappingURL=fetchAuthSession.mjs.map\n","import { clearCredentials, Hub } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport '../refreshAuthTokens.mjs';\nimport '../../tokenProvider/errorHelpers.mjs';\nimport '../types.mjs';\nimport { tokenOrchestrator } from '../../tokenProvider/tokenProvider.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst completeOAuthSignOut = async (store) => {\n    await store.clearOAuthData();\n    tokenOrchestrator.clearTokens();\n    await clearCredentials();\n    Hub.dispatch('auth', { event: 'signedOut' }, 'Auth', AMPLIFY_SYMBOL);\n};\n\nexport { completeOAuthSignOut };\n//# sourceMappingURL=completeOAuthSignOut.mjs.map\n","import { completeOAuthSignOut } from './completeOAuthSignOut.mjs';\nimport { oAuthSignOutRedirect } from './oAuthSignOutRedirect.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst handleOAuthSignOut = async (cognitoConfig, store, tokenOrchestrator, redirectUrl) => {\n    const { isOAuthSignIn } = await store.loadOAuthSignIn();\n    const oauthMetadata = await tokenOrchestrator.getOAuthMetadata();\n    // Clear everything before attempting to visted logout endpoint since the current application\n    // state could be wiped away on redirect\n    await completeOAuthSignOut(store);\n    // The isOAuthSignIn flag is propagated by the oAuthToken store which manages oauth keys in local storage only.\n    // These keys are used to determine if a user is in an inflight or signedIn oauth states.\n    // However, this behavior represents an issue when 2 apps share the same set of tokens in Cookie storage because the app that didn't\n    // start the OAuth will not have access to the oauth keys.\n    // A heuristic solution is to add oauth metadata to the tokenOrchestrator which will have access to the underlying\n    // storage mechanism that is used by Amplify.\n    if (isOAuthSignIn || oauthMetadata?.oauthSignIn) {\n        // On web, this will always end up being a void action\n        return oAuthSignOutRedirect(cognitoConfig, false, redirectUrl);\n    }\n};\n\nexport { handleOAuthSignOut };\n//# sourceMappingURL=handleOAuthSignOut.mjs.map\n","import { assertOAuthConfig } from '@aws-amplify/core/internals/utils';\nimport { openAuthSession } from '../../../../utils/openAuthSession.mjs';\nimport { getRedirectUrl } from './getRedirectUrl.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst oAuthSignOutRedirect = async (authConfig, preferPrivateSession = false, redirectUrl) => {\n    assertOAuthConfig(authConfig);\n    const { loginWith, userPoolClientId } = authConfig;\n    const { domain, redirectSignOut } = loginWith.oauth;\n    const signoutUri = getRedirectUrl(redirectSignOut, redirectUrl);\n    const oAuthLogoutEndpoint = `https://${domain}/logout?${Object.entries({\n        client_id: userPoolClientId,\n        logout_uri: encodeURIComponent(signoutUri),\n    })\n        .map(([k, v]) => `${k}=${v}`)\n        .join('&')}`;\n    return openAuthSession(oAuthLogoutEndpoint);\n};\n\nexport { oAuthSignOutRedirect };\n//# sourceMappingURL=oAuthSignOutRedirect.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createRevokeTokenClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('RevokeToken'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createRevokeTokenClient };\n//# sourceMappingURL=createRevokeTokenClient.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createGlobalSignOutClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('GlobalSignOut'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createGlobalSignOutClient };\n//# sourceMappingURL=createGlobalSignOutClient.mjs.map\n","import { ConsoleLogger, Amplify, clearCredentials, Hub, defaultStorage } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, assertOAuthConfig, AMPLIFY_SYMBOL, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport { DefaultOAuthStore } from '../utils/signInWithRedirectStore.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokensWithRefreshToken, assertAuthTokens } from '../utils/types.mjs';\nimport '@aws-crypto/sha256-js';\nimport { handleOAuthSignOut } from '../utils/oauth/handleOAuthSignOut.mjs';\nimport { OAUTH_SIGNOUT_EXCEPTION } from '../../../errors/constants.mjs';\nimport '../../../Errors.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../types/Auth.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport { createRevokeTokenClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createRevokeTokenClient.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createGlobalSignOutClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createGlobalSignOutClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('Auth');\n/**\n * Signs a user out\n *\n * @param input - The SignOutInput object\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function signOut(input) {\n    const cognitoConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(cognitoConfig);\n    if (input?.global) {\n        await globalSignOut(cognitoConfig);\n    }\n    else {\n        await clientSignOut(cognitoConfig);\n    }\n    let hasOAuthConfig;\n    try {\n        assertOAuthConfig(cognitoConfig);\n        hasOAuthConfig = true;\n    }\n    catch (err) {\n        hasOAuthConfig = false;\n    }\n    if (hasOAuthConfig) {\n        const oAuthStore = new DefaultOAuthStore(defaultStorage);\n        oAuthStore.setAuthConfig(cognitoConfig);\n        const { type } = (await handleOAuthSignOut(cognitoConfig, oAuthStore, tokenOrchestrator, input?.oauth?.redirectUrl)) ?? {};\n        if (type === 'error') {\n            throw new AuthError({\n                name: OAUTH_SIGNOUT_EXCEPTION,\n                message: `An error occurred when attempting to log out from OAuth provider.`,\n            });\n        }\n    }\n    else {\n        // complete sign out\n        tokenOrchestrator.clearTokens();\n        await clearCredentials();\n        Hub.dispatch('auth', { event: 'signedOut' }, 'Auth', AMPLIFY_SYMBOL);\n    }\n}\nasync function clientSignOut(cognitoConfig) {\n    try {\n        const { userPoolEndpoint, userPoolId, userPoolClientId } = cognitoConfig;\n        const authTokens = await tokenOrchestrator.getTokenStore().loadTokens();\n        assertAuthTokensWithRefreshToken(authTokens);\n        if (isSessionRevocable(authTokens.accessToken)) {\n            const revokeToken = createRevokeTokenClient({\n                endpointResolver: createCognitoUserPoolEndpointResolver({\n                    endpointOverride: userPoolEndpoint,\n                }),\n            });\n            await revokeToken({\n                region: getRegionFromUserPoolId(userPoolId),\n                userAgentValue: getAuthUserAgentValue(AuthAction.SignOut),\n            }, {\n                ClientId: userPoolClientId,\n                Token: authTokens.refreshToken,\n            });\n        }\n    }\n    catch (err) {\n        // this shouldn't throw\n        logger.debug('Client signOut error caught but will proceed with token removal');\n    }\n}\nasync function globalSignOut(cognitoConfig) {\n    try {\n        const { userPoolEndpoint, userPoolId } = cognitoConfig;\n        const authTokens = await tokenOrchestrator.getTokenStore().loadTokens();\n        assertAuthTokens(authTokens);\n        const globalSignOutClient = createGlobalSignOutClient({\n            endpointResolver: createCognitoUserPoolEndpointResolver({\n                endpointOverride: userPoolEndpoint,\n            }),\n        });\n        await globalSignOutClient({\n            region: getRegionFromUserPoolId(userPoolId),\n            userAgentValue: getAuthUserAgentValue(AuthAction.SignOut),\n        }, {\n            AccessToken: authTokens.accessToken.toString(),\n        });\n    }\n    catch (err) {\n        // it should not throw\n        logger.debug('Global signOut error caught but will proceed with token removal');\n    }\n}\nconst isSessionRevocable = (token) => !!token?.payload?.origin_jti;\n\nexport { signOut };\n//# sourceMappingURL=signOut.mjs.map\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createGetUserAttributeVerificationCodeClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createGetUserAttributeVerificationCodeClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Resends user's confirmation code when updating attributes while authenticated.\n *\n * @param input - The SendUserAttributeVerificationCodeInput object\n * @returns SendUserAttributeVerificationCodeOutput\n * @throws - {@link GetUserAttributeVerificationException}\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nconst sendUserAttributeVerificationCode = async (input) => {\n    const { userAttributeKey, options } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const clientMetadata = options?.clientMetadata;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const getUserAttributeVerificationCode = createGetUserAttributeVerificationCodeClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { CodeDeliveryDetails } = await getUserAttributeVerificationCode({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SendUserAttributeVerificationCode),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        ClientMetadata: clientMetadata,\n        AttributeName: userAttributeKey,\n    });\n    const { DeliveryMedium, AttributeName, Destination } = {\n        ...CodeDeliveryDetails,\n    };\n    return {\n        destination: Destination,\n        deliveryMedium: DeliveryMedium,\n        attributeName: AttributeName,\n    };\n};\n\nexport { sendUserAttributeVerificationCode };\n//# sourceMappingURL=sendUserAttributeVerificationCode.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createGetUserAttributeVerificationCodeClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('GetUserAttributeVerificationCode'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createGetUserAttributeVerificationCodeClient };\n//# sourceMappingURL=createGetUserAttributeVerificationCodeClient.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createDeleteUserAttributesClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('DeleteUserAttributes'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createDeleteUserAttributesClient };\n//# sourceMappingURL=createDeleteUserAttributesClient.mjs.map\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createDeleteUserAttributesClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createDeleteUserAttributesClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Deletes user attributes.\n *\n * @param input -  The DeleteUserAttributesInput object\n * @throws  -{@link DeleteUserAttributesException } - Thrown due to invalid attribute.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function deleteUserAttributes(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userAttributeKeys } = input;\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const deleteUserAttributesClient = createDeleteUserAttributesClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await deleteUserAttributesClient({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.DeleteUserAttributes),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        UserAttributeNames: userAttributeKeys,\n    });\n}\n\nexport { deleteUserAttributes };\n//# sourceMappingURL=deleteUserAttributes.mjs.map\n","import { parseJsonError } from '@aws-amplify/core/internals/aws-client-utils';\nimport { assertServiceError } from '../../../../../../errors/utils/assertServiceError.mjs';\nimport { AuthError } from '../../../../../../errors/AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createEmptyResponseDeserializer = () => async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        assertServiceError(error);\n        throw new AuthError({ name: error.name, message: error.message });\n    }\n    else {\n        return undefined;\n    }\n};\n\nexport { createEmptyResponseDeserializer };\n//# sourceMappingURL=createEmptyResponseDeserializer.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { createEmptyResponseDeserializer } from './shared/serde/createEmptyResponseDeserializer.mjs';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createDeleteUserClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('DeleteUser'), createEmptyResponseDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createDeleteUserClient };\n//# sourceMappingURL=createDeleteUserClient.mjs.map\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createDeleteUserClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createDeleteUserClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { signOut } from './signOut.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Deletes a user from the user pool while authenticated.\n *\n * @throws - {@link DeleteUserException}\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function deleteUser() {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession();\n    assertAuthTokens(tokens);\n    const serviceDeleteUser = createDeleteUserClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await serviceDeleteUser({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.DeleteUser),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n    });\n    await tokenOrchestrator.clearDeviceMetadata();\n    await signOut();\n}\n\nexport { deleteUser };\n//# sourceMappingURL=deleteUser.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createUpdateDeviceStatusClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('UpdateDeviceStatus'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createUpdateDeviceStatusClient };\n//# sourceMappingURL=createUpdateDeviceStatusClient.mjs.map\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens, assertDeviceMetadata } from '../utils/types.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createUpdateDeviceStatusClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createUpdateDeviceStatusClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Marks device as remembered while authenticated.\n *\n * @throws - {@link UpdateDeviceStatusException} - Cognito service errors thrown when\n * setting device status to remembered using an invalid device key.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function rememberDevice() {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession();\n    assertAuthTokens(tokens);\n    const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata();\n    assertDeviceMetadata(deviceMetadata);\n    const updateDeviceStatus = createUpdateDeviceStatusClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await updateDeviceStatus({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.RememberDevice),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        DeviceKey: deviceMetadata.deviceKey,\n        DeviceRememberedStatus: 'remembered',\n    });\n}\n\nexport { rememberDevice };\n//# sourceMappingURL=rememberDevice.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { createEmptyResponseDeserializer } from './shared/serde/createEmptyResponseDeserializer.mjs';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createForgetDeviceClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ForgetDevice'), createEmptyResponseDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createForgetDeviceClient };\n//# sourceMappingURL=createForgetDeviceClient.mjs.map\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens, assertDeviceMetadata } from '../utils/types.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createForgetDeviceClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createForgetDeviceClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Forget a remembered device while authenticated.\n *\n * @param input - The ForgetDeviceInput object.\n * @throws - {@link ForgetDeviceException} - Cognito service errors thrown when\n * forgetting device with invalid device key\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function forgetDevice(input) {\n    const { device: { id: externalDeviceKey } = { id: undefined } } = input ?? {};\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession();\n    assertAuthTokens(tokens);\n    const deviceMetadata = await tokenOrchestrator.getDeviceMetadata();\n    const currentDeviceKey = deviceMetadata?.deviceKey;\n    if (!externalDeviceKey)\n        assertDeviceMetadata(deviceMetadata);\n    const serviceForgetDevice = createForgetDeviceClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await serviceForgetDevice({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ForgetDevice),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        DeviceKey: externalDeviceKey ?? currentDeviceKey,\n    });\n    if (!externalDeviceKey || externalDeviceKey === currentDeviceKey)\n        await tokenOrchestrator.clearDeviceMetadata();\n}\n\nexport { forgetDevice };\n//# sourceMappingURL=forgetDevice.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createListDevicesClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ListDevices'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createListDevicesClient };\n//# sourceMappingURL=createListDevicesClient.mjs.map\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createListDevicesClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createListDevicesClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Cognito Documentation for max device\n// https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ListDevices.html#API_ListDevices_RequestSyntax\nconst MAX_DEVICES = 60;\n/**\n * Fetches devices that have been remembered using {@link rememberDevice}\n * for the currently authenticated user.\n *\n * @returns FetchDevicesOutput\n * @throws {@link ListDevicesException}\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function fetchDevices() {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession();\n    assertAuthTokens(tokens);\n    const listDevices = createListDevicesClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const response = await listDevices({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.FetchDevices),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        Limit: MAX_DEVICES,\n    });\n    return parseDevicesResponse(response.Devices ?? []);\n}\nconst parseDevicesResponse = async (devices) => {\n    return devices.map(({ DeviceKey: id = '', DeviceAttributes = [], DeviceCreateDate, DeviceLastModifiedDate, DeviceLastAuthenticatedDate, }) => {\n        let deviceName;\n        const attributes = DeviceAttributes.reduce((attrs, { Name, Value }) => {\n            if (Name && Value) {\n                if (Name === 'device_name')\n                    deviceName = Value;\n                attrs[Name] = Value;\n            }\n            return attrs;\n        }, {});\n        return {\n            id,\n            name: deviceName,\n            attributes,\n            createDate: DeviceCreateDate\n                ? new Date(DeviceCreateDate * 1000)\n                : undefined,\n            lastModifiedDate: DeviceLastModifiedDate\n                ? new Date(DeviceLastModifiedDate * 1000)\n                : undefined,\n            lastAuthenticatedDate: DeviceLastAuthenticatedDate\n                ? new Date(DeviceLastAuthenticatedDate * 1000)\n                : undefined,\n        };\n    });\n};\n\nexport { fetchDevices };\n//# sourceMappingURL=fetchDevices.mjs.map\n","import { assertCredentialIsPkcWithAuthenticatorAttestationResponse } from './types/index.mjs';\nimport { deserializeJsonToPkcCreationOptions, serializePkcWithAttestationToJson } from './serde.mjs';\nimport { assertPasskeyError, PasskeyErrorCode, handlePasskeyRegistrationError } from './errors.mjs';\nimport { getIsPasskeySupported } from './getIsPasskeySupported.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Registers a new passkey for user\n * @param input - PasskeyCreateOptionsJson\n * @returns serialized PasskeyCreateResult\n */\nconst registerPasskey = async (input) => {\n    try {\n        const isPasskeySupported = getIsPasskeySupported();\n        assertPasskeyError(isPasskeySupported, PasskeyErrorCode.PasskeyNotSupported);\n        const passkeyCreationOptions = deserializeJsonToPkcCreationOptions(input);\n        const credential = await navigator.credentials.create({\n            publicKey: passkeyCreationOptions,\n        });\n        assertCredentialIsPkcWithAuthenticatorAttestationResponse(credential);\n        return serializePkcWithAttestationToJson(credential);\n    }\n    catch (err) {\n        throw handlePasskeyRegistrationError(err);\n    }\n};\n\nexport { registerPasskey };\n//# sourceMappingURL=registerPasskey.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createStartWebAuthnRegistrationClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('StartWebAuthnRegistration'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createStartWebAuthnRegistrationClient };\n//# sourceMappingURL=createStartWebAuthnRegistrationClient.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createCompleteWebAuthnRegistrationClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('CompleteWebAuthnRegistration'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createCompleteWebAuthnRegistrationClient };\n//# sourceMappingURL=createCompleteWebAuthnRegistrationClient.mjs.map\n","import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../../providers/cognito/utils/types.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../../providers/cognito/factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { getRegionFromUserPoolId } from '../../foundation/parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../utils/getAuthUserAgentValue.mjs';\nimport { registerPasskey } from '../utils/passkey/registerPasskey.mjs';\nimport '../utils/passkey/errors.mjs';\nimport { assertValidCredentialCreationOptions } from '../utils/passkey/types/shared.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../common/AuthErrorStrings.mjs';\nimport '../../errors/types/validation.mjs';\nimport '../../providers/cognito/types/errors.mjs';\nimport { createStartWebAuthnRegistrationClient } from '../../foundation/factories/serviceClients/cognitoIdentityProvider/createStartWebAuthnRegistrationClient.mjs';\nimport { createCompleteWebAuthnRegistrationClient } from '../../foundation/factories/serviceClients/cognitoIdentityProvider/createCompleteWebAuthnRegistrationClient.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Registers a new passkey for an authenticated user\n *\n * @returns Promise<void>\n * @throws - {@link PasskeyError}:\n * - Thrown when intermediate state is invalid\n * @throws - {@link AuthError}:\n * - Thrown when user is unauthenticated\n * @throws - {@link StartWebAuthnRegistrationException}\n * - Thrown due to a service error retrieving WebAuthn registration options\n * @throws - {@link CompleteWebAuthnRegistrationException}\n * - Thrown due to a service error when verifying WebAuthn registration result\n */\nasync function associateWebAuthnCredential() {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession();\n    assertAuthTokens(tokens);\n    const startWebAuthnRegistration = createStartWebAuthnRegistrationClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { CredentialCreationOptions: credentialCreationOptions } = await startWebAuthnRegistration({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.StartWebAuthnRegistration),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n    });\n    assertValidCredentialCreationOptions(credentialCreationOptions);\n    const cred = await registerPasskey(credentialCreationOptions);\n    const completeWebAuthnRegistration = createCompleteWebAuthnRegistrationClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await completeWebAuthnRegistration({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.CompleteWebAuthnRegistration),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        Credential: cred,\n    });\n}\n\nexport { associateWebAuthnCredential };\n//# sourceMappingURL=associateWebAuthnCredential.mjs.map\n","import { assertPasskeyError, PasskeyErrorCode } from '../errors.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction assertValidCredentialCreationOptions(credentialCreationOptions) {\n    assertPasskeyError([\n        !!credentialCreationOptions,\n        !!credentialCreationOptions?.challenge,\n        !!credentialCreationOptions?.user,\n        !!credentialCreationOptions?.rp,\n        !!credentialCreationOptions?.pubKeyCredParams,\n    ].every(Boolean), PasskeyErrorCode.InvalidPasskeyRegistrationOptions);\n}\n\nexport { assertValidCredentialCreationOptions };\n//# sourceMappingURL=shared.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createListWebAuthnCredentialsClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('ListWebAuthnCredentials'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createListWebAuthnCredentialsClient };\n//# sourceMappingURL=createListWebAuthnCredentialsClient.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport { listWebAuthnCredentials as listWebAuthnCredentials$1 } from '../../foundation/apis/listWebAuthnCredentials.mjs';\nimport '@aws-amplify/core/internals/utils';\nimport '../../providers/cognito/utils/types.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../common/AuthErrorStrings.mjs';\nimport '../../errors/types/validation.mjs';\nimport '../../providers/cognito/types/errors.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Lists registered credentials for an authenticated user\n *\n * @param {ListWebAuthnCredentialsInput} input The list input parameters including page size and next token.\n * @returns Promise<ListWebAuthnCredentialsOutput>\n * @throws - {@link AuthError}:\n * - Thrown when user is unauthenticated\n * @throws - {@link ListWebAuthnCredentialsException}\n * - Thrown due to a service error when listing WebAuthn credentials\n */\nasync function listWebAuthnCredentials(input) {\n    return listWebAuthnCredentials$1(Amplify, input);\n}\n\nexport { listWebAuthnCredentials };\n//# sourceMappingURL=listWebAuthnCredentials.mjs.map\n","import { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../../providers/cognito/utils/types.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../../providers/cognito/factories/createCognitoUserPoolEndpointResolver.mjs';\nimport '@aws-amplify/core';\nimport { getRegionFromUserPoolId } from '../parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../common/AuthErrorStrings.mjs';\nimport '../../errors/types/validation.mjs';\nimport '../../providers/cognito/types/errors.mjs';\nimport { createListWebAuthnCredentialsClient } from '../factories/serviceClients/cognitoIdentityProvider/createListWebAuthnCredentialsClient.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nasync function listWebAuthnCredentials(amplify, input) {\n    const authConfig = amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await amplify.Auth.fetchAuthSession();\n    assertAuthTokens(tokens);\n    const listWebAuthnCredentialsResult = createListWebAuthnCredentialsClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { Credentials: commandCredentials = [], NextToken: nextToken } = await listWebAuthnCredentialsResult({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ListWebAuthnCredentials),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        MaxResults: input?.pageSize,\n        NextToken: input?.nextToken,\n    });\n    const credentials = commandCredentials.map(item => ({\n        credentialId: item.CredentialId,\n        friendlyCredentialName: item.FriendlyCredentialName,\n        relyingPartyId: item.RelyingPartyId,\n        authenticatorAttachment: item.AuthenticatorAttachment,\n        authenticatorTransports: item.AuthenticatorTransports,\n        createdAt: item.CreatedAt ? new Date(item.CreatedAt * 1000) : undefined,\n    }));\n    return {\n        credentials,\n        nextToken,\n    };\n}\n\nexport { listWebAuthnCredentials };\n//# sourceMappingURL=listWebAuthnCredentials.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createDeleteWebAuthnCredentialClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('DeleteWebAuthnCredential'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createDeleteWebAuthnCredentialClient };\n//# sourceMappingURL=createDeleteWebAuthnCredentialClient.mjs.map\n","import { Amplify } from '@aws-amplify/core';\nimport '@aws-amplify/core/internals/utils';\nimport '../../providers/cognito/utils/types.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../common/AuthErrorStrings.mjs';\nimport '../../errors/types/validation.mjs';\nimport '../../providers/cognito/types/errors.mjs';\nimport { deleteWebAuthnCredential as deleteWebAuthnCredential$1 } from '../../foundation/apis/deleteWebAuthnCredential.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Delete a registered credential for an authenticated user by credentialId\n * @param {DeleteWebAuthnCredentialInput} input The delete input parameters including the credentialId\n * @returns Promise<void>\n * @throws - {@link AuthError}:\n * - Thrown when user is unauthenticated\n * @throws - {@link DeleteWebAuthnCredentialException}\n * - Thrown due to a service error when deleting a WebAuthn credential\n */\nasync function deleteWebAuthnCredential(input) {\n    return deleteWebAuthnCredential$1(Amplify, input);\n}\n\nexport { deleteWebAuthnCredential };\n//# sourceMappingURL=deleteWebAuthnCredential.mjs.map\n","import { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../../providers/cognito/utils/types.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../../providers/cognito/factories/createCognitoUserPoolEndpointResolver.mjs';\nimport '@aws-amplify/core';\nimport { getRegionFromUserPoolId } from '../parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../common/AuthErrorStrings.mjs';\nimport '../../errors/types/validation.mjs';\nimport '../../providers/cognito/types/errors.mjs';\nimport { createDeleteWebAuthnCredentialClient } from '../factories/serviceClients/cognitoIdentityProvider/createDeleteWebAuthnCredentialClient.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nasync function deleteWebAuthnCredential(amplify, input) {\n    const authConfig = amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await amplify.Auth.fetchAuthSession();\n    assertAuthTokens(tokens);\n    const deleteWebAuthnCredentialResult = createDeleteWebAuthnCredentialClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await deleteWebAuthnCredentialResult({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.DeleteWebAuthnCredential),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        CredentialId: input.credentialId,\n    });\n}\n\nexport { deleteWebAuthnCredential };\n//# sourceMappingURL=deleteWebAuthnCredential.mjs.map\n"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__556__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","AmplifyError","Error","constructor","message","name","recoverySuggestion","underlyingError","super","setPrototypeOf","getCrypto","window","crypto","base64Decoder","convert","input","options","inputStr","urlSafe","replace","atob","getAtob","createAssertionFunction","errorMap","AssertionError","assertion","additionalContext","AuthConfigurationErrorCode","AuthTokenConfigException","AuthUserPoolAndIdentityPoolException","AuthUserPoolException","InvalidIdentityPoolIdException","OAuthNotConfigureException","assertTokenProviderConfig","cognitoConfig","assertionValid","userPoolId","userPoolClientId","assertOAuthConfig","loginWith","oauth","domain","redirectSignOut","redirectSignIn","responseType","decodeJWT","token","tokenParts","split","length","base64","jsonStr","decodeURIComponent","map","char","charCodeAt","toString","slice","join","payload","JSON","parse","err","Framework","Category","AiAction","AnalyticsAction","ApiAction","AuthAction","DataStoreAction","GeoAction","InAppMessagingAction","InteractionsAction","PredictionsAction","PubSubAction","PushNotificationAction","StorageAction","AuthValidationErrorCode","validationErrorMap","EmptyChallengeResponse","EmptyConfirmResetPasswordUsername","EmptyConfirmSignUpCode","EmptyConfirmSignUpUsername","EmptyConfirmResetPasswordConfirmationCode","EmptyConfirmResetPasswordNewPassword","EmptyResendSignUpCodeUsername","EmptyResetPasswordUsername","EmptySignInPassword","EmptySignInUsername","EmptySignUpPassword","EmptySignUpUsername","CustomAuthSignInPassword","IncorrectMFAMethod","EmptyVerifyTOTPSetupCode","EmptyUpdatePassword","EmptyConfirmUserAttributeCode","AuthErrorStrings","AuthErrorCodes","params","assertValidationError","getRegionFromUserPoolId","region","indexOf","toAttributeType","attributes","entries","Name","Value","USER_AGENT_HEADER","LogType","LOG_LEVELS","VERBOSE","DEBUG","INFO","WARN","ERROR","NONE","ConsoleLogger","level","_pluggables","_padding","n","_ts","dt","Date","getMinutes","getSeconds","getMilliseconds","configure","config","_config","_log","type","msg","loggerLevelName","LOG_LEVEL","log","console","bind","error","warn","BIND_ALL_LOG_LEVELS","info","debug","prefix","plugin","logEvent","timestamp","now","pushLogs","verbose","addPluggable","pluggable","getCategoryName","push","listPluggables","AMPLIFY_SYMBOL","logger","HubClass","listeners","Map","protectedChannels","_remove","channel","listener","holder","set","filter","callback","dispatch","source","ampSymbol","capsule","patternInfo","_toListeners","e","listen","listenerName","cb","forEach","HubInternal","AmplifyUrl","URL","base64Encoder","skipPadding","Array","from","byte","String","fromCodePoint","bytesToString","encodedStr","btoa","getBtoa","getDeviceName","async","userAgentData","navigator","userAgent","platform","platformVersion","model","architecture","fullVersionList","getHighEntropyValues","v","brand","version","AssociateSoftwareTokenException","ChangePasswordException","ConfirmDeviceException","ConfirmForgotPasswordException","ConfirmSignUpException","DeleteUserAttributesException","DeleteUserException","ForgetDeviceException","ForgotPasswordException","GetUserException","GetIdException","GetCredentialsForIdentityException","GetUserAttributeVerificationException","GlobalSignOutException","InitiateAuthException","ResendConfirmationException","RespondToAuthChallengeException","SetUserMFAPreferenceException","SignUpException","UpdateUserAttributesException","VerifySoftwareTokenException","VerifyUserAttributeException","UpdateDeviceStatusException","ListDevicesException","SETUP_TOTP_EXCEPTION","USER_ALREADY_AUTHENTICATED_EXCEPTION","DEVICE_METADATA_NOT_FOUND_EXCEPTION","AUTO_SIGN_IN_EXCEPTION","invalidRedirectException","invalidPreferredRedirectUrlException","invalidOriginException","OAUTH_SIGNOUT_EXCEPTION","assertAuthTokens","tokens","accessToken","oAuthTokenRefreshException","tokenRefreshException","assertAuthTokensWithRefreshToken","isAuthenticated","refreshToken","isAuthenticatedWithImplicitOauthFlow","isAuthenticatedWithRefreshToken","assertDeviceMetadata","deviceMetadata","deviceKey","deviceGroupKey","randomPassword","OAuthStorageKeys","inflightOAuth","oauthSignIn","oauthPKCE","oauthState","idToken","amplify","authConfig","getConfig","Auth","Cognito","getTokens","forceRefresh","username","sub","authUser","userId","signInDetails","getSignInDetailsFromTokens","getCurrentUser","Amplify","globalExists","global","windowExists","documentExists","document","processExists","process","keyPrefixMatch","object","keys","find","startsWith","detectionMap","Expo","detectionMethod","expo","ReactNative","product","NextJs","next","Nuxt","__NUXT__","$nuxt","Angular","angularVersionSetInDocument","Boolean","querySelector","angularContentSetInWindow","ng","React","elementKeyPrefixedWithReact","querySelectorAll","some","element","VueJs","Svelte","WebUnknown","NextJsSSR","NuxtSSR","__NUXT_PATHS__","ReactSSR","env","includes","VueJsSSR","AngularSSR","npm_lifecycle_script","SvelteSSR","frameworkCache","frameworkChangeObservers","resetTriggered","detectFramework","detectionEntry","ServerSideUnknown","pop","fcn","resetTimeout","framework","delay","setTimeout","customUserAgentState","BASE_USER_AGENT","sanitizeAmplifyVersion","amplifyVersion","isReactNative","observeFrameworkChanges","getAmplifyUserAgent","customUserAgentDetails","category","action","customState","api","additionalDetails","getCustomUserAgent","state","getAmplifyUserAgentObject","agentKey","agentValue","getAuthUserAgentValue","composeServiceApi","transferHandler","serializer","deserializer","defaultConfig","resolvedConfig","endpoint","endpointResolver","request","response","createUserPoolSerializer","operation","headers","getSharedHeaders","body","stringify","buildHttpRpcRequest","url","method","parseMetadata","statusCode","isMetadataBearer","$metadata","httpStatusCode","requestId","extendedRequestId","cfId","parseJsonError","parseJsonBody","code","rawValue","cleanValue","sanitizeErrorCode","__type","Message","assign","output","json","AmplifyErrorCode","assertServiceError","TypeError","Unknown","createUserPoolDeserializer","composeTransferHandler","coreHandler","middleware","context","composedHandler","composeHandlerRequest","i","m","resolvedMiddleware","cancellableSleep","timeoutMs","abortSignal","aborted","Promise","resolve","timeoutId","sleepPromiseResolveFn","sleepPromise","addEventListener","cancelSleep","_","clearTimeout","removeEventListener","addOrIncrementMetadataAttempts","nextHandlerOutput","attempts","withMemoization","payloadAccessor","cached","shouldSendBody","toUpperCase","unauthenticatedHandler","cache","withCrossDomainCredentials","resp","fetch","signal","credentials","NetworkError","responseHeaders","toLowerCase","status","text","blob","userAgentHeader","userAgentValue","trim","headerName","maxAttempts","retryDecider","computeDelay","attemptsCount","handleTerminalErrorOrResponse","isCredentialsExpiredError","retryable","isCredentialsExpired","cognitoUserPoolTransferHandler","CLOCK_SKEW_ERROR_CODES","THROTTLING_ERROR_CODES","TIMEOUT_ERROR_CODES","isThrottlingError","errorCode","isConnectionError","isServerSideError","DEFAULT_MAX_DELAY_MS","COGNITO_IDP_SERVICE_NAME","DEFAULT_SERVICE_CLIENT_API_CONFIG","service","errorParser","parsedError","isClockSkewError","attempt","delayFunction","maxDelayMs","Math","random","jitteredBackoff","createInitiateAuthClient","createRespondToAuthChallengeClient","createVerifySoftwareTokenClient","createAssociateSoftwareTokenClient","createConfirmDeviceClient","defaultPartition","id","outputs","dnsSuffix","regionRegex","regions","partitionsInfo","partitions","getDnsSuffix","regex","RegExp","test","createCognitoUserPoolEndpointResolver","endpointOverride","cognitoUserPoolEndpointResolver","getUserContextData","amazonCognitoAdvancedSecurityData","AmazonCognitoAdvancedSecurityData","advancedSecurityData","getData","EncodedData","refreshAuthTokens","asyncFunction","inflightPromise","args","reject","then","result","catch","finally","deDupeAsyncFunction","userPoolEndpoint","refreshTokenString","AuthParameters","REFRESH_TOKEN","DEVICE_KEY","UserContextData","initiateAuth","AuthenticationResult","ClientId","AuthFlow","AccessToken","IdToken","iat","clockDrift","getTime","AuthTokenStorageKeys","oidcProvider","randomPasswordKey","oauthMetadata","TokenProviderErrorCode","InvalidAuthTokens","DefaultTokenStore","getKeyValueStorage","keyValueStorage","setKeyValueStorage","setAuthConfig","loadTokens","authKeys","getAuthKeys","accessTokenString","getItem","itString","clockDriftString","Number","parseInt","getDeviceMetadata","getLastAuthUser","storeTokens","clearTokens","lastAuthUser","setItem","getLastAuthUserKey","all","removeItem","clearDeviceMetadata","createKeysForAuthStorage","identifier","setOAuthMetadata","metadata","oauthMetadataKey","getOAuthMetadata","provider","getAuthStorageKeys","values","reduce","acc","authKey","isBrowser","isTokenExpired","expiresAt","V5_HOSTED_UI_KEY","DefaultOAuthStore","clearOAuthInflightData","clearOAuthData","loadOAuthState","storeOAuthState","loadPKCE","storePKCE","pkce","authConfigParam","loadOAuthInFlight","storeOAuthInFlight","inflight","loadOAuthSignIn","isLegacyHostedUISignIn","isOAuthSignIn","preferPrivateSession","storeOAuthSignIn","oAuthStore","defaultStorage","inflightPromises","resolveAndClearInflightPromises","TokenOrchestrator","waitForInflightOAuth","_reject","resolver","setTokenRefresher","tokenRefresher","setAuthTokenStore","tokenStore","getTokenStore","getTokenRefresher","_err","idTokenExpired","exp","accessTokenExpired","refreshTokens","newTokens","setTokens","Hub","event","handleErrors","data","cognitoUserPoolsTokenProvider","authTokenStore","tokenOrchestrator","cacheCognitoTokens","accessTokenIssuedAtInMillis","currentTime","RefreshToken","NewDeviceMetadata","dispatchSignedInHubEvent","signInStore","reducer","currentState","challengeName","signInSession","getState","createStore","setActiveSignInState","cleanActiveSignInState","PasskeyError","PasskeyErrorCode","notSupportedRecoverySuggestion","abortOrCancelRecoverySuggestion","misconfigurationRecoverySuggestion","passkeyErrorMap","PasskeyNotSupported","InvalidPasskeyRegistrationOptions","InvalidPasskeyAuthenticationOptions","PasskeyRegistrationFailed","PasskeyRetrievalFailed","PasskeyAlreadyExists","PasskeyRegistrationCanceled","PasskeyAuthenticationCanceled","PasskeyOperationAborted","RelyingPartyMismatch","assertPasskeyError","handlePasskeyError","getIsPasskeySupported","isSecureContext","PublicKeyCredential","convertArrayBufferToBase64Url","buffer","Uint8Array","convertBase64UrlToArrayBuffer","base64url","x","getPasskey","isPasskeySupported","passkeyGetOptions","challengeBuffer","challenge","allowedCredentialsWithBuffer","allowCredentials","allowedCred","deserializeJsonToPkcGetOptions","credential","publicKey","AuthenticatorAssertionResponse","assertCredentialIsPkcWithAuthenticatorAssertionResponse","clientDataJSON","authenticatorData","signature","userHandle","resultJson","rawId","clientExtensionResults","getClientExtensionResults","authenticatorAttachment","serializePkcWithAssertionToJson","handlePasskeyAuthenticationError","textEncoder","TextEncoder","encode","BigInteger","a","b","fromString","nbi","dbits","inBrowser","appName","am","w","j","c","xl","xh","l","h","floor","DB","DM","DV","FV","pow","F1","F2","BI_RC","rr","vv","int2char","charAt","intAt","s","nbv","fromInt","nbits","t","Montgomery","mp","invDigit","mpl","mph","um","mt2","abs","dlShiftTo","divRemTo","compareTo","ZERO","subTo","revert","copyTo","u0","clamp","drShiftTo","mulTo","y","multiplyTo","sqrTo","squareTo","k","mi","sh","max","lShiftTo","bs","cbs","bm","ds","rShiftTo","min","q","pm","pt","ts","ms","nsh","ys","y0","yt","d1","d2","ONE","qd","addTo","negate","km","p","bitLength","mod","equals","add","subtract","multiply","divide","modPow","z","g","k1","g2","is1","r2","SHORT_TO_HEX","HEX_TO_SHORT","encodedByte","getBytesFromHex","encoded","out","create","SuppressedError","BLOCK_SIZE","KEY","Uint32Array","INIT","MAX_HASHABLE_LENGTH","RawSha256","Int32Array","temp","bufferLength","bytesHashed","finished","update","position","byteLength","hashBuffer","digest","bitsHashed","bufferView","DataView","byteOffset","undecoratedLength","setUint8","setUint32","state0","state1","state2","state3","state4","state5","state6","state7","u","t1_1","t2_1","t1","t2","Buffer","convertToBuffer","ArrayBuffer","isView","BYTES_PER_ELEMENT","Sha256","secret","hash","reset","toHash","digestSync","outer","thisArg","_arguments","generator","f","label","sent","trys","ops","Iterator","verb","iterator","op","done","step","__generator","_a","P","fulfilled","rejected","apply","inner","bufferHash","bufferFromSecret","getHexFromBytes","bytes","getHashFromData","sha256","hashedData","hashHexFromUint8","getHashFromHex","hexStr","HEX_MSB_REGEX","getPaddedHex","bigInt","isNegative","invertedNibbles","invertedNibble","substring","WordArray","words","sigBytes","Words","nBytes","getRandomValues","wordArray","hexChars","bite","hexStringify","getRandomBytes","str","AuthenticationHelper","userPoolName","A","N","encoder","getRandomPassword","getSaltToHashDevices","saltToHashDevices","getVerifierDevices","verifierDevices","generateHashDevice","combinedString","hashedString","hexRandom","getPasswordAuthenticationKey","password","serverBValue","salt","U","B","calculateU","usernamePassword","usernamePasswordHash","S","outerErr","outerResult","innerErr","innerResult","calculateS","spacer","fromCharCode","hkdfKey","ikm","awsCryptoHash","resultFromAWSCryptoPrk","awsCryptoHashHmac","getHkdfKey","getAuthenticationHelper","generateRandomBigInteger","calculateA","handlePasswordSRP","clientMetadata","authFlow","preferredChallenge","authenticationHelper","authParameters","USERNAME","SRP_A","PREFERRED_CHALLENGE","jsonReq","ClientMetadata","SignIn","ChallengeParameters","challengeParameters","Session","session","activeUsername","setActiveSignInUsername","ChallengeName","retryOnResourceNotFoundException","handlePasswordVerifierChallenge","MONTH_NAMES","WEEK_NAMES","getNowString","weekDay","getUTCDay","month","getUTCMonth","day","getUTCDate","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","getUTCFullYear","getSignatureString","dateNow","hkdf","bufUPIDaToB","bufUNaToB","bufSBaToB","urlB64ToUint8Array","SECRET_BLOCK","bufDNaToB","bufConcat","resultFromAWSCrypto","base64String","repeat","rawData","outputArray","USER_ATTRIBUTES","handleCustomChallenge","challengeResponse","challengeResponses","ANSWER","ChallengeResponses","respondToAuthChallenge","ConfirmSignIn","handleDeviceSRPAuth","handleUserPasswordAuthFlow","PASSWORD","USER_ID_FOR_SRP","handleCustomAuthFlowWithoutSRP","clientId","jsonReqResponseChallenge","respondedChallengeParameters","SRP_B","SALT","PASSWORD_CLAIM_SECRET_BLOCK","TIMESTAMP","PASSWORD_CLAIM_SIGNATURE","handleDevicePasswordVerifier","getSignInResult","availableChallenges","isSignedIn","nextStep","signInStep","additionalInfo","mfaSetupTypes","getMFATypes","parseMFATypes","MFAS_CAN_SETUP","allowedMfaSetupTypes","authMfaType","isTotpMfaSetupAvailable","isEmailMfaSetupAvailable","allowedMFATypes","associateSoftwareToken","SecretCode","secretCode","totpSetupDetails","getTOTPSetupDetails","SignInException","missingAttributes","parseAttributes","requiredAttributes","MFAS_CAN_CHOOSE","codeDeliveryDetails","deliveryMedium","CODE_DELIVERY_DELIVERY_MEDIUM","destination","CODE_DELIVERY_DESTINATION","CREDENTIAL_REQUEST_OPTIONS","credentialRequestOptions","cred","nextChallengeName","nextChallengeParameters","authenticationResult","nextSession","CREDENTIAL","getNewDeviceMetadata","newDeviceMetadata","handleWebAuthnSignInResult","sharedSecret","getSetupUri","accountName","getSignInResultFromError","errorName","PasswordResetRequiredException","UserNotConfirmedException","att","createAttributes","newAttributes","mapMfaType","mfa","mfaType","getMFAType","types","assertUserNotAuthenticated","DeviceKey","DeviceGroupKey","errGenHash","deviceSecretVerifierConfig","Salt","PasswordVerifier","confirmDevice","DeviceName","DeviceSecretVerifierConfig","func","getActiveSignInUsername","autoSignInStore","active","createAutoSignInStore","initialAutoSignIn","autoSignIn","setAutoSignIn","resetAutoSignIn","resetCallback","signInWithUserAuth","loginId","authFlowType","clientMetaData","handleUserAuthFlowInput","autoSignInStoreState","handleUserAuthFlow","AvailableChallenges","signIn","handledChallengeName","handledChallengeParameters","handleUserSRPAuthFlow","signInWithSRP","retiredChallengeName","retriedChallengeParameters","signInWithUserPassword","retriedChallengeName","retiredChallengeParameters","signInWithCustomAuth","CHALLENGE_NAME","handleCustomSRPAuthFlow","signInWithCustomSRPAuth","MAX_AUTOSIGNIN_POLLING_MS","debounce","fun","timer","debouncedAutoSignInWithLink","signInInput","start","autoSignInPollingIntervalId","setInterval","clearInterval","signInOutput","debouncedAutoSignWithCodeOrUserConfirmed","autoSignInWithCode","autoSignInUserConfirmed","createSignUpClient","InvalidParameterException","signUp","signUpVerificationMethod","validationData","signInServiceOptions","signUpClient","signUpClientInput","Username","Password","UserAttributes","userAttributes","ValidationData","UserSub","CodeDeliveryDetails","cdd","UserConfirmed","userConfirmed","SignUp","Destination","DeliveryMedium","attributeName","AttributeName","isSignUpComplete","isAutoSignInStarted","signUpStep","autoSignInWhenUserIsConfirmedWithLink","stopHubListener","timeOutId","handleCodeAutoSignIn","createForgotPasswordClient","resetPassword","forgotPassword","ResetPassword","isPasswordReset","resetPasswordStep","createConfirmForgotPasswordClient","confirmResetPassword","newPassword","confirmationCode","confirmForgotPassword","ConfirmResetPassword","ConfirmationCode","createResendConfirmationCodeClient","resendSignUpCode","resendConfirmationCode","ResendSignUpCode","createConfirmSignUpClient","confirmSignUp","confirmSignUpClient","ConfirmSignUp","ForceAliasCreation","forceAliasCreation","signUpOut","stopListener","confirmSignIn","deviceName","friendlyDeviceName","selectedChallenge","initiateSelectedChallenge","handleSelectMFATypeChallenge","verifySoftwareToken","UserCode","FriendlyDeviceName","EMAIL","handleMFASetupChallenge","NEW_PASSWORD","handleCompleteNewPasswordChallenge","EMAIL_OTP_CODE","SMS_MFA_CODE","SMS_OTP_CODE","SOFTWARE_TOKEN_MFA_CODE","handleMFAChallenge","userContextData","handleSelectChallengeWithPassword","handleSelectChallengeWithPasswordSRP","handleChallengeName","createSetUserMFAPreferenceClient","updateMFAPreference","sms","totp","email","fetchAuthSession","setUserMFAPreference","UpdateMFAPreference","SMSMfaSettings","getMFASettings","SoftwareTokenMfaSettings","EmailMfaSettings","mfaPreference","Enabled","PreferredMfa","createGetUserClient","fetchMFAPreference","getUser","PreferredMfaSetting","UserMFASettingList","FetchMFAPreference","preferred","enabled","verifyTOTPSetup","VerifyTOTPSetup","createChangePasswordClient","updatePassword","oldPassword","changePassword","UpdatePassword","PreviousPassword","ProposedPassword","setUpTOTP","SetUpTOTP","updateUserAttributes","updateUserAttributesClient","CodeDeliveryDetailsList","UpdateUserAttributes","getConfirmedAttributes","getUnConfirmedAttributes","confirmedAttributes","isUpdated","updateAttributeStep","codeDeliveryDetailsList","unConfirmedAttributes","updateUserAttribute","userAttribute","attributeKey","createVerifyUserAttributeClient","confirmUserAttribute","userAttributeKey","verifyUserAttribute","ConfirmUserAttribute","Code","ADD_OAUTH_LISTENER","authErrorMessages","OAUTH_ERROR","createOAuthError","DEFAULT_MSG","EMPTY_USERNAME","INVALID_USERNAME","EMPTY_PASSWORD","EMPTY_CODE","SIGN_UP_ERROR","NO_MFA","INVALID_MFA","EMPTY_CHALLENGE","NO_USER_SESSION","DEVICE_CONFIG","NETWORK_ERROR","AUTOSIGNIN_ERROR","OAuthSignInError","AuthErrorTypes","validateState","savedState","validatedState","completeOAuthFlow","currentUrl","redirectUri","urlParams","searchParams","errorMessage","handleCodeFlow","handleImplicitFlow","oAuthTokenEndpoint","codeVerifier","oAuthTokenBody","grant_type","client_id","redirect_uri","code_verifier","encodeURIComponent","access_token","refresh_token","id_token","error_message","token_type","expires_in","TokenType","ExpiresIn","completeFlow","error_description","pairings","accum","hex","isCustomState","getCustomState","match","clearHistory","splice","history","replaceState","getRedirectUrl","redirects","preferredRedirectUrl","redirectUrl","redirect","redirectUrlFromTheSameOrigin","isSameOriginAndPathName","isTheSameDomain","redirectUrlFromDifferentOrigin","isHttps","isHttp","location","origin","pathname","hostname","handleFailure","href","SignInWithRedirect","cognitoHostedUIIdentityProviderMap","Google","Facebook","Amazon","Apple","openAuthSession","signInWithRedirect","custom","oauthConfig","scopes","randomState","STATE_CHARSET","generateRandomString","padStart","toCodeChallenge","randomBytes","codeChallenge","CODE_VERIFIER_CHARSET","generateCodeChallenge","generateCodeVerifier","oAuthUrl","response_type","identity_provider","scope","code_challenge","code_challenge_method","store","handleCancelOAuthFlow","persisted","FetchUserAttributes","attribute","toAuthUserAttribute","fetchUserAttributes","completeOAuthSignOut","clearCredentials","handleOAuthSignOut","signoutUri","oAuthLogoutEndpoint","logout_uri","oAuthSignOutRedirect","createRevokeTokenClient","createGlobalSignOutClient","signOut","hasOAuthConfig","authTokens","globalSignOutClient","SignOut","globalSignOut","isSessionRevocable","revokeToken","Token","clientSignOut","origin_jti","sendUserAttributeVerificationCode","getUserAttributeVerificationCode","SendUserAttributeVerificationCode","createDeleteUserAttributesClient","deleteUserAttributes","userAttributeKeys","deleteUserAttributesClient","DeleteUserAttributes","UserAttributeNames","createEmptyResponseDeserializer","createDeleteUserClient","deleteUser","serviceDeleteUser","DeleteUser","createUpdateDeviceStatusClient","rememberDevice","updateDeviceStatus","RememberDevice","DeviceRememberedStatus","createForgetDeviceClient","forgetDevice","device","externalDeviceKey","currentDeviceKey","serviceForgetDevice","ForgetDevice","createListDevicesClient","MAX_DEVICES","fetchDevices","listDevices","FetchDevices","Limit","parseDevicesResponse","Devices","devices","DeviceAttributes","DeviceCreateDate","DeviceLastModifiedDate","DeviceLastAuthenticatedDate","attrs","createDate","lastModifiedDate","lastAuthenticatedDate","registerPasskey","passkeyCreationOptions","userIdBuffer","user","excludeCredentialsWithBuffer","excludeCredentials","excludeCred","deserializeJsonToPkcCreationOptions","AuthenticatorAttestationResponse","assertCredentialIsPkcWithAuthenticatorAttestationResponse","attestationObject","transports","getTransports","publicKeyAlgorithm","getPublicKeyAlgorithm","getAuthenticatorData","getPublicKey","serializePkcWithAttestationToJson","handlePasskeyRegistrationError","createStartWebAuthnRegistrationClient","createCompleteWebAuthnRegistrationClient","associateWebAuthnCredential","startWebAuthnRegistration","CredentialCreationOptions","credentialCreationOptions","StartWebAuthnRegistration","rp","pubKeyCredParams","every","assertValidCredentialCreationOptions","completeWebAuthnRegistration","CompleteWebAuthnRegistration","Credential","createListWebAuthnCredentialsClient","listWebAuthnCredentialsResult","Credentials","commandCredentials","NextToken","nextToken","ListWebAuthnCredentials","MaxResults","pageSize","item","credentialId","CredentialId","friendlyCredentialName","FriendlyCredentialName","relyingPartyId","RelyingPartyId","AuthenticatorAttachment","authenticatorTransports","AuthenticatorTransports","createdAt","CreatedAt","listWebAuthnCredentials","createDeleteWebAuthnCredentialClient","deleteWebAuthnCredentialResult","DeleteWebAuthnCredential","deleteWebAuthnCredential"],"sourceRoot":""}